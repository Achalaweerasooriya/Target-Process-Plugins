define(["Underscore","jQuery","tau/configurator","tau/components/component.assignmentsList","tests/common/testCase","tests/common/componentConfigCreator","tests/common/testData.Generator"],function(a,b,c,d,e,f,g){var h=function(){var b=new g;b.clear(),b.initDefaultData();var h=b.getUserStories(),i=b.getData(),j=b.getRoles(),k=h[3],l=k.id,m=new f;m.setEntityIDAndType(l,k.__type),m.setSelectedProjects([i.selectByType("project")[0]]),m.setProcesses(i.selectByType("process"));var n=m.getConfig(),o=new e("[component.assignmentsList]");n.editable=!0,o.initModule({componentConfig:n,data:i},d),o.test("should not refresh on save assignment from other entity",function(){var a=this.element,b=!1;this.component.on("refresh",function(){b=!0},this);var d=c.getStore(),e=j[1].id,f=h[0].assignments[0].id;this.serviceMock.registerSaveCommand({config:{id:f,$set:{role:{id:e}},fields:["id"]},returnedData:{id:f}}),d.save("assignment",{id:f,$set:{role:{id:e}}}).done(),this.component.removeAllListeners(this),equal(b,!1,"Refresh is not fired")}),o.test("should not refresh on remove assignment from other entity",function(){var a=!1;this.component.on("refresh",function(){a=!0},this);var b=c.getStore(),d=h[0].assignments[0].id;this.serviceMock.registerRemoveCommand({config:{id:d,fields:["id"]},returnedData:{id:d}}),b.remove("assignment",{id:d}).done(),this.component.removeAllListeners(this),equal(a,!1,"Refresh is not fired")}),o.test("should not refresh on save roleEffort from other entity",function(){var a=this.element,b=!1;this.component.on("refresh",function(){b=!0},this);var d=c.getStore(),e=j[1].id,f=h[0].roleEfforts[0].id;this.serviceMock.registerSaveCommand({config:{id:f,$set:{effortToDo:7},fields:["id"]},returnedData:{id:f}}),d.save("roleEffort",{id:f,$set:{effortToDo:7}}).done(),this.component.removeAllListeners(this),equal(b,!1,"Refresh is not fired")}),o.test("should not refresh when description of entity changed",function(){var b=!1;this.component.on("refresh",function(){b=!0},this);var d=c.getStore(),e={description:"New Description"};this.serviceMock.registerSaveCommand({config:{id:l,$set:e,fields:["id"]},returnedData:a.extend({id:l},e)}),d.save(k.__type,{id:l,$set:e}).done(),this.component.removeAllListeners(this),equal(b,!1,"Refresh is not fired")})};return{run:h}})