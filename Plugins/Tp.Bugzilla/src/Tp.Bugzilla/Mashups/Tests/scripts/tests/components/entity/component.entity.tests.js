define(["tau/configurator","tau/components/component.entity","tests/components/common/common.setup","tests/components/component.specs","tests/common/applicationContext"],function(a,b,c,d,e){var f=function(){a.setGlobalSettingsService({getGlobalSettings:function(a){a.success.call(a.scope,{IsEmailNotificationsEnabled:!1})}});var f={manualContext:!0,context:{entityType:{name:"UserStory"},id:15}},g=new e(f.context),h=c.create("[component.entity][without container config]",[g],b,{containerConfig:{cssClass:"tau-test-container-class"}}),i=[{name:"container element should be rendered to provided element",test:function(){ok(this.$el.is(".tau-test-container-class"),"container element is rendered")}}],j={name:"config container formed correctly",test:function(){var a=this.EventsDictonary.onConfigContainerCreated;equals(a.length,1,"single event about config container creation is fired");var b=a[0].data;same(b.context.entity,{entityType:{name:"UserStory"},id:15},"assignable attached correctly"),equals(b.context.applicationContext.id,15,"app context attached correctly"),equals(b.context.applicationContext.__type,"context","app context attached correctly")}};d.create(h,f).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests(i).on("onConfigContainerCreated",j).done()};return{run:f}})