define(["tau/core/tau","tau/components/component.userStoriesList","tests/common/testData","tests/components/common/common.setup","tests/components/component.specs","tests/common/checker","tests/common/applicationContext"],function(a,b,c,d,e,f,g){var h=function(){function i(a,b,c){var d={id:b,nested:!0,fields:["id"]},e={};e[c]=["id","name","effort",Similar.to({project:["id","name"]}),Similar.to({priority:["id","name"]}),Similar.to({entityState:["id","name","isinitial","isfinal"]}),Similar.to({release:["id","name"]}),Similar.to({iteration:["id","name"]}),Similar.to({roleEfforts:["id",Like.is({role:["id","name"]})]}),Similar.to({assignments:["id",Like.is({role:["id"]}),Similar.to({generalUser:["id","firstName","lastName"]})]})],d.fields.push(Similar.to(e));var f=Similar.to({name:"get",type:a,config:Similar.to(d)});return f}function m(a,b){var c=a.find("td");ok(c.eq(0).find("em").hasClass("ui-type-icon-"+b.__type.toLocaleLowerCase()),"Type is valid"),equals(c.eq(1).text().trim(),b.id.toString(),"ID"),equals(c.eq(2).text().trim(),b.name,"Name"),equals(c.eq(3).text().trim(),b.project.name,"Project name"),equals(c.eq(4).text().trim(),b.priority.name,"Priority name"),equals(c.eq(5).text().trim(),b.effort,"Effort"),equals(c.eq(6).text().trim(),b.entityState.name,"State"),equals(c.eq(7).text().trim(),(b.release.name||"Backlog")+(b.iteration.id?"/"+b.iteration.name:""),"Release / Iteration"),f.checkAssignments(c.eq(8),b.assignments)}var a=c.registerTestDataForUserStoriesListModel().data,h={context:{type:"feature",id:15}},j=[{__type:"userStory",id:1,name:"US1",effort:1,project:{id:1,name:"Project1"},priority:{id:1,name:"Low"},entityState:{id:1,name:"Open"},release:{id:1,name:"Release 1"},iteration:{id:11,name:"Iteration 2"},assignments:{groups:[{role:{id:1,name:"Dev."},users:[{id:1,name:"Vasili I.",assignmentId:309},{id:2,name:"Ivan V.",assignmentId:310}]}]}},{__type:"userStory",id:3,name:"US3",effort:2,project:{id:1,name:"Project1"},priority:{id:1,name:"Low"},entityState:{id:2,name:"In Progress"},release:{id:null,name:null},iteration:{id:null,name:null},assignments:{groups:[{role:{id:1,name:"Dev."},users:[]}]}},{__type:"userStory",id:2,name:"US2",effort:2,project:{id:1,name:"Project1"},priority:{id:1,name:"Low"},entityState:{id:3,name:"Closed"},release:{id:1,name:"Release 1"},iteration:{id:11,name:"Iteration 2"},assignments:{groups:[{role:{id:1,name:"Dev."},users:[{id:1,name:"Vasili I.",assignmentId:309},{id:2,name:"Ivan V.",assignmentId:310}]}]}}],k={items:j},l=[i("feature",15,"userStories")],n=[{name:"should render valid markup view",test:function(){var a=this.data,b=this.$el.find("table tr"),c=1+a.items.length;equals(b.length,c,"Count of entities is valid");var d=b.eq(0),e=b.eq(1);equals(d.find("th").length,e.find("td").length,"Count of cells in header and first row are equal");for(var f=1,g=b.length;f<g;f++){var h=b.eq(f),i=a.items[f-1];m(h,i)}}}],o={context:{applicationContext:new g}},p=d.create("[component.userStoriesList]",a,b,o);e.create(p,h).viewShouldFollowDataComponentLifeCycle().modelShouldReturnData(k,[l]).viewShouldPassTests(n).done()};return{run:h}})