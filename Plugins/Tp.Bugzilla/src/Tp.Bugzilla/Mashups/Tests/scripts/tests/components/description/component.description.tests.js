define(["Underscore","jQuery","tau/core/class","tau/components/component.description","tests/common/testData","tests/components/common/common.setup","tests/components/component.specs"],function(a,b,c,d,e,f,g){function h(d,e,h){function r(a){var c=this.$el;a=a||c.find(".ui-description__inner"),a.trigger(b.Event("mousedown",{pageX:0,pageY:0})),a.trigger(b.Event("mouseup",{pageX:0,pageY:0}))}function q(a){var b={};b[d]=a;return p([Similar.to({name:"save",type:"bug",config:Similar.to({id:e.id,$set:Like.is(b)})})],function(b){var c={id:b.config.id};c[d]=a,b.callbacks.success(c)})}function p(a,b){return{command:a,setup:function(a,b){this.repositoryMock.expects().execute(a).andStub(this.repository.execute.tauCreateDelegate(this.repository)),this.serviceMock.expects().save(TypeOf.isA(Object)).andStub(b.stub)},stub:function(a){var c=b||arguments.callee._test.executeStub;c.call(arguments.callee._test,a)}}}function o(a){return{command:a,setup:function(a){var b=[Like.is({eventName:"beforeSave",type:k.context.type,listener:TypeOf.isA(c)}),Like.is({eventName:"afterSave",type:k.context.type,listener:TypeOf.isA(c)})];for(var d=0;d<b.length;d++)this.repositoryMock.expects().on(b[d],TypeOf.isA(Function)).andStub(this.repository.on.tauCreateDelegate(this.repository));this.repositoryMock.expects().execute(a).andStub(this.repository.execute.tauCreateDelegate(this.repository))}}}function n(a){return function(b){b.mockRepository(this);var c=a.length;for(var d=0;d<c;d++){var e=a[d],f=e.command,g=e.setup||function(){},h=e.stub||function(){};h._test=this,g.call(this,f,e)}}}e=a.clone(e);var i=e[d];e[d]=i+'<img src="~/uploads/porn.jpg">';var j=i+'<img src="/TP/uploads/porn.jpg">',k={context:{type:"bug",id:e.id}},l={html:j},m=[Similar.to({name:"get",type:"bug",config:Similar.to({id:e.id,fields:["id",d]})})],s=[{name:"should render valid markup",test:function(){var a=this.$el;equals(b.trim(a.find(".ui-description__inner").html()).toLowerCase(),l.html.toLowerCase(),"Description text is valid")}},{name:"should render valid markup with img tags",test:function(){var a=this.$el;equals(a.find(".ui-description__inner img:first").attr("src"),this.rootAppPath+"/uploads/porn.jpg","Description image src is valid")}},{name:"should have rich editor",test:function(){var a=this.$el;r.call(this);var b=a.find(".ui-description__inner"),c=a.find("textarea");equals(c.length,1,"Give possibility to edit"),equals(c.val().trim().toLowerCase(),l.html.toLowerCase(),"Set text in editor")}},{name:"should save edited data",preSetup:n([o(m),q('Atis atis animatis atis atis amatis<img src="~/uploads/porn.jpg">edited'),o(m)]),test:function(){var a=this.$el;r.call(this);var b=a.find("textarea");b.val(b.val().trim()+"edited"),a.find(".ui-richeditor__controls__save").click();var c=a.find(".ui-description__inner");equals(c.html().trim().toLowerCase(),l.html.toLowerCase()+"edited","Edited text is saved")}},{name:"should correct save empty",preSetup:n([o(m),q(""),o(m)]),test:function(){var a=this.$el;r.call(this);var b=a.find("textarea");b.val(""),a.find(".ui-richeditor__controls__save").click(),equals(this.$el.find(".ui-description__inner").text(),"type text here...","Show placeholder text"),ok(this.$el.find(".ui-description__inner").hasClass("ui-description__inner_empty_true"),"Has class of empty field"),r.call(this),ok(this.$el.find(".ui-description__inner").hasClass("ui-description__inner_empty_true")==!1,"Has no class of empty field"),b=this.$el.find("textarea"),equals(b.val(),"","Empty value")}},{name:"should not init on link click",preSetup:n([o(m),q('<span>bzz</span><a href="http://google.com">google</a>'),o(m)]),test:function(){var a=this.$el;r.call(this);var b=a.find("textarea");b.val('<span>bzz</span><a href="http://google.com">google</a>'),a.find(".ui-richeditor__controls__save").click();var c=!1;this.$el.find(".ui-description__inner a").click(function(a){a.preventDefault(),c=!0}),r.call(this,this.$el.find(".ui-description__inner a")),this.$el.find(".ui-description__inner a").click(),equals(c,!0,"Can click on link"),equals(b.parent().css("display"),"none","Editor is hidden")}},{name:"should apply auto-replace pattern (id:XXX -> #XXX Entity name)",preSetup:n([o(m),q("The same bug as id:123 bug"),o(m),{command:[Similar.to({name:"get",type:"general",config:Similar.to({id:"123",fields:["id","name",Similar.to({entityType:["id","name"]})]})})],setup:function(a){var b=function(a){var b=a[0];b.callbacks.success({data:{id:b.config.id,name:"General "+b.config.id,entityType:{id:1,name:"task"}}})};this.repositoryMock.expects().execute(a).andStub(b)}}]),test:function(){var a=this.$el;r.call(this);var b=a.find("textarea");b.val("The same bug as id:123 bug"),a.find(".ui-richeditor__controls__save").click();var c=this.$el.find(".ui-description__inner");equals(c.html().trim().replace("<A","<a").replace("/A>","/a>"),'The same bug as <a href="#task/123">#123&nbsp;General 123</a> bug',"Original text"),r.call(this);var d=this.$el.find("textarea").val();equals(d,"The same bug as id:123 bug","Text without links is open for edit"),this.$el.find(".ui-richeditor__controls__cancel").click(),c=this.$el.find(".ui-description__inner"),equals(c.html().trim().replace("<A","<a").replace("/A>","/a>"),'The same bug as <a href="#task/123">#123&nbsp;General 123</a> bug',"Original text")}}],t=f.create("[component."+d+"]",e,h);g.create(t,k).viewShouldFollowDataComponentLifeCycle().modelShouldReturnData(a.clone(l),[m],[Similar.to({eventName:"beforeSave",type:k.context.type,listener:TypeOf.isA(c)}),Similar.to({eventName:"afterSave",type:k.context.type,listener:TypeOf.isA(c)})]).viewShouldPassTests(s).done()}var i=function(){var a=e.description,b="description";h(b,a,d)};return{run:i,generateRichTextFieldTest:h}})