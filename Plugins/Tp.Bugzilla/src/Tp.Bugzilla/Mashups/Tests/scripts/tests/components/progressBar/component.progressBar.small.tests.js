define(["jQuery","tau/components/component.progressBar.small","tests/components/common/common.setup","tests/components/component.specs","tests/common/testData.Generator","tau/components/component.property.entityState","tests/common/service.mock","tau/configurator"],function(a,b,c,d,e,f,g,h){var i=function(){var a=new e;a.initDefaultData();var f=a.getData(),i=a.getBugs()[0],j={context:{type:"bug",id:i.id}},k=function(a,b){equals(a.find(".state-select > .attr-item > .attr-name").text(),b,"State text is valid")},l=c.create("[component.progressBar.small]",f,b,j),m=[{name:"should render correct markup for non-zero effort",preSetup:function(){var a=this.service=new g;h.setService(a)},test:function(){var a=this.$el,b=this.data;equals(a.find(".ui-progress-progress").eq(0).tmplItem().data.percentCompleted,b.percentCompleted,"Percent completed in data"),equals(a.find(".ui-progress-progress").eq(0)[0].style.width,Math.round(b.percentCompleted)+"%","Progress line should be rendered (rounded)")}}];d.create(l,j).viewShouldFollowDataComponentLifeCycle().viewShouldPassTests(m).done();var n={processes:[{id:1,name:"Kanban",terms:[],practices:[]}]},o=c.create("[component.progressBar.small][no time tracking]",f,b,j,n),p=[{name:"should not show spent/remain labels if time tracking is OFF",preSetup:function(){var a=this.service=new g;h.setService(a)},test:function(){var a=this.$el,b=this.data;equals(a.find(".ui-progress-progress").eq(0).tmplItem().data.percentCompleted,b.percentCompleted,"Percent completed in data"),equals(a.find(".ui-progress-progress").eq(0)[0].style.width,Math.round(b.percentCompleted)+"%","Progress line should be rendered (rounded)")}}];d.create(o,j).viewShouldPassTests(p).done();var q=a.getBugs()[1],r={context:{type:"bug",id:q.id}},s=c.create("[component.progressBar.small][zero effort]",f,b,r),t=[{name:"should render markup for zero effort",preSetup:function(){var a=this.service=new g;h.setService(a)},test:function(){var a=this.$el;equals(a.find(".ui-progress-progress").length,1,"Progress line should be rendered")}}];d.create(s,r).viewShouldFollowDataComponentLifeCycle().viewShouldPassTests(t).done()};return{run:i}})