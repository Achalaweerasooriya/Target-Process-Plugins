define(["Underscore","tau/core/types","tau/core/model-base","tau/models/assignmentsList/extension.model.effortRetriever","tau/models/assignmentsList/extension.model.store.operations","tau/models/assignmentsList/extension.model.effortPointsRetriever","tau/models/assignmentsList/extension.model.assignmentsRetriever","tau/models/assignmentsList/extension.model.entityRolesRetriever","tau/models/assignmentsList/extension.model.featureRolesRetriever","tau/models/assignmentsList/extension.model.assignmentToRolesMapper","tau/models/assignmentsList/extension.model.taskEffortRetriever"],function(a,b,c,d,e,f,g,h,i,j,k){var l=c.extend({"bus evictTotalEfforts":function(){var a=this.config.context.entity;this.store.evictProperties(a.id,a.entityType.name,["effort","effortToDo"])},"bus assignmentsReady":function(a){this.assignments=a.data},"bus roleEffortsReady":function(a){this.roleEfforts=a.data},destroyExtensions:function(){var b=this.extensions||[];a.each(b,function(a){a.destroy("destroy")}),delete this.extensions},initExtensions:function(){this.destroyExtensions();var a=b.findByKeyword(this.config.context.entity.entityType.name),c=new(a.name!="feature"?h:i)(this.config);this.extensions=[new d(this.config),new e(this.config),new f(this.config),new g(this.config),c,new j(this.config)],a.name.toLowerCase()=="userstory"&&this.extensions.push(new k(this.config))},onInit:function(){this.clearData();var a=this;a.store.unbind(a),a.initExtensions(),a.fire("registerStoreRequest"),a.fire("commitTransaction",{success:a.done,scope:a}),this.bindStoreListeners()},done:function(){var a={};this.bus.fire("extendDataToBind",a),this.bus.fire("dataBind",a),this.destroyExtensions()},bindStoreListeners:function(){var b=this;b.store.on({eventName:"afterSave",type:"assignment",listener:b},function(){b.afterAssignmentSaved.apply(b,arguments)}),b.store.on({eventName:"beforeSave",type:"assignment",listener:b},function(){b.beforeSaveAssignment.apply(b,arguments)}),b.store.on({eventName:"beforeSave",type:"roleEffort",listener:b},function(){b.beforeSaveRoleEffort.apply(b,arguments)}),b.store.on({eventName:"afterSave",type:"roleEffort",listener:b},function(){b.afterSaveRoleEffort.apply(b,arguments)}),b.store.on({eventName:"beforeRemove",type:"assignment",listener:b},function(){b.beforeRemoveAssignment.apply(b,arguments)}),b.store.on({eventName:"afterRemove",type:"assignment",listener:b},function(){b.afterAssignmentRemoved.apply(b,arguments)});var c={id:this.config.context.entity.id};b.store.on({eventName:"beforeSave",type:this.config.context.entity.entityType.name,listener:b,filter:c,hasChanges:["entityState"]},a.bind(b.beforeEntityEntityStateChanged,b)),b.store.on({eventName:"afterSave",type:this.config.context.entity.entityType.name,listener:b,filter:c,hasChanges:["entityState"]},a.bind(b.afterEntityEntityStateChanged,b))},beforeEntityEntityStateChanged:function(a){this.fire("beforeStateChanged")},afterEntityEntityStateChanged:function(a){this.fire("afterStateChanged")},beforeSaveRoleEffort:function(b){var c=b.data.id;if(a.isNumber(c)&&this.isRoleEffortOfCurrentEntity(c)){var d=b.data.cmd;d.config.fields=d.config.fields||[],d.config.fields.push("effortToDo"),this.fire("beforeSaveRoleEffort",{roleEffortId:c})}},afterSaveRoleEffort:function(b){var c=b.data.id;a.isNumber(c)&&this.isRoleEffortOfCurrentEntity(c)&&(this.fire("evictTotalEfforts"),this.fire("afterSaveRoleEffort",{roleEffortId:c}))},beforeRemoveAssignment:function(a){this.fireEventIfAssignmentFromCurrentEntity(a,"beforeRemoveAssignment")},afterAssignmentRemoved:function(a){this.fireEventIfAssignmentFromCurrentEntity(a,"afterAssignmentRemoved")},beforeSaveAssignment:function(b){a.isNumber(b.data.id)?this.fireEventIfAssignmentFromCurrentEntity(b,"beforeSaveAssignment"):this.fireEventIfAssignmentFromCurrentEntity(b,"beforeAddAssignment")},afterAssignmentSaved:function(b){a.isNumber(b.data.cmd.config.id)?this.fireEventIfAssignmentFromCurrentEntity(b,"afterAssignmentSaved"):this.fireEventIfAssignmentFromCurrentEntity(b,"afterAssignmentAdded")},fireEventIfAssignmentFromCurrentEntity:function(b,c){var d=b.data.id;if(this.isAssignmentOfCurrentEntity(d)||((b.data.changes||{}).assignable||{}).id===this.config.context.entity.id){var e=a.extend({assignmentId:d},b.data.changes);this.fire(c,e)}},isRoleEffortOfCurrentEntity:function(b){return a.any(this.roleEfforts,function(a){return a.id===b})},isAssignmentOfCurrentEntity:function(b){return a.any(this.assignments,function(a){return a.id===b})},clearData:function(){delete this.assignments,delete this.roleEfforts},destroy:function(){this.clearData(),this._super.apply(this,arguments)}});return l})