define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/ui/behaviour/date/ui.behaviour.dateEditor"],function(a,b,c){return c.extend({category:"edit",normalizeEffort:function(a){return Math.abs(Math.round(parseFloat(a)*100)/100)||0},"bus permissionsReady+afterRender+dataBind":function(a){var b=this,c=this.permissions=a.permissionsReady.data;c.editable&&(b.$el=a.afterRender.data.element,b.$el.find(".property-text").editableText({mask:/^\d*\.?\d*$/,restoreText:!0,onSave:function(c){var d=a.dataBind.data,e=b.normalizeEffort(d.text),f=b.normalizeEffort(c);if(e===f)return this.restoreInitialText(),!1;var g={};g[b.config.propertyName]=f;var h={$include:["id"],id:b.config.context.entity.id,$set:g};b.bus.fire("save",h)},onEditStart:function(){this.$element.data("points",this.$element.find("span").detach())},onEditEnd:function(){this.$element.append(this.$element.data("points"))}}))},showEditor:function(){this.$el.find(".property-text").editableText("activate")},"bus edit":function(){this.permissions.editable&&this.showEditor()},onClickHandler:function(){},removeHandlers:function(){},removeWidget:function(){this.$widget&&this.$widget.editableText("destroy")},destroy:function(){this.removeHandlers(),this.removeWidget(),this._super.apply(this,arguments)}})})