define(["tau/core/model-base","tau/utils/utils.jsonSchema","tau/utils/utils.date"],function(a,b,c){var d=a.extend({category:"edit",name:"Model date validation",schema:b.Schema.create({type:"string",optional:!1,empty:!1,post:function(a){if(this.wasError()==0){var b=c.parse(a),d=c.parse(this.schema.additionalProperties.max),e=c.parse(this.schema.additionalProperties.min);b==null?new this.Error("Date","Incorrect date format"):b<new Date("01/01/1900")?new this.Error("Date","Date must be greater then 1-Jan-1900"):d&&b>d?new this.Error("Date","Date must be less then "+c.format.date.short(d)):e&&b<e?new this.Error("Date","Date must be greater then "+c.format.date.short(d)):a=c.formatAs(b,this.schema.additionalProperties.dateFormat)}return a},additionalProperties:{dateFormat:c.getFormatData().date.short,max:null,min:null}}),"bus afterInit":function(){this.config.format=="datetime"&&(this.schema.additionalProperties.dateFormat=c.getFormatData().datetime.short)},"bus afterRender":function(a){this.element=a.data.element},"bus validateDate":function(a){var b=this.schema.validate(a.data.value);a.data.value=b.instance},"bus validate":function(a){var b=this.element.find(".property");b.dateEditor("resetValidationErrors");var c=a.data,d=c.cmd.$set[this.config.propertyName];if(!c.validation||c.validation.isError()!=1)c.validation=this.schema.validate(d),c.cmd.$set[this.config.propertyName]=c.validation.instance},"bus resetValidationErrors":function(){var a=this.element.find(".property");a.dateEditor("resetValidationErrors")},"bus afterValidate":function(a){var b=a.data.validation;this.element.find(".property").dateEditor("setValue",b.instance)},"bus validationFailed":function(a){var b=this.element.find(".property");b.dateEditor("setValidationErrors",a.data.validation.errors[0].description)}});return d})