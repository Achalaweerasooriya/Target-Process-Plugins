define(["Underscore","jQuery","tau/core/event.emitter","tau/ui/templateRenderer.extensions","tau/core/templates-factory","tau/ui/templateRenderer"],function(a,b,c,d,e){var f=c.extend({init:function(a){this._super(a),this.config=a||{}},destroy:function(){this._super(),this.element&&this.element.remove(),delete this.element,delete this.config},merge:function(c,d){var e=this;if(d&&e.element){b.isArray(d)||(d=[d]);var f=a(d).isArray()?d:[d],g=this.element;a(f).each(function(a){var d=g.find(a),e=c.find(a);d.each(function(a){b(this).replaceWith(e.eq(a))})})}},bindTemplate:function(a){var b=this.config.template.name,c=e.get(b).bind(this.config,a);return c},prepareElement:function(a){var b=this.config.template.name,c=" tmpl-"+b,d="ui-placeholder"+c.replace(".","-");return a.addClass(d),a},updateElement:function(a,b){var c=this;c.element&&b?c.merge(a,b):(c.element&&(a.length?c.element.replaceWith(a):c.element.remove()),c.element=a)},doRender:function(a,b){var c=this.bindTemplate(a);c=this.prepareElement(c),this.updateElement(c,b),!this.config.visible&&this.hide()},fireAfterInit:function(a){this.fire("afterInit",{config:this.config,refreshSelector:a})},initialize:function(a){var b=this;this.fireAfterInit(a)},setDefaultConfig:function(){var b=this;a.defaults(b.config,{visible:!0})},"bus refreshData":function(a){this.doRender(a.data),this.fire("elementRefreshedWithData",{element:this.element})},"bus refresh":function(a){this._super();var b=a.data||{},c=b.refreshSelector;this.startLifeCycle(a,c)},"bus initialize":function(a){this.startLifeCycle(a)},startLifeCycle:function(b,c){var d=this;d.setDefaultConfig(),a.extend(d.config,b.data),d.fire("beforeInit",{config:d.config}),this.initialize(c)},"bus show":function(){this.show()},"bus hide":function(){this.hide()},showElement:function(){this.element.show()},show:function(){this.showElement(),this.config.visible=!0},hideElement:function(){this.element.hide()},hide:function(){this.hideElement(),this.config.visible=!1},"bus applyTo":function(a){this.element=a.data.element},"bus afterInit+dataBind":function(a){this.render(a.dataBind.data,a.afterInit.data)},render:function(a,b){this.fireBeforeRender({data:a}),this.doRender(a,b.refreshSelector),this.fireAfterRender({data:a})},fireBeforeRender:function(a){a=a||{},this.fire("beforeRender",{data:a.data,view:this,element:this.element})},fireAfterRender:function(a){a=a||{},this.fire("afterRender",{data:a.data,view:this,element:this.element})}});return f})