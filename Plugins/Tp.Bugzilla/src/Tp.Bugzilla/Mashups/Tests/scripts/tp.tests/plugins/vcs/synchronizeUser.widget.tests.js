require(["tp/plugins/vcs/ui.widgets"],function(){(function(){module("synchronize user id widget",{setup:function(){this._ui=$('<ul class="users-block">\n    <li><input type="text" class="input svnuser"/></li>\n    <li class="chain"></li>\n    <li><input type="text" class="input tpuser"/></li>\n</ul>'),this._element=this._ui.find(".tpuser"),this._svnuser=this._ui.find(".svnuser"),this._source=[{Id:"1",Name:"John Smith",Role:"Developer",Avatar:"avatar"},{Id:"2",Name:"Ivan Petrov",Role:"Manager",Avatar:"avatar"}],this.givenInput=function(a,b){this._element.val(b),this._element.attr("userId",a)},this.widgetCreated=function(){this._element.synchronizeUser({source:this._source})},this.thenIdShouldBeMappedToInput=function(a){equal(this._element.attr("userId"),a)},this.thenNameShouldBeMappedToInput=function(a){equal(this._element.val(),a)},this.thenInputShouldBeDisabled=function(){ok(!this._element.enabled(),"input should be disabled"),ok(!this._svnuser.enabled(),"svn user input should also be disabled")},this.thenInputShouldBeEnabled=function(){ok(this._element.enabled(),"input should be enabled"),ok(this._svnuser.enabled(),"svn user input should be enabled")},this.whenLostFocus=function(){this._element.blur()}},teardown:function(){}}),test('Given operator typed a tp user name "John Smith"When widget createdThen id "1" should be mapped to input',function(){this.givenInput(null,"John Smith"),this.widgetCreated(),this.thenIdShouldBeMappedToInput("1")}),test('Given widget createdAnd operator typed a tp user name "John Smith"When input lost focusThen id "1" should be mapped to input',function(){this.widgetCreated(),this.givenInput(null,"John Smith"),this.whenLostFocus(),this.thenIdShouldBeMappedToInput("1")}),test('Given input with name "Sarah Conor"And id "1" is mapped to inputWhen widget createdThen name "John Smith" should be mapped to input',function(){this.givenInput(1,"Sarah Conors"),this.widgetCreated(),this.thenNameShouldBeMappedToInput("John Smith")}),test('Given input with name "Sarah Conor"And id "100" is mapped to inputWhen widget createdThen input should be disabled',function(){this.givenInput(100,"Sarah Conors"),this.widgetCreated(),this.thenInputShouldBeDisabled()}),test("Given empty inputWhen widget createdThen input should be enabled",function(){this.givenInput(-1,""),this.widgetCreated(),this.thenInputShouldBeEnabled()})})()})