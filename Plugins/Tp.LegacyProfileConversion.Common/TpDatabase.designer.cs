#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tp.LegacyProfileConvertsion.Common
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TargetProcessTest")]
	public partial class TpDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertTpUser(TpUser instance);
    partial void UpdateTpUser(TpUser instance);
    partial void DeleteTpUser(TpUser instance);
    partial void InsertMessageUid(MessageUid instance);
    partial void UpdateMessageUid(MessageUid instance);
    partial void DeleteMessageUid(MessageUid instance);
    partial void InsertGeneral(General instance);
    partial void UpdateGeneral(General instance);
    partial void DeleteGeneral(General instance);
    partial void InsertPluginProfile(PluginProfile instance);
    partial void UpdatePluginProfile(PluginProfile instance);
    partial void DeletePluginProfile(PluginProfile instance);
    partial void InsertGlobalSetting(GlobalSetting instance);
    partial void UpdateGlobalSetting(GlobalSetting instance);
    partial void DeleteGlobalSetting(GlobalSetting instance);
    partial void InsertRevision(Revision instance);
    partial void UpdateRevision(Revision instance);
    partial void DeleteRevision(Revision instance);
    partial void InsertTestPlan(TestPlan instance);
    partial void UpdateTestPlan(TestPlan instance);
    partial void DeleteTestPlan(TestPlan instance);
    partial void InsertTestCaseTestPlan(TestCaseTestPlan instance);
    partial void UpdateTestCaseTestPlan(TestCaseTestPlan instance);
    partial void DeleteTestCaseTestPlan(TestCaseTestPlan instance);
    #endregion
		
		public TpDatabaseDataContext() : 
				base(global::Tp.LegacyProfileConvertsion.Common.Properties.Settings.Default.TargetProcessTestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TpDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TpDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TpDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TpDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<TpUser> TpUsers
		{
			get
			{
				return this.GetTable<TpUser>();
			}
		}
		
		public System.Data.Linq.Table<MessageUid> MessageUids
		{
			get
			{
				return this.GetTable<MessageUid>();
			}
		}
		
		public System.Data.Linq.Table<General> Generals
		{
			get
			{
				return this.GetTable<General>();
			}
		}
		
		public System.Data.Linq.Table<PluginProfile> PluginProfiles
		{
			get
			{
				return this.GetTable<PluginProfile>();
			}
		}
		
		public System.Data.Linq.Table<GlobalSetting> GlobalSettings
		{
			get
			{
				return this.GetTable<GlobalSetting>();
			}
		}
		
		public System.Data.Linq.Table<Revision> Revisions
		{
			get
			{
				return this.GetTable<Revision>();
			}
		}
		
		public System.Data.Linq.Table<TestPlan> TestPlans
		{
			get
			{
				return this.GetTable<TestPlan>();
			}
		}
		
		public System.Data.Linq.Table<TestCaseTestPlan> TestCaseTestPlans
		{
			get
			{
				return this.GetTable<TestCaseTestPlan>();
			}
	}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectID;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.Nullable<int> _ProgramOfProjectID;
		
		private System.Nullable<int> _ProcessID;
		
		private System.Nullable<int> _SourceControlType;
		
		private string _SCConnectionString;
		
		private string _SCUser;
		
		private string _SCPassword;
		
		private System.Nullable<int> _SCStartingRevision;
		
		private System.Nullable<bool> _IsProduct;
		
		private System.Nullable<bool> _IsInboundMailEnabled;
		
		private string _InboundMailServer;
		
		private System.Nullable<int> _InboundMailPort;
		
		private System.Nullable<bool> _InboundMailUseSSL;
		
		private string _InboundMailLogin;
		
		private string _InboundMailPassword;
		
		private string _InboundMailProtocol;
		
		private System.Nullable<bool> _InboundMailCreateRequests;
		
		private System.Nullable<int> _InboundMailAutomaticalEmailCheckTime;
		
		private System.Nullable<bool> _InboundMailAutoCheck;
		
		private System.Nullable<int> _CompanyID;
		
		private string _InboundMailReplyAddress;
		
		private string _Abbreviation;
		
		private EntitySet<General> _Generals;
		
		private EntitySet<TestPlan> _TestPlans;
		
		private EntityRef<General> _General;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnProgramOfProjectIDChanging(System.Nullable<int> value);
    partial void OnProgramOfProjectIDChanged();
    partial void OnProcessIDChanging(System.Nullable<int> value);
    partial void OnProcessIDChanged();
    partial void OnSourceControlTypeChanging(System.Nullable<int> value);
    partial void OnSourceControlTypeChanged();
    partial void OnSCConnectionStringChanging(string value);
    partial void OnSCConnectionStringChanged();
    partial void OnSCUserChanging(string value);
    partial void OnSCUserChanged();
    partial void OnSCPasswordChanging(string value);
    partial void OnSCPasswordChanged();
    partial void OnSCStartingRevisionChanging(System.Nullable<int> value);
    partial void OnSCStartingRevisionChanged();
    partial void OnIsProductChanging(System.Nullable<bool> value);
    partial void OnIsProductChanged();
    partial void OnIsInboundMailEnabledChanging(System.Nullable<bool> value);
    partial void OnIsInboundMailEnabledChanged();
    partial void OnInboundMailServerChanging(string value);
    partial void OnInboundMailServerChanged();
    partial void OnInboundMailPortChanging(System.Nullable<int> value);
    partial void OnInboundMailPortChanged();
    partial void OnInboundMailUseSSLChanging(System.Nullable<bool> value);
    partial void OnInboundMailUseSSLChanged();
    partial void OnInboundMailLoginChanging(string value);
    partial void OnInboundMailLoginChanged();
    partial void OnInboundMailPasswordChanging(string value);
    partial void OnInboundMailPasswordChanged();
    partial void OnInboundMailProtocolChanging(string value);
    partial void OnInboundMailProtocolChanged();
    partial void OnInboundMailCreateRequestsChanging(System.Nullable<bool> value);
    partial void OnInboundMailCreateRequestsChanged();
    partial void OnInboundMailAutomaticalEmailCheckTimeChanging(System.Nullable<int> value);
    partial void OnInboundMailAutomaticalEmailCheckTimeChanged();
    partial void OnInboundMailAutoCheckChanging(System.Nullable<bool> value);
    partial void OnInboundMailAutoCheckChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnInboundMailReplyAddressChanging(string value);
    partial void OnInboundMailReplyAddressChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    #endregion
		
		public Project()
		{
			this._Generals = new EntitySet<General>(new Action<General>(this.attach_Generals), new Action<General>(this.detach_Generals));
			this._TestPlans = new EntitySet<TestPlan>(new Action<TestPlan>(this.attach_TestPlans), new Action<TestPlan>(this.detach_TestPlans));
			this._General = default(EntityRef<General>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._General.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramOfProjectID", DbType="Int")]
		public System.Nullable<int> ProgramOfProjectID
		{
			get
			{
				return this._ProgramOfProjectID;
			}
			set
			{
				if ((this._ProgramOfProjectID != value))
				{
					this.OnProgramOfProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramOfProjectID = value;
					this.SendPropertyChanged("ProgramOfProjectID");
					this.OnProgramOfProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessID", DbType="Int")]
		public System.Nullable<int> ProcessID
		{
			get
			{
				return this._ProcessID;
			}
			set
			{
				if ((this._ProcessID != value))
				{
					this.OnProcessIDChanging(value);
					this.SendPropertyChanging();
					this._ProcessID = value;
					this.SendPropertyChanged("ProcessID");
					this.OnProcessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceControlType", DbType="Int")]
		public System.Nullable<int> SourceControlType
		{
			get
			{
				return this._SourceControlType;
			}
			set
			{
				if ((this._SourceControlType != value))
				{
					this.OnSourceControlTypeChanging(value);
					this.SendPropertyChanging();
					this._SourceControlType = value;
					this.SendPropertyChanged("SourceControlType");
					this.OnSourceControlTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCConnectionString", DbType="NVarChar(255)")]
		public string SCConnectionString
		{
			get
			{
				return this._SCConnectionString;
			}
			set
			{
				if ((this._SCConnectionString != value))
				{
					this.OnSCConnectionStringChanging(value);
					this.SendPropertyChanging();
					this._SCConnectionString = value;
					this.SendPropertyChanged("SCConnectionString");
					this.OnSCConnectionStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCUser", DbType="NVarChar(50)")]
		public string SCUser
		{
			get
			{
				return this._SCUser;
			}
			set
			{
				if ((this._SCUser != value))
				{
					this.OnSCUserChanging(value);
					this.SendPropertyChanging();
					this._SCUser = value;
					this.SendPropertyChanged("SCUser");
					this.OnSCUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCPassword", DbType="NVarChar(50)")]
		public string SCPassword
		{
			get
			{
				return this._SCPassword;
			}
			set
			{
				if ((this._SCPassword != value))
				{
					this.OnSCPasswordChanging(value);
					this.SendPropertyChanging();
					this._SCPassword = value;
					this.SendPropertyChanged("SCPassword");
					this.OnSCPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCStartingRevision", DbType="Int")]
		public System.Nullable<int> SCStartingRevision
		{
			get
			{
				return this._SCStartingRevision;
			}
			set
			{
				if ((this._SCStartingRevision != value))
				{
					this.OnSCStartingRevisionChanging(value);
					this.SendPropertyChanging();
					this._SCStartingRevision = value;
					this.SendPropertyChanged("SCStartingRevision");
					this.OnSCStartingRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProduct", DbType="Bit")]
		public System.Nullable<bool> IsProduct
		{
			get
			{
				return this._IsProduct;
			}
			set
			{
				if ((this._IsProduct != value))
				{
					this.OnIsProductChanging(value);
					this.SendPropertyChanging();
					this._IsProduct = value;
					this.SendPropertyChanged("IsProduct");
					this.OnIsProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInboundMailEnabled", DbType="Bit")]
		public System.Nullable<bool> IsInboundMailEnabled
		{
			get
			{
				return this._IsInboundMailEnabled;
			}
			set
			{
				if ((this._IsInboundMailEnabled != value))
				{
					this.OnIsInboundMailEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsInboundMailEnabled = value;
					this.SendPropertyChanged("IsInboundMailEnabled");
					this.OnIsInboundMailEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailServer", DbType="NVarChar(150)")]
		public string InboundMailServer
		{
			get
			{
				return this._InboundMailServer;
			}
			set
			{
				if ((this._InboundMailServer != value))
				{
					this.OnInboundMailServerChanging(value);
					this.SendPropertyChanging();
					this._InboundMailServer = value;
					this.SendPropertyChanged("InboundMailServer");
					this.OnInboundMailServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailPort", DbType="Int")]
		public System.Nullable<int> InboundMailPort
		{
			get
			{
				return this._InboundMailPort;
			}
			set
			{
				if ((this._InboundMailPort != value))
				{
					this.OnInboundMailPortChanging(value);
					this.SendPropertyChanging();
					this._InboundMailPort = value;
					this.SendPropertyChanged("InboundMailPort");
					this.OnInboundMailPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailUseSSL", DbType="Bit")]
		public System.Nullable<bool> InboundMailUseSSL
		{
			get
			{
				return this._InboundMailUseSSL;
			}
			set
			{
				if ((this._InboundMailUseSSL != value))
				{
					this.OnInboundMailUseSSLChanging(value);
					this.SendPropertyChanging();
					this._InboundMailUseSSL = value;
					this.SendPropertyChanged("InboundMailUseSSL");
					this.OnInboundMailUseSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailLogin", DbType="NVarChar(50)")]
		public string InboundMailLogin
		{
			get
			{
				return this._InboundMailLogin;
			}
			set
			{
				if ((this._InboundMailLogin != value))
				{
					this.OnInboundMailLoginChanging(value);
					this.SendPropertyChanging();
					this._InboundMailLogin = value;
					this.SendPropertyChanged("InboundMailLogin");
					this.OnInboundMailLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailPassword", DbType="NVarChar(50)")]
		public string InboundMailPassword
		{
			get
			{
				return this._InboundMailPassword;
			}
			set
			{
				if ((this._InboundMailPassword != value))
				{
					this.OnInboundMailPasswordChanging(value);
					this.SendPropertyChanging();
					this._InboundMailPassword = value;
					this.SendPropertyChanged("InboundMailPassword");
					this.OnInboundMailPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailProtocol", DbType="NVarChar(10)")]
		public string InboundMailProtocol
		{
			get
			{
				return this._InboundMailProtocol;
			}
			set
			{
				if ((this._InboundMailProtocol != value))
				{
					this.OnInboundMailProtocolChanging(value);
					this.SendPropertyChanging();
					this._InboundMailProtocol = value;
					this.SendPropertyChanged("InboundMailProtocol");
					this.OnInboundMailProtocolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailCreateRequests", DbType="Bit")]
		public System.Nullable<bool> InboundMailCreateRequests
		{
			get
			{
				return this._InboundMailCreateRequests;
			}
			set
			{
				if ((this._InboundMailCreateRequests != value))
				{
					this.OnInboundMailCreateRequestsChanging(value);
					this.SendPropertyChanging();
					this._InboundMailCreateRequests = value;
					this.SendPropertyChanged("InboundMailCreateRequests");
					this.OnInboundMailCreateRequestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailAutomaticalEmailCheckTime", DbType="Int")]
		public System.Nullable<int> InboundMailAutomaticalEmailCheckTime
		{
			get
			{
				return this._InboundMailAutomaticalEmailCheckTime;
			}
			set
			{
				if ((this._InboundMailAutomaticalEmailCheckTime != value))
				{
					this.OnInboundMailAutomaticalEmailCheckTimeChanging(value);
					this.SendPropertyChanging();
					this._InboundMailAutomaticalEmailCheckTime = value;
					this.SendPropertyChanged("InboundMailAutomaticalEmailCheckTime");
					this.OnInboundMailAutomaticalEmailCheckTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailAutoCheck", DbType="Bit")]
		public System.Nullable<bool> InboundMailAutoCheck
		{
			get
			{
				return this._InboundMailAutoCheck;
			}
			set
			{
				if ((this._InboundMailAutoCheck != value))
				{
					this.OnInboundMailAutoCheckChanging(value);
					this.SendPropertyChanging();
					this._InboundMailAutoCheck = value;
					this.SendPropertyChanged("InboundMailAutoCheck");
					this.OnInboundMailAutoCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundMailReplyAddress", DbType="NVarChar(100)")]
		public string InboundMailReplyAddress
		{
			get
			{
				return this._InboundMailReplyAddress;
			}
			set
			{
				if ((this._InboundMailReplyAddress != value))
				{
					this.OnInboundMailReplyAddressChanging(value);
					this.SendPropertyChanging();
					this._InboundMailReplyAddress = value;
					this.SendPropertyChanged("InboundMailReplyAddress");
					this.OnInboundMailReplyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(6)")]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_General", Storage="_Generals", ThisKey="ProjectID", OtherKey="ParentProjectID")]
		public EntitySet<General> Generals
		{
			get
			{
				return this._Generals;
			}
			set
			{
				this._Generals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_TestPlan", Storage="_TestPlans", ThisKey="ProjectID", OtherKey="ProjectID")]
		public EntitySet<TestPlan> TestPlans
		{
			get
			{
				return this._TestPlans;
			}
			set
			{
				this._TestPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_Project", Storage="_General", ThisKey="ProjectID", OtherKey="GeneralID", IsForeignKey=true)]
		public General General
		{
			get
			{
				return this._General.Entity;
			}
			set
			{
				General previousValue = this._General.Entity;
				if (((previousValue != value) 
							|| (this._General.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._General.Entity = null;
						previousValue.Project = null;
					}
					this._General.Entity = value;
					if ((value != null))
					{
						value.Project = this;
						this._ProjectID = value.GeneralID;
					}
					else
					{
						this._ProjectID = default(int);
					}
					this.SendPropertyChanged("General");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Generals(General entity)
		{
			this.SendPropertyChanging();
			entity.Project1 = this;
		}
		
		private void detach_Generals(General entity)
		{
			this.SendPropertyChanging();
			entity.Project1 = null;
		}
		
		private void attach_TestPlans(TestPlan entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_TestPlans(TestPlan entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
	}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TpUser")]
	public partial class TpUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Login;
		
		private string _SecretWord;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsAdministrator;
		
		private System.Nullable<int> _RoleID;
		
		private string _ActiveDirectoryName;
		
		private System.Nullable<decimal> _WeeklyAvailableHours;
		
		private System.Nullable<int> _CurrentAllocation;
		
		private System.Nullable<decimal> _CurrentAvailableHours;
		
		private System.Nullable<System.DateTime> _AvailableFrom;
		
		private System.Nullable<int> _AvailableFutureAllocation;
		
		private System.Nullable<decimal> _AvailableFutureHours;
		
		private int _Type;
		
		private string _Phone;
		
		private string _Notes;
		
		private System.Nullable<int> _SourceType;
		
		private System.Nullable<int> _ContactOwnerID;
		
		private System.Nullable<bool> _IsObserver;
		
		private System.Nullable<int> _CompanyID;
		
		private string _Skills;
		
		private EntitySet<TpUser> _TpUsers;
		
		private EntitySet<General> _Generals;
		
		private EntitySet<General> _Generals1;
		
		private EntitySet<General> _Generals2;
		
		private EntityRef<TpUser> _TpUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnSecretWordChanging(string value);
    partial void OnSecretWordChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnIsAdministratorChanging(System.Nullable<bool> value);
    partial void OnIsAdministratorChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnActiveDirectoryNameChanging(string value);
    partial void OnActiveDirectoryNameChanged();
    partial void OnWeeklyAvailableHoursChanging(System.Nullable<decimal> value);
    partial void OnWeeklyAvailableHoursChanged();
    partial void OnCurrentAllocationChanging(System.Nullable<int> value);
    partial void OnCurrentAllocationChanged();
    partial void OnCurrentAvailableHoursChanging(System.Nullable<decimal> value);
    partial void OnCurrentAvailableHoursChanged();
    partial void OnAvailableFromChanging(System.Nullable<System.DateTime> value);
    partial void OnAvailableFromChanged();
    partial void OnAvailableFutureAllocationChanging(System.Nullable<int> value);
    partial void OnAvailableFutureAllocationChanged();
    partial void OnAvailableFutureHoursChanging(System.Nullable<decimal> value);
    partial void OnAvailableFutureHoursChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnSourceTypeChanging(System.Nullable<int> value);
    partial void OnSourceTypeChanged();
    partial void OnContactOwnerIDChanging(System.Nullable<int> value);
    partial void OnContactOwnerIDChanged();
    partial void OnIsObserverChanging(System.Nullable<bool> value);
    partial void OnIsObserverChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnSkillsChanging(string value);
    partial void OnSkillsChanged();
    #endregion
		
		public TpUser()
		{
			this._TpUsers = new EntitySet<TpUser>(new Action<TpUser>(this.attach_TpUsers), new Action<TpUser>(this.detach_TpUsers));
			this._Generals = new EntitySet<General>(new Action<General>(this.attach_Generals), new Action<General>(this.detach_Generals));
			this._Generals1 = new EntitySet<General>(new Action<General>(this.attach_Generals1), new Action<General>(this.detach_Generals1));
			this._Generals2 = new EntitySet<General>(new Action<General>(this.attach_Generals2), new Action<General>(this.detach_Generals2));
			this._TpUser1 = default(EntityRef<TpUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretWord", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SecretWord
		{
			get
			{
				return this._SecretWord;
			}
			set
			{
				if ((this._SecretWord != value))
				{
					this.OnSecretWordChanging(value);
					this.SendPropertyChanging();
					this._SecretWord = value;
					this.SendPropertyChanged("SecretWord");
					this.OnSecretWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdministrator", DbType="Bit")]
		public System.Nullable<bool> IsAdministrator
		{
			get
			{
				return this._IsAdministrator;
			}
			set
			{
				if ((this._IsAdministrator != value))
				{
					this.OnIsAdministratorChanging(value);
					this.SendPropertyChanging();
					this._IsAdministrator = value;
					this.SendPropertyChanged("IsAdministrator");
					this.OnIsAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveDirectoryName", DbType="NVarChar(255)")]
		public string ActiveDirectoryName
		{
			get
			{
				return this._ActiveDirectoryName;
			}
			set
			{
				if ((this._ActiveDirectoryName != value))
				{
					this.OnActiveDirectoryNameChanging(value);
					this.SendPropertyChanging();
					this._ActiveDirectoryName = value;
					this.SendPropertyChanged("ActiveDirectoryName");
					this.OnActiveDirectoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyAvailableHours", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> WeeklyAvailableHours
		{
			get
			{
				return this._WeeklyAvailableHours;
			}
			set
			{
				if ((this._WeeklyAvailableHours != value))
				{
					this.OnWeeklyAvailableHoursChanging(value);
					this.SendPropertyChanging();
					this._WeeklyAvailableHours = value;
					this.SendPropertyChanged("WeeklyAvailableHours");
					this.OnWeeklyAvailableHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentAllocation", DbType="Int")]
		public System.Nullable<int> CurrentAllocation
		{
			get
			{
				return this._CurrentAllocation;
			}
			set
			{
				if ((this._CurrentAllocation != value))
				{
					this.OnCurrentAllocationChanging(value);
					this.SendPropertyChanging();
					this._CurrentAllocation = value;
					this.SendPropertyChanged("CurrentAllocation");
					this.OnCurrentAllocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentAvailableHours", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> CurrentAvailableHours
		{
			get
			{
				return this._CurrentAvailableHours;
			}
			set
			{
				if ((this._CurrentAvailableHours != value))
				{
					this.OnCurrentAvailableHoursChanging(value);
					this.SendPropertyChanging();
					this._CurrentAvailableHours = value;
					this.SendPropertyChanged("CurrentAvailableHours");
					this.OnCurrentAvailableHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> AvailableFrom
		{
			get
			{
				return this._AvailableFrom;
			}
			set
			{
				if ((this._AvailableFrom != value))
				{
					this.OnAvailableFromChanging(value);
					this.SendPropertyChanging();
					this._AvailableFrom = value;
					this.SendPropertyChanged("AvailableFrom");
					this.OnAvailableFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableFutureAllocation", DbType="Int")]
		public System.Nullable<int> AvailableFutureAllocation
		{
			get
			{
				return this._AvailableFutureAllocation;
			}
			set
			{
				if ((this._AvailableFutureAllocation != value))
				{
					this.OnAvailableFutureAllocationChanging(value);
					this.SendPropertyChanging();
					this._AvailableFutureAllocation = value;
					this.SendPropertyChanged("AvailableFutureAllocation");
					this.OnAvailableFutureAllocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableFutureHours", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> AvailableFutureHours
		{
			get
			{
				return this._AvailableFutureHours;
			}
			set
			{
				if ((this._AvailableFutureHours != value))
				{
					this.OnAvailableFutureHoursChanging(value);
					this.SendPropertyChanging();
					this._AvailableFutureHours = value;
					this.SendPropertyChanged("AvailableFutureHours");
					this.OnAvailableFutureHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="Int")]
		public System.Nullable<int> SourceType
		{
			get
			{
				return this._SourceType;
			}
			set
			{
				if ((this._SourceType != value))
				{
					this.OnSourceTypeChanging(value);
					this.SendPropertyChanging();
					this._SourceType = value;
					this.SendPropertyChanged("SourceType");
					this.OnSourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactOwnerID", DbType="Int")]
		public System.Nullable<int> ContactOwnerID
		{
			get
			{
				return this._ContactOwnerID;
			}
			set
			{
				if ((this._ContactOwnerID != value))
				{
					if (this._TpUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._ContactOwnerID = value;
					this.SendPropertyChanged("ContactOwnerID");
					this.OnContactOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsObserver", DbType="Bit")]
		public System.Nullable<bool> IsObserver
		{
			get
			{
				return this._IsObserver;
			}
			set
			{
				if ((this._IsObserver != value))
				{
					this.OnIsObserverChanging(value);
					this.SendPropertyChanging();
					this._IsObserver = value;
					this.SendPropertyChanged("IsObserver");
					this.OnIsObserverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skills", DbType="NVarChar(1000)")]
		public string Skills
		{
			get
			{
				return this._Skills;
			}
			set
			{
				if ((this._Skills != value))
				{
					this.OnSkillsChanging(value);
					this.SendPropertyChanging();
					this._Skills = value;
					this.SendPropertyChanged("Skills");
					this.OnSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_TpUser", Storage="_TpUsers", ThisKey="UserID", OtherKey="ContactOwnerID")]
		public EntitySet<TpUser> TpUsers
		{
			get
			{
				return this._TpUsers;
			}
			set
			{
				this._TpUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_General", Storage="_Generals", ThisKey="UserID", OtherKey="LastCommentUserID")]
		public EntitySet<General> Generals
		{
			get
			{
				return this._Generals;
			}
			set
			{
				this._Generals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_General1", Storage="_Generals1", ThisKey="UserID", OtherKey="LastEditorID")]
		public EntitySet<General> Generals1
		{
			get
			{
				return this._Generals1;
			}
			set
			{
				this._Generals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_General2", Storage="_Generals2", ThisKey="UserID", OtherKey="OwnerID")]
		public EntitySet<General> Generals2
		{
			get
			{
				return this._Generals2;
			}
			set
			{
				this._Generals2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_TpUser", Storage="_TpUser1", ThisKey="ContactOwnerID", OtherKey="UserID", IsForeignKey=true)]
		public TpUser TpUser1
		{
			get
			{
				return this._TpUser1.Entity;
			}
			set
			{
				TpUser previousValue = this._TpUser1.Entity;
				if (((previousValue != value) 
							|| (this._TpUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TpUser1.Entity = null;
						previousValue.TpUsers.Remove(this);
					}
					this._TpUser1.Entity = value;
					if ((value != null))
					{
						value.TpUsers.Add(this);
						this._ContactOwnerID = value.UserID;
					}
					else
					{
						this._ContactOwnerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TpUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TpUsers(TpUser entity)
		{
			this.SendPropertyChanging();
			entity.TpUser1 = this;
		}
		
		private void detach_TpUsers(TpUser entity)
		{
			this.SendPropertyChanging();
			entity.TpUser1 = null;
		}
		
		private void attach_Generals(General entity)
		{
			this.SendPropertyChanging();
			entity.TpUser = this;
		}
		
		private void detach_Generals(General entity)
		{
			this.SendPropertyChanging();
			entity.TpUser = null;
		}
		
		private void attach_Generals1(General entity)
		{
			this.SendPropertyChanging();
			entity.TpUser1 = this;
		}
		
		private void detach_Generals1(General entity)
		{
			this.SendPropertyChanging();
			entity.TpUser1 = null;
		}
		
		private void attach_Generals2(General entity)
		{
			this.SendPropertyChanging();
			entity.TpUser2 = this;
		}
		
		private void detach_Generals2(General entity)
		{
			this.SendPropertyChanging();
			entity.TpUser2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageUid")]
	public partial class MessageUid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageUidID;
		
		private string _UID;
		
		private string _MailServer;
		
		private string _MailLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageUidIDChanging(int value);
    partial void OnMessageUidIDChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnMailServerChanging(string value);
    partial void OnMailServerChanged();
    partial void OnMailLoginChanging(string value);
    partial void OnMailLoginChanged();
    #endregion
		
		public MessageUid()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageUidID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageUidID
		{
			get
			{
				return this._MessageUidID;
			}
			set
			{
				if ((this._MessageUidID != value))
				{
					this.OnMessageUidIDChanging(value);
					this.SendPropertyChanging();
					this._MessageUidID = value;
					this.SendPropertyChanged("MessageUidID");
					this.OnMessageUidIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="NVarChar(255)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailServer", DbType="NVarChar(255)")]
		public string MailServer
		{
			get
			{
				return this._MailServer;
			}
			set
			{
				if ((this._MailServer != value))
				{
					this.OnMailServerChanging(value);
					this.SendPropertyChanging();
					this._MailServer = value;
					this.SendPropertyChanged("MailServer");
					this.OnMailServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailLogin", DbType="NVarChar(255)")]
		public string MailLogin
		{
			get
			{
				return this._MailLogin;
			}
			set
			{
				if ((this._MailLogin != value))
				{
					this.OnMailLoginChanging(value);
					this.SendPropertyChanging();
					this._MailLogin = value;
					this.SendPropertyChanged("MailLogin");
					this.OnMailLoginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.General")]
	public partial class General : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GeneralID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private System.Nullable<System.DateTime> _LastCommentDate;
		
		private System.Nullable<double> _NumericPriority;
		
		private string _CustomField1;
		
		private string _CustomField2;
		
		private string _CustomField3;
		
		private string _CustomField4;
		
		private string _CustomField5;
		
		private string _CustomField6;
		
		private string _CustomField7;
		
		private string _CustomField8;
		
		private string _CustomField9;
		
		private string _CustomField10;
		
		private string _CustomField11;
		
		private string _CustomField12;
		
		private string _CustomField13;
		
		private string _CustomField14;
		
		private string _CustomField15;
		
		private System.Nullable<int> _LastCommentUserID;
		
		private System.Nullable<int> _ParentProjectID;
		
		private System.Nullable<int> _OwnerID;
		
		private System.Nullable<int> _LastEditorID;
		
		private System.Nullable<int> _EntityTypeID;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<TestPlan> _TestPlan;
		
		private EntityRef<Project> _Project1;
		
		private EntityRef<TpUser> _TpUser;
		
		private EntityRef<TpUser> _TpUser1;
		
		private EntityRef<TpUser> _TpUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeneralIDChanging(int value);
    partial void OnGeneralIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnLastCommentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCommentDateChanged();
    partial void OnNumericPriorityChanging(System.Nullable<double> value);
    partial void OnNumericPriorityChanged();
    partial void OnCustomField1Changing(string value);
    partial void OnCustomField1Changed();
    partial void OnCustomField2Changing(string value);
    partial void OnCustomField2Changed();
    partial void OnCustomField3Changing(string value);
    partial void OnCustomField3Changed();
    partial void OnCustomField4Changing(string value);
    partial void OnCustomField4Changed();
    partial void OnCustomField5Changing(string value);
    partial void OnCustomField5Changed();
    partial void OnCustomField6Changing(string value);
    partial void OnCustomField6Changed();
    partial void OnCustomField7Changing(string value);
    partial void OnCustomField7Changed();
    partial void OnCustomField8Changing(string value);
    partial void OnCustomField8Changed();
    partial void OnCustomField9Changing(string value);
    partial void OnCustomField9Changed();
    partial void OnCustomField10Changing(string value);
    partial void OnCustomField10Changed();
    partial void OnCustomField11Changing(string value);
    partial void OnCustomField11Changed();
    partial void OnCustomField12Changing(string value);
    partial void OnCustomField12Changed();
    partial void OnCustomField13Changing(string value);
    partial void OnCustomField13Changed();
    partial void OnCustomField14Changing(string value);
    partial void OnCustomField14Changed();
    partial void OnCustomField15Changing(string value);
    partial void OnCustomField15Changed();
    partial void OnLastCommentUserIDChanging(System.Nullable<int> value);
    partial void OnLastCommentUserIDChanged();
    partial void OnParentProjectIDChanging(System.Nullable<int> value);
    partial void OnParentProjectIDChanged();
    partial void OnOwnerIDChanging(System.Nullable<int> value);
    partial void OnOwnerIDChanged();
    partial void OnLastEditorIDChanging(System.Nullable<int> value);
    partial void OnLastEditorIDChanged();
    partial void OnEntityTypeIDChanging(System.Nullable<int> value);
    partial void OnEntityTypeIDChanged();
    #endregion
		
		public General()
		{
			this._Project = default(EntityRef<Project>);
			this._TestPlan = default(EntityRef<TestPlan>);
			this._Project1 = default(EntityRef<Project>);
			this._TpUser = default(EntityRef<TpUser>);
			this._TpUser1 = default(EntityRef<TpUser>);
			this._TpUser2 = default(EntityRef<TpUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GeneralID
		{
			get
			{
				return this._GeneralID;
			}
			set
			{
				if ((this._GeneralID != value))
				{
					this.OnGeneralIDChanging(value);
					this.SendPropertyChanging();
					this._GeneralID = value;
					this.SendPropertyChanged("GeneralID");
					this.OnGeneralIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCommentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCommentDate
		{
			get
			{
				return this._LastCommentDate;
			}
			set
			{
				if ((this._LastCommentDate != value))
				{
					this.OnLastCommentDateChanging(value);
					this.SendPropertyChanging();
					this._LastCommentDate = value;
					this.SendPropertyChanged("LastCommentDate");
					this.OnLastCommentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumericPriority", DbType="Float")]
		public System.Nullable<double> NumericPriority
		{
			get
			{
				return this._NumericPriority;
			}
			set
			{
				if ((this._NumericPriority != value))
				{
					this.OnNumericPriorityChanging(value);
					this.SendPropertyChanging();
					this._NumericPriority = value;
					this.SendPropertyChanged("NumericPriority");
					this.OnNumericPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField1", DbType="NVarChar(1000)")]
		public string CustomField1
		{
			get
			{
				return this._CustomField1;
			}
			set
			{
				if ((this._CustomField1 != value))
				{
					this.OnCustomField1Changing(value);
					this.SendPropertyChanging();
					this._CustomField1 = value;
					this.SendPropertyChanged("CustomField1");
					this.OnCustomField1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField2", DbType="NVarChar(1000)")]
		public string CustomField2
		{
			get
			{
				return this._CustomField2;
			}
			set
			{
				if ((this._CustomField2 != value))
				{
					this.OnCustomField2Changing(value);
					this.SendPropertyChanging();
					this._CustomField2 = value;
					this.SendPropertyChanged("CustomField2");
					this.OnCustomField2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField3", DbType="NVarChar(1000)")]
		public string CustomField3
		{
			get
			{
				return this._CustomField3;
			}
			set
			{
				if ((this._CustomField3 != value))
				{
					this.OnCustomField3Changing(value);
					this.SendPropertyChanging();
					this._CustomField3 = value;
					this.SendPropertyChanged("CustomField3");
					this.OnCustomField3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField4", DbType="NVarChar(1000)")]
		public string CustomField4
		{
			get
			{
				return this._CustomField4;
			}
			set
			{
				if ((this._CustomField4 != value))
				{
					this.OnCustomField4Changing(value);
					this.SendPropertyChanging();
					this._CustomField4 = value;
					this.SendPropertyChanged("CustomField4");
					this.OnCustomField4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField5", DbType="NVarChar(1000)")]
		public string CustomField5
		{
			get
			{
				return this._CustomField5;
			}
			set
			{
				if ((this._CustomField5 != value))
				{
					this.OnCustomField5Changing(value);
					this.SendPropertyChanging();
					this._CustomField5 = value;
					this.SendPropertyChanged("CustomField5");
					this.OnCustomField5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField6", DbType="NVarChar(1000)")]
		public string CustomField6
		{
			get
			{
				return this._CustomField6;
			}
			set
			{
				if ((this._CustomField6 != value))
				{
					this.OnCustomField6Changing(value);
					this.SendPropertyChanging();
					this._CustomField6 = value;
					this.SendPropertyChanged("CustomField6");
					this.OnCustomField6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField7", DbType="NVarChar(1000)")]
		public string CustomField7
		{
			get
			{
				return this._CustomField7;
			}
			set
			{
				if ((this._CustomField7 != value))
				{
					this.OnCustomField7Changing(value);
					this.SendPropertyChanging();
					this._CustomField7 = value;
					this.SendPropertyChanged("CustomField7");
					this.OnCustomField7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField8", DbType="NVarChar(1000)")]
		public string CustomField8
		{
			get
			{
				return this._CustomField8;
			}
			set
			{
				if ((this._CustomField8 != value))
				{
					this.OnCustomField8Changing(value);
					this.SendPropertyChanging();
					this._CustomField8 = value;
					this.SendPropertyChanged("CustomField8");
					this.OnCustomField8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField9", DbType="NVarChar(1000)")]
		public string CustomField9
		{
			get
			{
				return this._CustomField9;
			}
			set
			{
				if ((this._CustomField9 != value))
				{
					this.OnCustomField9Changing(value);
					this.SendPropertyChanging();
					this._CustomField9 = value;
					this.SendPropertyChanged("CustomField9");
					this.OnCustomField9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField10", DbType="NVarChar(1000)")]
		public string CustomField10
		{
			get
			{
				return this._CustomField10;
			}
			set
			{
				if ((this._CustomField10 != value))
				{
					this.OnCustomField10Changing(value);
					this.SendPropertyChanging();
					this._CustomField10 = value;
					this.SendPropertyChanged("CustomField10");
					this.OnCustomField10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField11", DbType="NVarChar(1000)")]
		public string CustomField11
		{
			get
			{
				return this._CustomField11;
			}
			set
			{
				if ((this._CustomField11 != value))
				{
					this.OnCustomField11Changing(value);
					this.SendPropertyChanging();
					this._CustomField11 = value;
					this.SendPropertyChanged("CustomField11");
					this.OnCustomField11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField12", DbType="NVarChar(1000)")]
		public string CustomField12
		{
			get
			{
				return this._CustomField12;
			}
			set
			{
				if ((this._CustomField12 != value))
				{
					this.OnCustomField12Changing(value);
					this.SendPropertyChanging();
					this._CustomField12 = value;
					this.SendPropertyChanged("CustomField12");
					this.OnCustomField12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField13", DbType="NVarChar(1000)")]
		public string CustomField13
		{
			get
			{
				return this._CustomField13;
			}
			set
			{
				if ((this._CustomField13 != value))
				{
					this.OnCustomField13Changing(value);
					this.SendPropertyChanging();
					this._CustomField13 = value;
					this.SendPropertyChanged("CustomField13");
					this.OnCustomField13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField14", DbType="NVarChar(1000)")]
		public string CustomField14
		{
			get
			{
				return this._CustomField14;
			}
			set
			{
				if ((this._CustomField14 != value))
				{
					this.OnCustomField14Changing(value);
					this.SendPropertyChanging();
					this._CustomField14 = value;
					this.SendPropertyChanged("CustomField14");
					this.OnCustomField14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField15", DbType="NVarChar(1000)")]
		public string CustomField15
		{
			get
			{
				return this._CustomField15;
			}
			set
			{
				if ((this._CustomField15 != value))
				{
					this.OnCustomField15Changing(value);
					this.SendPropertyChanging();
					this._CustomField15 = value;
					this.SendPropertyChanged("CustomField15");
					this.OnCustomField15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCommentUserID", DbType="Int")]
		public System.Nullable<int> LastCommentUserID
		{
			get
			{
				return this._LastCommentUserID;
			}
			set
			{
				if ((this._LastCommentUserID != value))
				{
					if (this._TpUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastCommentUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastCommentUserID = value;
					this.SendPropertyChanged("LastCommentUserID");
					this.OnLastCommentUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentProjectID", DbType="Int")]
		public System.Nullable<int> ParentProjectID
		{
			get
			{
				return this._ParentProjectID;
			}
			set
			{
				if ((this._ParentProjectID != value))
				{
					if (this._Project1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ParentProjectID = value;
					this.SendPropertyChanged("ParentProjectID");
					this.OnParentProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					if (this._TpUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditorID", DbType="Int")]
		public System.Nullable<int> LastEditorID
		{
			get
			{
				return this._LastEditorID;
			}
			set
			{
				if ((this._LastEditorID != value))
				{
					if (this._TpUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditorIDChanging(value);
					this.SendPropertyChanging();
					this._LastEditorID = value;
					this.SendPropertyChanged("LastEditorID");
					this.OnLastEditorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityTypeID", DbType="Int")]
		public System.Nullable<int> EntityTypeID
		{
			get
			{
				return this._EntityTypeID;
			}
			set
			{
				if ((this._EntityTypeID != value))
				{
					this.OnEntityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntityTypeID = value;
					this.SendPropertyChanged("EntityTypeID");
					this.OnEntityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_Project", Storage="_Project", ThisKey="GeneralID", OtherKey="ProjectID", IsUnique=true, IsForeignKey=false)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.General = null;
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.General = this;
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_TestPlan", Storage="_TestPlan", ThisKey="GeneralID", OtherKey="TestPlanID", IsUnique=true, IsForeignKey=false)]
		public TestPlan TestPlan
		{
			get
			{
				return this._TestPlan.Entity;
			}
			set
			{
				TestPlan previousValue = this._TestPlan.Entity;
				if (((previousValue != value) 
							|| (this._TestPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestPlan.Entity = null;
						previousValue.General = null;
					}
					this._TestPlan.Entity = value;
					if ((value != null))
					{
						value.General = this;
					}
					this.SendPropertyChanged("TestPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_General", Storage="_Project1", ThisKey="ParentProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public Project Project1
		{
			get
			{
				return this._Project1.Entity;
			}
			set
			{
				Project previousValue = this._Project1.Entity;
				if (((previousValue != value) 
							|| (this._Project1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project1.Entity = null;
						previousValue.Generals.Remove(this);
					}
					this._Project1.Entity = value;
					if ((value != null))
					{
						value.Generals.Add(this);
						this._ParentProjectID = value.ProjectID;
					}
					else
					{
						this._ParentProjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_General", Storage="_TpUser", ThisKey="LastCommentUserID", OtherKey="UserID", IsForeignKey=true)]
		public TpUser TpUser
		{
			get
			{
				return this._TpUser.Entity;
			}
			set
			{
				TpUser previousValue = this._TpUser.Entity;
				if (((previousValue != value) 
							|| (this._TpUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TpUser.Entity = null;
						previousValue.Generals.Remove(this);
					}
					this._TpUser.Entity = value;
					if ((value != null))
					{
						value.Generals.Add(this);
						this._LastCommentUserID = value.UserID;
					}
					else
					{
						this._LastCommentUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TpUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_General1", Storage="_TpUser1", ThisKey="LastEditorID", OtherKey="UserID", IsForeignKey=true)]
		public TpUser TpUser1
		{
			get
			{
				return this._TpUser1.Entity;
			}
			set
			{
				TpUser previousValue = this._TpUser1.Entity;
				if (((previousValue != value) 
							|| (this._TpUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TpUser1.Entity = null;
						previousValue.Generals1.Remove(this);
					}
					this._TpUser1.Entity = value;
					if ((value != null))
					{
						value.Generals1.Add(this);
						this._LastEditorID = value.UserID;
					}
					else
					{
						this._LastEditorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TpUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TpUser_General2", Storage="_TpUser2", ThisKey="OwnerID", OtherKey="UserID", IsForeignKey=true)]
		public TpUser TpUser2
		{
			get
			{
				return this._TpUser2.Entity;
			}
			set
			{
				TpUser previousValue = this._TpUser2.Entity;
				if (((previousValue != value) 
							|| (this._TpUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TpUser2.Entity = null;
						previousValue.Generals2.Remove(this);
					}
					this._TpUser2.Entity = value;
					if ((value != null))
					{
						value.Generals2.Add(this);
						this._OwnerID = value.UserID;
					}
					else
					{
						this._OwnerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TpUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PluginProfile")]
	public partial class PluginProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PluginProfileID;
		
		private string _PluginName;
		
		private string _ProfileName;
		
		private System.Nullable<System.DateTime> _SyncDate;
		
		private System.Nullable<bool> _Active;
		
		private string _Settings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPluginProfileIDChanging(int value);
    partial void OnPluginProfileIDChanged();
    partial void OnPluginNameChanging(string value);
    partial void OnPluginNameChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    partial void OnSyncDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncDateChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnSettingsChanging(string value);
    partial void OnSettingsChanged();
    #endregion
		
		public PluginProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PluginProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PluginProfileID
		{
			get
			{
				return this._PluginProfileID;
			}
			set
			{
				if ((this._PluginProfileID != value))
				{
					this.OnPluginProfileIDChanging(value);
					this.SendPropertyChanging();
					this._PluginProfileID = value;
					this.SendPropertyChanged("PluginProfileID");
					this.OnPluginProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PluginName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PluginName
		{
			get
			{
				return this._PluginName;
			}
			set
			{
				if ((this._PluginName != value))
				{
					this.OnPluginNameChanging(value);
					this.SendPropertyChanging();
					this._PluginName = value;
					this.SendPropertyChanged("PluginName");
					this.OnPluginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SyncDate
		{
			get
			{
				return this._SyncDate;
			}
			set
			{
				if ((this._SyncDate != value))
				{
					this.OnSyncDateChanging(value);
					this.SendPropertyChanging();
					this._SyncDate = value;
					this.SendPropertyChanged("SyncDate");
					this.OnSyncDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Settings", DbType="NVarChar(MAX)")]
		public string Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				if ((this._Settings != value))
				{
					this.OnSettingsChanging(value);
					this.SendPropertyChanging();
					this._Settings = value;
					this.SendPropertyChanged("Settings");
					this.OnSettingsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalSetting")]
	public partial class GlobalSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GlobalSettingID;
		
		private string _CompanyName;
		
		private System.Data.Linq.Binary _Logo;
		
		private string _SMTPServer;
		
		private System.Nullable<int> _SMTPPort;
		
		private string _SMTPLogin;
		
		private string _SMTPPassword;
		
		private System.Nullable<bool> _SMTPAuthentication;
		
		private System.Nullable<bool> _IsEmailNotificationsEnabled;
		
		private string _SMTPSender;
		
		private string _HelpDeskPortalPath;
		
		private System.Nullable<bool> _NotifyRequester;
		
		private System.Nullable<bool> _NotifyAutoCreatedRequester;
		
		private string _AppHostAndPath;
		
		private System.Nullable<bool> _DisableHttpAccess;
		
		private string _CsvExportDelimiter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGlobalSettingIDChanging(int value);
    partial void OnGlobalSettingIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnLogoChanging(System.Data.Linq.Binary value);
    partial void OnLogoChanged();
    partial void OnSMTPServerChanging(string value);
    partial void OnSMTPServerChanged();
    partial void OnSMTPPortChanging(System.Nullable<int> value);
    partial void OnSMTPPortChanged();
    partial void OnSMTPLoginChanging(string value);
    partial void OnSMTPLoginChanged();
    partial void OnSMTPPasswordChanging(string value);
    partial void OnSMTPPasswordChanged();
    partial void OnSMTPAuthenticationChanging(System.Nullable<bool> value);
    partial void OnSMTPAuthenticationChanged();
    partial void OnIsEmailNotificationsEnabledChanging(System.Nullable<bool> value);
    partial void OnIsEmailNotificationsEnabledChanged();
    partial void OnSMTPSenderChanging(string value);
    partial void OnSMTPSenderChanged();
    partial void OnHelpDeskPortalPathChanging(string value);
    partial void OnHelpDeskPortalPathChanged();
    partial void OnNotifyRequesterChanging(System.Nullable<bool> value);
    partial void OnNotifyRequesterChanged();
    partial void OnNotifyAutoCreatedRequesterChanging(System.Nullable<bool> value);
    partial void OnNotifyAutoCreatedRequesterChanged();
    partial void OnAppHostAndPathChanging(string value);
    partial void OnAppHostAndPathChanged();
    partial void OnDisableHttpAccessChanging(System.Nullable<bool> value);
    partial void OnDisableHttpAccessChanged();
    partial void OnCsvExportDelimiterChanging(string value);
    partial void OnCsvExportDelimiterChanged();
    #endregion
		
		public GlobalSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalSettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GlobalSettingID
		{
			get
			{
				return this._GlobalSettingID;
			}
			set
			{
				if ((this._GlobalSettingID != value))
				{
					this.OnGlobalSettingIDChanging(value);
					this.SendPropertyChanging();
					this._GlobalSettingID = value;
					this.SendPropertyChanged("GlobalSettingID");
					this.OnGlobalSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPServer", DbType="NVarChar(50)")]
		public string SMTPServer
		{
			get
			{
				return this._SMTPServer;
			}
			set
			{
				if ((this._SMTPServer != value))
				{
					this.OnSMTPServerChanging(value);
					this.SendPropertyChanging();
					this._SMTPServer = value;
					this.SendPropertyChanged("SMTPServer");
					this.OnSMTPServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPPort", DbType="Int")]
		public System.Nullable<int> SMTPPort
		{
			get
			{
				return this._SMTPPort;
			}
			set
			{
				if ((this._SMTPPort != value))
				{
					this.OnSMTPPortChanging(value);
					this.SendPropertyChanging();
					this._SMTPPort = value;
					this.SendPropertyChanged("SMTPPort");
					this.OnSMTPPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPLogin", DbType="NVarChar(50)")]
		public string SMTPLogin
		{
			get
			{
				return this._SMTPLogin;
			}
			set
			{
				if ((this._SMTPLogin != value))
				{
					this.OnSMTPLoginChanging(value);
					this.SendPropertyChanging();
					this._SMTPLogin = value;
					this.SendPropertyChanged("SMTPLogin");
					this.OnSMTPLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPPassword", DbType="NVarChar(50)")]
		public string SMTPPassword
		{
			get
			{
				return this._SMTPPassword;
			}
			set
			{
				if ((this._SMTPPassword != value))
				{
					this.OnSMTPPasswordChanging(value);
					this.SendPropertyChanging();
					this._SMTPPassword = value;
					this.SendPropertyChanged("SMTPPassword");
					this.OnSMTPPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPAuthentication", DbType="Bit")]
		public System.Nullable<bool> SMTPAuthentication
		{
			get
			{
				return this._SMTPAuthentication;
			}
			set
			{
				if ((this._SMTPAuthentication != value))
				{
					this.OnSMTPAuthenticationChanging(value);
					this.SendPropertyChanging();
					this._SMTPAuthentication = value;
					this.SendPropertyChanged("SMTPAuthentication");
					this.OnSMTPAuthenticationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailNotificationsEnabled", DbType="Bit")]
		public System.Nullable<bool> IsEmailNotificationsEnabled
		{
			get
			{
				return this._IsEmailNotificationsEnabled;
			}
			set
			{
				if ((this._IsEmailNotificationsEnabled != value))
				{
					this.OnIsEmailNotificationsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEmailNotificationsEnabled = value;
					this.SendPropertyChanged("IsEmailNotificationsEnabled");
					this.OnIsEmailNotificationsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMTPSender", DbType="NVarChar(100)")]
		public string SMTPSender
		{
			get
			{
				return this._SMTPSender;
			}
			set
			{
				if ((this._SMTPSender != value))
				{
					this.OnSMTPSenderChanging(value);
					this.SendPropertyChanging();
					this._SMTPSender = value;
					this.SendPropertyChanged("SMTPSender");
					this.OnSMTPSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpDeskPortalPath", DbType="NVarChar(255)")]
		public string HelpDeskPortalPath
		{
			get
			{
				return this._HelpDeskPortalPath;
			}
			set
			{
				if ((this._HelpDeskPortalPath != value))
				{
					this.OnHelpDeskPortalPathChanging(value);
					this.SendPropertyChanging();
					this._HelpDeskPortalPath = value;
					this.SendPropertyChanged("HelpDeskPortalPath");
					this.OnHelpDeskPortalPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyRequester", DbType="Bit")]
		public System.Nullable<bool> NotifyRequester
		{
			get
			{
				return this._NotifyRequester;
			}
			set
			{
				if ((this._NotifyRequester != value))
				{
					this.OnNotifyRequesterChanging(value);
					this.SendPropertyChanging();
					this._NotifyRequester = value;
					this.SendPropertyChanged("NotifyRequester");
					this.OnNotifyRequesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyAutoCreatedRequester", DbType="Bit")]
		public System.Nullable<bool> NotifyAutoCreatedRequester
		{
			get
			{
				return this._NotifyAutoCreatedRequester;
			}
			set
			{
				if ((this._NotifyAutoCreatedRequester != value))
				{
					this.OnNotifyAutoCreatedRequesterChanging(value);
					this.SendPropertyChanging();
					this._NotifyAutoCreatedRequester = value;
					this.SendPropertyChanged("NotifyAutoCreatedRequester");
					this.OnNotifyAutoCreatedRequesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppHostAndPath", DbType="NVarChar(255)")]
		public string AppHostAndPath
		{
			get
			{
				return this._AppHostAndPath;
			}
			set
			{
				if ((this._AppHostAndPath != value))
				{
					this.OnAppHostAndPathChanging(value);
					this.SendPropertyChanging();
					this._AppHostAndPath = value;
					this.SendPropertyChanged("AppHostAndPath");
					this.OnAppHostAndPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableHttpAccess", DbType="Bit")]
		public System.Nullable<bool> DisableHttpAccess
		{
			get
			{
				return this._DisableHttpAccess;
			}
			set
			{
				if ((this._DisableHttpAccess != value))
				{
					this.OnDisableHttpAccessChanging(value);
					this.SendPropertyChanging();
					this._DisableHttpAccess = value;
					this.SendPropertyChanged("DisableHttpAccess");
					this.OnDisableHttpAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CsvExportDelimiter", DbType="NVarChar(50)")]
		public string CsvExportDelimiter
		{
			get
			{
				return this._CsvExportDelimiter;
			}
			set
			{
				if ((this._CsvExportDelimiter != value))
				{
					this.OnCsvExportDelimiterChanging(value);
					this.SendPropertyChanging();
					this._CsvExportDelimiter = value;
					this.SendPropertyChanged("CsvExportDelimiter");
					this.OnCsvExportDelimiterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revision")]
	public partial class Revision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RevisionID;
		
		private int _SourceControlID;
		
		private System.DateTime _CommitDate;
		
		private System.Nullable<int> _PluginProfileID;
		
		private string _Description;
		
		private System.Nullable<int> _ProjectID;
		
		private System.Nullable<int> _AuthorID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRevisionIDChanging(int value);
    partial void OnRevisionIDChanged();
    partial void OnSourceControlIDChanging(int value);
    partial void OnSourceControlIDChanged();
    partial void OnCommitDateChanging(System.DateTime value);
    partial void OnCommitDateChanged();
    partial void OnPluginProfileIDChanging(System.Nullable<int> value);
    partial void OnPluginProfileIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProjectIDChanging(System.Nullable<int> value);
    partial void OnProjectIDChanged();
    partial void OnAuthorIDChanging(System.Nullable<int> value);
    partial void OnAuthorIDChanged();
    #endregion
		
		public Revision()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RevisionID
		{
			get
			{
				return this._RevisionID;
			}
			set
			{
				if ((this._RevisionID != value))
				{
					this.OnRevisionIDChanging(value);
					this.SendPropertyChanging();
					this._RevisionID = value;
					this.SendPropertyChanged("RevisionID");
					this.OnRevisionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceControlID", DbType="Int NOT NULL")]
		public int SourceControlID
		{
			get
			{
				return this._SourceControlID;
			}
			set
			{
				if ((this._SourceControlID != value))
				{
					this.OnSourceControlIDChanging(value);
					this.SendPropertyChanging();
					this._SourceControlID = value;
					this.SendPropertyChanged("SourceControlID");
					this.OnSourceControlIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitDate", DbType="DateTime NOT NULL")]
		public System.DateTime CommitDate
		{
			get
			{
				return this._CommitDate;
			}
			set
			{
				if ((this._CommitDate != value))
				{
					this.OnCommitDateChanging(value);
					this.SendPropertyChanging();
					this._CommitDate = value;
					this.SendPropertyChanged("CommitDate");
					this.OnCommitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PluginProfileID", DbType="Int")]
		public System.Nullable<int> PluginProfileID
		{
			get
			{
				return this._PluginProfileID;
			}
			set
			{
				if ((this._PluginProfileID != value))
				{
					this.OnPluginProfileIDChanging(value);
					this.SendPropertyChanging();
					this._PluginProfileID = value;
					this.SendPropertyChanged("PluginProfileID");
					this.OnPluginProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int")]
		public System.Nullable<int> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int")]
		public System.Nullable<int> AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestPlan")]
	public partial class TestPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _InitialEstimate;
		
		private int _TestPlanID;
		
		private System.Nullable<int> _ProjectID;
		
		private EntitySet<TestCaseTestPlan> _TestCaseTestPlans;
		
		private EntityRef<General> _General;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitialEstimateChanging(System.Nullable<decimal> value);
    partial void OnInitialEstimateChanged();
    partial void OnTestPlanIDChanging(int value);
    partial void OnTestPlanIDChanged();
    partial void OnProjectIDChanging(System.Nullable<int> value);
    partial void OnProjectIDChanged();
    #endregion
		
		public TestPlan()
		{
			this._TestCaseTestPlans = new EntitySet<TestCaseTestPlan>(new Action<TestCaseTestPlan>(this.attach_TestCaseTestPlans), new Action<TestCaseTestPlan>(this.detach_TestCaseTestPlans));
			this._General = default(EntityRef<General>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialEstimate", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InitialEstimate
		{
			get
			{
				return this._InitialEstimate;
			}
			set
			{
				if ((this._InitialEstimate != value))
				{
					this.OnInitialEstimateChanging(value);
					this.SendPropertyChanging();
					this._InitialEstimate = value;
					this.SendPropertyChanged("InitialEstimate");
					this.OnInitialEstimateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TestPlanID
		{
			get
			{
				return this._TestPlanID;
			}
			set
			{
				if ((this._TestPlanID != value))
				{
					if (this._General.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestPlanIDChanging(value);
					this.SendPropertyChanging();
					this._TestPlanID = value;
					this.SendPropertyChanged("TestPlanID");
					this.OnTestPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int")]
		public System.Nullable<int> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestPlan_TestCaseTestPlan", Storage="_TestCaseTestPlans", ThisKey="TestPlanID", OtherKey="TestPlanID")]
		public EntitySet<TestCaseTestPlan> TestCaseTestPlans
		{
			get
			{
				return this._TestCaseTestPlans;
			}
			set
			{
				this._TestCaseTestPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="General_TestPlan", Storage="_General", ThisKey="TestPlanID", OtherKey="GeneralID", IsForeignKey=true)]
		public General General
		{
			get
			{
				return this._General.Entity;
			}
			set
			{
				General previousValue = this._General.Entity;
				if (((previousValue != value) 
							|| (this._General.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._General.Entity = null;
						previousValue.TestPlan = null;
					}
					this._General.Entity = value;
					if ((value != null))
					{
						value.TestPlan = this;
						this._TestPlanID = value.GeneralID;
					}
					else
					{
						this._TestPlanID = default(int);
					}
					this.SendPropertyChanged("General");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_TestPlan", Storage="_Project", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.TestPlans.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.TestPlans.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TestCaseTestPlans(TestCaseTestPlan entity)
		{
			this.SendPropertyChanging();
			entity.TestPlan = this;
		}
		
		private void detach_TestCaseTestPlans(TestCaseTestPlan entity)
		{
			this.SendPropertyChanging();
			entity.TestPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestCaseTestPlan")]
	public partial class TestCaseTestPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TestCaseTestPlanID;
		
		private System.Nullable<int> _TestPlanID;
		
		private System.Nullable<int> _TestCaseID;
		
		private EntityRef<TestPlan> _TestPlan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestCaseTestPlanIDChanging(int value);
    partial void OnTestCaseTestPlanIDChanged();
    partial void OnTestPlanIDChanging(System.Nullable<int> value);
    partial void OnTestPlanIDChanged();
    partial void OnTestCaseIDChanging(System.Nullable<int> value);
    partial void OnTestCaseIDChanged();
    #endregion
		
		public TestCaseTestPlan()
		{
			this._TestPlan = default(EntityRef<TestPlan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCaseTestPlanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TestCaseTestPlanID
		{
			get
			{
				return this._TestCaseTestPlanID;
			}
			set
			{
				if ((this._TestCaseTestPlanID != value))
				{
					this.OnTestCaseTestPlanIDChanging(value);
					this.SendPropertyChanging();
					this._TestCaseTestPlanID = value;
					this.SendPropertyChanged("TestCaseTestPlanID");
					this.OnTestCaseTestPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPlanID", DbType="Int")]
		public System.Nullable<int> TestPlanID
		{
			get
			{
				return this._TestPlanID;
			}
			set
			{
				if ((this._TestPlanID != value))
				{
					if (this._TestPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestPlanIDChanging(value);
					this.SendPropertyChanging();
					this._TestPlanID = value;
					this.SendPropertyChanged("TestPlanID");
					this.OnTestPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCaseID", DbType="Int")]
		public System.Nullable<int> TestCaseID
		{
			get
			{
				return this._TestCaseID;
			}
			set
			{
				if ((this._TestCaseID != value))
				{
					this.OnTestCaseIDChanging(value);
					this.SendPropertyChanging();
					this._TestCaseID = value;
					this.SendPropertyChanged("TestCaseID");
					this.OnTestCaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestPlan_TestCaseTestPlan", Storage="_TestPlan", ThisKey="TestPlanID", OtherKey="TestPlanID", IsForeignKey=true)]
		public TestPlan TestPlan
		{
			get
			{
				return this._TestPlan.Entity;
			}
			set
			{
				TestPlan previousValue = this._TestPlan.Entity;
				if (((previousValue != value) 
							|| (this._TestPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestPlan.Entity = null;
						previousValue.TestCaseTestPlans.Remove(this);
					}
					this._TestPlan.Entity = value;
					if ((value != null))
					{
						value.TestCaseTestPlans.Add(this);
						this._TestPlanID = value.TestPlanID;
					}
					else
					{
						this._TestPlanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TestPlan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
