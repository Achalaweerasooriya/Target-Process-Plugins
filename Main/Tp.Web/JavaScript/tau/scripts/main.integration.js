!function(){window.jsErrors=[],require(["jQuery","Underscore","tau/core/tau","tests/integration/specs"],function(e,n,a,s){var t=function(e){return e.replace(/ /g,"_")};s.on("progress",function(n){var a=n.data;e(".progress-bar>span").width(a.percent+"%"),a.failed>0&&e(".progress-bar").removeClass("green").addClass("orange")}),s.on("executing",function(n){var a=n.data;e("#"+t(a.name)).removeClass("notRun").addClass("executing")});var o=[];s.on("completed",function(){window.allTestsCompleted=!0,n.each(o,function(e){window.jsErrors.push("Scenario ["+e.name+"] failed")})}),s.on("success",function(n){var a=n.data;e("#"+t(a.name)).removeClass("executing").removeClass("notRun").addClass("passed")}),s.on("failure",function(n){var a=n.data;e("#"+t(a.name)).removeClass("executing").removeClass("notRun").addClass("failed"),o.push(a)}),n.each(n(s.scenarios).keys(),function(n){e('<div class="test notRun" id="'+t(n)+'"></div>').text(n).appendTo(".tests-panel").click(function(){var e=document.location.href.split("?")[0]+"?filter="+encodeURI(n);document.location.href=e})});var r={filter:decodeURI(a.getValueFromQueryString("filter"))};s.executeStepByStep(r)})}();