define(["require","Underscore","jQuery","tau/utils/utils.serverErrorTranslator","tau/services/data.service"],function(e){"use strict";var s=e("Underscore"),t=e("jQuery"),r=(e("tau/utils/utils.serverErrorTranslator"),e("tau/services/data.service")),i=r.extend({init:function(e){this._super(e.getStore(),e.getStore2(),e.service("errorBar")),this._appPath=e.getApplicationPath();var s=e.getLoggedUser();this._processFields=["Id","Name","IsDefault","Projects.Select({Id,Name}) as Projects","Practices.Select(Name) as Practices","Terms.Select({WordKey,Value}) as Terms",(s.isAdministrator?"true":"ProcessAdmins.Count(Id="+s.id+")>0")+" as isVisible"]},getProcesses:function(){return this._find("process",{select:this._processFields})},getProcessesByIds:function(e){return this._find("process",{select:this._processFields,where:{id:{is:"in ["+e.join(",")+"]"}}})},saveProcess:function(e){return this._store.saveDef("process",{$set:e,fields:s.keys(e)}).then(function(e){return e.data.id},this._handleStoreErrorResponse.bind(this))},updateProcess:function(e,t){return this._store.saveDef("process",{$set:s.extend(t,{id:e})}).then(function(e){return e.data},this._handleStoreErrorResponse.bind(this))},deleteProcess:function(e){return this._store.removeDef("process",{id:e}).then(function(){return e},this._handleStoreErrorResponse.bind(this))},cloneProcess:function(e,r){var i=r?{name:r}:{};return t.ajax({type:"POST",contentType:"application/json",dataType:"json",data:JSON.stringify(i),url:[this._appPath,"/api/v1/Processes/",e,"/clone"].join("")}).then(s.property("Id"),this._handleXhrErrorResponse.bind(this))},getWorkflowEntityTypes:function(){return this._find("entitytype",{select:["Id","Name.ToLower() as Type","Practice.Name as Practice"],where:{isAssignable:!0}})},getAllPractices:function(){return this._find("practice",{select:["Id"]})},getRole:function(e){return this._findOne("role",{select:["Id"],where:{name:'"'+e+'"'}},null)}});return i});