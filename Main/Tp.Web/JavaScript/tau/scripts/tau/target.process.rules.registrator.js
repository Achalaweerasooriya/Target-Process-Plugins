define(["Underscore","tau/store/types.targetprocess"],function(_,a){return{typeContainSimpleField:function(a,b){return _.find(a.simpleFields,function(a){return a===b})},registerRules:function(b,c){this.registeredEntityTypes={},this.rules=b,_.each(a.getDictionary(),this.registerType,this),b.register({type:"feature",changes:["initialEstimate"],fields:["timeRemain"]}),b.register({type:"iteration",changes:["startDate"],fields:["endDate"]}),b.register({type:"iteration",changes:["endDate"],fields:["startDate"]}),b.register({type:"testPlanRun",changes:["release"],fields:[{build:["id","name"]}]}),b.register({type:"testPlanRun",changes:["iteration"],fields:[{build:["id","name"]}]}),b.registerRule({name:"auto-include-before-save",type:"roleEffort",changes:["effort"],fields:[{assignable:["id","effort","effortToDo","effortCompleted","timeSpent","timeRemain"]}]}),b.registerRule({name:"auto-include-before-save",type:"userStory",changes:["release","iteration"],fields:[{tasks:[{release:["id","name"]},{iteration:["id","name"]}]}]}),b.registerRule({name:"auto-include-before-save",type:"task",changes:["entityState"],fields:[{release:["id","name"]},{iteration:["id","name"]}]}),b.registerRule({name:"auto-action-after-save",type:"assignable",changes:["times"],action:function(a){a.store.refresh("assignable",{id:a.data.id,fields:["effortCompleted","effortToDo","timeSpent","timeRemain",{roleEfforts:["id","effort","effortToDo"]}]}).done()}}),b.registerRule({name:"auto-action-after-save",type:"feature",changes:["userStories"],action:function(a){a.store.refresh("feature",{id:a.data.id,fields:["effortCompleted","effortToDo","timeSpent","timeRemain","userStories-count","effort",{roleEfforts:["id","effort","effortToDo"]}]}).done()}}),b.registerRule({name:"auto-action-after-save",type:"iteration",changes:["userStories|bugs"],action:function(a){a.store.refresh("iteration",{id:a.data.id,fields:["bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum"]}).done()}}),b.registerRule({name:"auto-action-after-save",type:"release",changes:["userStories"],action:function(a){a.store.refresh("release",{id:a.data.id,fields:["bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum",{features:["effortToDo","effortCompleted","userStories-count"]}]}).done()}}),b.registerRule({name:"auto-action-after-save",type:"userStory",changes:["tasks"],action:function(a){a.data.cmd.type==="task"&&!a.data.cmd.config.id?a.store.refresh("userStory",{id:a.data.id,fields:["tasks-count","tasks-effort-sum","tasks-effortToDo-sum",{entityState:["id","name"]}]}).done():a.store.refresh("userStory",{id:a.data.id,fields:["effort","effortToDo","effortCompleted","timeSpent","timeRemain","tasks-count","tasks-effort-sum","tasks-effortToDo-sum"]}).done()}}),b.registerRule({name:"auto-include-before-save",type:"task",changes:["entityState"],fields:[{userStory:["id","tasks-effort-sum","tasks-effortToDo-sum","effort","effortToDo","effortCompleted","timeSpent","timeRemain","tasks-count",{entityState:["id","name","isInitial","isFinal","isPlanned","isCommentRequired"]}]}]}),b.registerRule({name:"auto-include-before-save",type:"userStory",changes:["entityState"],fields:["tasks-effortToDo-sum",{feature:["effortToDo","effortCompleted","userStories-count"]},{iteration:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{release:["bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum",{features:["effortToDo","effortCompleted","userStories-count"]}]}]}),b.registerRule({name:"auto-action-after-save",type:"feature",changes:["userStories"],action:function(a){a.store.refresh("feature",{id:a.data.obj.id,fields:["effortToDo","effortCompleted","userStories-count"]}).done()}}),b.registerRule({name:"auto-include-before-save",type:"bug",changes:["entityState"],fields:[{iteration:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]}]}),b.registerRule({name:"auto-action-after-save",type:"roleEffort",changes:["effort"],action:function(a){var b=a.store,c=a.data.obj;b.get(c.type,{id:c.id,fields:[{assignable:["id"]}]}).done({success:function(a){a=a[0];var c=a.data.assignable.id,d=a.data.assignable.__type,e={task:[{userStory:["id","effort","effortToDo","effortCompleted","timeSpent","timeRemain","tasks-count","tasks-effort-sum","tasks-effortToDo-sum"]}],userStory:[{iteration:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{release:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{feature:["userStories-count","effort","effortToDo","effortCompleted","timeSpent","timeRemain"]}],bug:[{iteration:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]},{release:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]}]},f=e[d];if(f){var g=_(f).filter(function(a){var e=_.getFieldName(a);return b.isPropertyInitialized(c,d,e)});g.length&&b.refresh(d,{id:c,fields:g}).done()}}})}}),b.registerRule({name:"auto-action-after-save",type:"comment",action:function(a){var b=a.data,d=b.cmd["comment-practices-notification-opts"];if(d&&_(d).keys().length){var e=c.getNotificationService();e.notifyComment(b.id,d)}}})},registerType:function(a){var b=this.registeredEntityTypes,c=this.rules;if(!b.hasOwnProperty(a.name)){b[a.name]=!0,_.each(a.aliases,function(a){b[a]=!0});var d="endDate";a.refs.hasOwnProperty("entityState")&&this.typeContainSimpleField(a,d)&&(c.register({type:a.name,changes:["entityState"],fields:["endDate","leadTime","cycleTime"]}),c.register({type:a.name,changes:["entityState"],fields:[{roleEfforts:["effort","effortToDo"]}]}))}}}})