define(["Underscore","tau/store/types.targetprocess"],function(_,tauTypes){return{typeContainSimpleField:function(type,simpleFieldName){return _.find(type.simpleFields,function(field){return field===simpleFieldName})},registerRules:function(rules,configurator){this.registeredEntityTypes={},this.rules=rules,_.each(tauTypes.getDictionary(),this.registerType,this),rules.register({type:"feature",changes:["initialEstimate"],fields:["timeRemain"]}),rules.register({type:"iteration",changes:["startDate"],fields:["endDate"]}),rules.register({type:"iteration",changes:["endDate"],fields:["startDate"]}),rules.register({type:"teamIteration",changes:["startDate"],fields:["endDate"]}),rules.register({type:"teamIteration",changes:["endDate"],fields:["startDate"]}),rules.register({type:"testPlanRun",changes:["release"],fields:[{build:["id","name"]}]}),rules.register({type:"testPlanRun",changes:["iteration","teamIteration"],fields:[{build:["id","name"]}]}),rules.registerRule({name:"auto-include-before-save",type:"roleEffort",changes:["effort"],fields:[{assignable:["id","effort","effortToDo","effortCompleted","timeSpent","timeRemain"]}]}),rules.registerRule({name:"auto-include-before-save",type:"userStory",changes:["release","iteration","teamIteration"],fields:[{tasks:[{release:["id","name"]},{iteration:["id","name"]},{teamIteration:["id","name"]}]}]}),rules.registerRule({name:"auto-include-before-save",type:"task",changes:["entityState"],fields:[{release:["id","name"]},{iteration:["id","name"]},{teamIteration:["id","name"]}]}),rules.registerRule({name:"auto-action-after-save",type:"assignable",changes:["times"],action:function(cfg){cfg.store.refresh("assignable",{id:cfg.data.id,fields:["effortCompleted","effortToDo","timeSpent","timeRemain",{roleEfforts:["id","effort","effortToDo"]}]}).done()}}),rules.registerRule({name:"auto-action-after-save",type:"feature",changes:["userStories"],action:function(cfg){cfg.store.refresh("feature",{id:cfg.data.id,fields:["effortCompleted","effortToDo","timeSpent","timeRemain","userStories-count","effort",{roleEfforts:["id","effort","effortToDo"]}]}).done()}}),rules.registerRule({name:"auto-action-after-save",type:"iteration",changes:["userStories|bugs"],action:function(cfg){cfg.store.refresh("iteration",{id:cfg.data.id,fields:["bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum"]}).done()}}),rules.registerRule({name:"auto-action-after-save",type:"teamIteration",changes:["userStories|bugs"],action:function(cfg){cfg.store.refresh("teamIteration",{id:cfg.data.id,fields:["bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum"]}).done()}}),rules.registerRule({name:"auto-action-after-save",type:"release",changes:["userStories"],action:function(cfg){cfg.store.refresh("release",{id:cfg.data.id,fields:["bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum",{features:["effortToDo","effortCompleted","userStories-count"]}]}).done()}}),rules.registerRule({name:"auto-action-after-save",type:"userStory",changes:["tasks"],action:function(cfg){var c=cfg.data,type=c.cmd?c.cmd.type:c.obj?c.obj.type:c.type,id=c.cmd?c.cmd.config.id:null;type==="task"&&!id?cfg.store.refresh("userStory",{id:cfg.data.id,fields:["tasks-count","tasks-effort-sum","tasks-effortToDo-sum",{entityState:["id","name"]}]}).done():cfg.store.refresh("userStory",{id:cfg.data.id,fields:["effort","effortToDo","effortCompleted","timeSpent","timeRemain","tasks-count","tasks-effort-sum","tasks-effortToDo-sum"]}).done()}}),rules.registerRule({name:"auto-include-before-save",type:"task",changes:["entityState"],fields:[{userStory:["id","tasks-effort-sum","tasks-effortToDo-sum","effort","effortToDo","effortCompleted","timeSpent","timeRemain","tasks-count",{entityState:["id","name","isInitial","isFinal","isPlanned","isCommentRequired"]}]}]}),rules.registerRule({name:"auto-include-before-save",type:"userStory",changes:["entityState"],fields:["tasks-effortToDo-sum",{feature:["effortToDo","effortCompleted","userStories-count"]},{iteration:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{teamIteration:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{release:["bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum",{features:["effortToDo","effortCompleted","userStories-count"]}]}]}),rules.registerRule({name:"auto-action-after-save",type:"feature",changes:["userStories"],action:function(cfg){cfg.store.refresh("feature",{id:cfg.data.obj.id,fields:["effortToDo","effortCompleted","userStories-count"]}).done()}}),rules.registerRule({name:"auto-include-before-save",type:"bug",changes:["entityState"],fields:[{iteration:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]},{teamIteration:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]}]}),rules.registerRule({name:"auto-action-after-save",type:"roleEffort",changes:["effort"],action:function(cfg){var q=cfg.store,d=cfg.data.obj;q.get(d.type,{id:d.id,fields:[{assignable:["id"]}]}).done({success:function(r){r=r[0];var id=r.data.assignable.id,type=r.data.assignable.__type,autoUpdateMap={task:[{userStory:["id","effort","effortToDo","effortCompleted","timeSpent","timeRemain","tasks-count","tasks-effort-sum","tasks-effortToDo-sum",{roleEfforts:["effort","effortToDo"]}]}],userStory:[{iteration:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{teamIteration:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{release:["userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{feature:["userStories-count","effort","effortToDo","effortCompleted","timeSpent","timeRemain"]}],bug:[{iteration:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]},{teamIteration:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]},{release:["bugs-effortToDo-sum","bugs-effortCompleted-sum"]}]},fields=autoUpdateMap[type];if(fields){var requiredFields=_(fields).filter(function(field){var fieldName=_.getFieldName(field);return q.isPropertyInitialized(id,type,fieldName)});requiredFields.length&&q.refresh(type,{id:id,fields:requiredFields}).done()}}})}}),rules.registerRule({name:"auto-action-after-save",type:"comment",action:function(cfg){var d=cfg.data,notificationSettings=d.cmd["comment-practices-notification-opts"];if(notificationSettings&&_(notificationSettings).keys().length){var notificationService=configurator.getNotificationService();notificationService.notifyComment(d.id,notificationSettings)}}})},registerType:function(type){var registeredEntityTypes=this.registeredEntityTypes,rules=this.rules;if(!registeredEntityTypes.hasOwnProperty(type.name)){registeredEntityTypes[type.name]=!0,_.each(type.aliases,function(alias){registeredEntityTypes[alias]=!0});var simpleFieldName="endDate";type.refs.hasOwnProperty("entityState")&&this.typeContainSimpleField(type,simpleFieldName)&&(rules.register({type:type.name,changes:["entityState"],fields:["endDate","leadTime","cycleTime"]}),rules.register({type:type.name,changes:["entityState"],fields:[{roleEfforts:["effort","effortToDo"]}]}))}}}})