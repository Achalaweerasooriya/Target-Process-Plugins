define(["Underscore","tau/core/view-base","tau/components/component.board.container","tau/configurations/board.container.config"],function(_,ViewBase,ContainerComponent,PageConfig){return ViewBase.extend({init:function(config){this._super(config)},initialize:function(){},"bus view.dom.ready":function(e){this.container.fire("view.dom.ready",e.data)},"bus beforeInit+boardSettings.ready":function(evt,initConfig,bs){var self=this,config=initConfig.config,boardSettings=bs.boardSettings,configurator=initConfig.config.context.configurator;configurator.registeredServices&&delete configurator.registeredServices.boardSettings,configurator.registerService("boardSettings",boardSettings),boardSettings.unbind({listener:self}),boardSettings.bind({fields:["name"],listener:self,callback:function(r){configurator.getTitleManager().setTitle(_.asString(r.name)),configurator.getHistory().updateCurrent({title:_.asString(r.name)})}}),boardSettings.get({fields:["id","name"],callback:function(r){configurator.getTitleManager().setTitle(_.asString(r.name)),configurator.getHistory().process(),configurator.getHistory().setCurrent({url:configurator.getUrlBuilder().getRelativeBoardUrl(r.id),title:_.asString(r.name),id:r.id}),configurator.getRouting().setReferer({id:r.id})}});var pageConfig=new PageConfig(configurator),containerConfig=_.extend(config,pageConfig.getPageBoardConfig()),c=self.container=ContainerComponent.create({name:"board page container",layout:containerConfig.layout,template:containerConfig.template,store:config.store,extensions:_.union([],containerConfig.extensions||[]),context:config.context});c.on("afterInit",self["container afterInit"],self),c.on("afterRender",self["container afterRender"],self),c.on("componentsCreated",self["container componentsCreated"],self),configurator.getConfig("tmpBoardIsJustAdded",!1)||(boardSettings.settings.edit=!1,boardSettings.fieldsRetrieved.push("edit")),c.fire("boardSettings.ready",{boardSettings:boardSettings}),c.initialize(containerConfig)},"container afterInit":function(evt){this.fireAfterInit()},"container componentsCreated":function(evt){this.fire(evt.name,evt.data)},"container afterRender":function(evt){this.fireBeforeRender(),this.element=evt.data.element,this.fireAfterRender()},lifeCycleCleanUp:function(){this.destroyContainer(),this._super()},destroyContainer:function(){if(!this.container)return;this.container.destroy(),this.container=null},destroy:function(){this.destroyContainer(),this._super()}})})