define(["Underscore","jQuery","tau/core/view-base","tau/components/component.container","tau/configurations/reports.container.config"],function(_,$,ViewBase,containerComponent,factoryConfig){return ViewBase.extend({init:function(config){this._super(config)},initialize:function(){},"bus beforeInit":function(evt){var self=this,config=self.config,reportConfig=new factoryConfig(config),configurator=self.config.context.configurator;configurator.getTitleManager().setTitle("Report");var history=configurator.getHistory();setTimeout(_.bind(function(){history.reset(),history.setCurrent({id:0,url:"#reports/"+this.config.reportType,title:reportConfig.getReportNameByKey(this.config.reportType)})},this),1);var componentSettings=configurator.getBoardSettingsFactory().createComponentSettings({id:"reports"});self.config.context.componentSettings=componentSettings;var containerConfig=_.extend(config,reportConfig.getConfig()),c=self.container=containerComponent.create({name:"board page container",layout:containerConfig.layout,template:containerConfig.template,extensions:_.union([],containerConfig.extensions||[]),context:config.context}),initialize=function(states){configurator.setConfig("states",states),c.on("afterInit",self["container afterInit"],self),c.on("afterRender",self["container afterRender"],self),c.on("componentsCreated",self["container componentsCreated"],self),c.initialize(containerConfig)};this.processStates().done(function(states){initialize(states)}),componentSettings.unbind({listener:self,callback:self.onStateChanged}),componentSettings.bind({fields:["reports"],listener:self,callback:function(data){history.updateCurrent({url:"#reports/"+data.reports,title:reportConfig.getReportNameByKey(data.reports)})}})},"container afterInit":function(evt){this.fireAfterInit()},"container componentsCreated":function(evt){this.fire(evt.name,evt.data)},"container afterRender":function(evt){this.fireBeforeRender(),this.element=evt.data.element,evt.data.element.addClass("tau-page-entity"),this.fireAfterRender()},lifeCycleCleanUp:function(){this.destroyContainer(),this._super()},processStates:function(){var reportType=this.config.reportType,settings=this.config.context.componentSettings,def=$.Deferred();return reportType?settings.set({set:{reports:reportType},callback:function(states){def.resolve(states)}}):settings.get({fields:["reports"],callback:function(states){def.resolve(states)}}),def},destroyContainer:function(){if(!this.container)return;this.container.destroy(),this.container=null},destroy:function(){this.config.context.componentSettings.unbind({listener:this}),this.destroyContainer(),this._super()}})})