define(["tau/core/bus","jQuery","Underscore","./url.resolver","tau/core/event"],function(Class,$,_,resolver,Event){var deconvertNode=function(node){node=node||{};var ignoreKeys=["key","ownerId","scope","id","group","data","userData","publicData"],keys=_.difference(_.keys(node),ignoreKeys);return _.each(keys,function(key){node[key]=JSON.parse(node[key])}),node.publicData&&(node.publicData=deconvertNode(node.publicData)),node.userData&&(node.userData=deconvertNode(node.userData)),node},convertNode=function(node){node=node||{};var result={};return _.each(_.keys(node),function(key){result[key]=JSON.stringify(node[key])}),result},jsonConvert=function(text){if(!text)return null;var jsonR=(text?JSON.parse(text):null)||{},items=[];return jsonR.items?(_.each(jsonR.items,function(item){items.push(deconvertNode(item))}),items):deconvertNode(jsonR)},API=Class.extend({config:null,init:function(config){this.config=config||{},_.defaults(this.config,{service:$.ajax})},getServiceDeferred:function(ajaxConfig){return this.config.service(ajaxConfig)},_makeServiceCall:function(ajaxConfig,$deferred,result){var self=this,onGetData=function(r){result.data=r,r&&(r.publicData||r.userData)&&(result.value=_.extend(_.extend({},r.publicData||{}),r.userData||{})),$deferred.resolve(result)};return self.getServiceDeferred(ajaxConfig,$deferred).done(onGetData).fail(function(r){try{r.responseText=JSON.parse(r.responseText)}catch(e){r.responseText=r.statusText}result.data=r,$deferred.reject(result);var error={message:r.responseText};self.fire("error",error)}),$deferred},resolve:function($deferred){var config=$deferred.$config,url=resolver.resolve($deferred.$config),ajaxConfig={url:url,dataType:"json",$scope:config,converters:{"text json":jsonConvert}},result={ajaxConfig:ajaxConfig,config:config};if(config.$actionType==="DELETE")ajaxConfig.type="POST",ajaxConfig.contentType="application/json; charset=utf-8",ajaxConfig.beforeSend=function(xhr){xhr.setRequestHeader("X-HTTP-Method-Override","DELETE")};else if(config.$value){var $value=_.clone(config.$value);$value.userData=convertNode($value.userData),$value.publicData=convertNode($value.publicData),ajaxConfig.type="POST",ajaxConfig.contentType="application/json; charset=utf-8",ajaxConfig.data=JSON.stringify($value)}return this._makeServiceCall(ajaxConfig,$deferred,result)},select:function(group,config){return config.$group=group,this.resolveDeferred(config)},remove:function(group,config){config.$group=group,config.$actionType="DELETE",this.fire("beforeRemove",config);var query=$.Deferred();return query.$config=config,query.always(_.bind(function(){this.fire("afterRemove",config)},this,config)),this.resolve(query),query},data:function(group,key,value){if(!group)throw new Error("group is required");_.isObject(key)&&(value=key,key=null),value&&!value.hasOwnProperty("publicData")&&!value.hasOwnProperty("userData")&&(value={userData:value});var config={$group:group,$key:key,$value:value},commands={};key?commands={before:"beforeUpdate",after:"afterUpdate"}:commands={before:"beforeInser",after:"afterInsert"},this.fire(commands.before,config);var query=$.Deferred();return query.$config=config,query.always(_.bind(function(){this.fire(commands.after,config)},this,config)),this.resolve(query)},createDeferredCall:function(config){var $deferred=$.Deferred();return $deferred.$config=config,$deferred},resolveDeferred:function(config){return this.resolve(this.createDeferredCall(config))}});return Event.implementOn(API.prototype),API})