define(["Underscore","tau/core/extension.base","tau/libs/inviter/inviter"],function(_,BaseModel,Inviter){return BaseModel.extend({"bus configurator.ready:last + form.submitted":function(evt,configurator,formData){var self=this,inviter=new Inviter(configurator);inviter.invite(formData.members).done(function(members){self.fire("members.saved",members)})},"bus configurator.ready:last + entity.ready:last + members.saved":function(evt,configurator,entity,members){var self=this,store=configurator.getStore(),entityType=entity.entityType.name,entityMembers=entityType+"Members",failed=_.compact(_.pluck(members,"failure"));failed.length&&this.fire("team.add.nonFatalFailure","Can't assign users.");var succeeded=_.compact(_.pluck(members,"success")),setData={};setData[entityMembers]=_.map(succeeded,function(id){return{user:{id:id}}});var fields=["id","name"];fields.push(entityType==="team"?"icon":"color");var memberFields={};memberFields[entityMembers]=[{user:["id","firstName","lastName","avatarUri"]},{role:["id","name"]}],fields.push(memberFields),store.save(entityType,{id:entity.id,$set:setData,fields:fields}).done(function(res){self.fire("members.connected",res[0].data)})},"bus entity.ready:last + members.saved + members.connected":function(evt,teamSimple,members,teamFull){this.fire("invitation.success",teamFull)}})})