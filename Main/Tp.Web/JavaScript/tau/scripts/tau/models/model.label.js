define(["Underscore","tau/core/model-base"],function(_,baseModel){var _calculateCounts=function(fields,callbackInfo){},labelModel=baseModel.extend({onInit:function(){this.store.unbind(this);var dataToBind={text:this.config.text};this.config.cssClass&&(dataToBind.cssClass=this.config.cssClass),this.bus.fire("dataBind",dataToBind);var getBadgeText=this.config.getBadgeText;typeof getBadgeText=="function"&&(this.fire("beforeGetBadgeText",{prevValue:this.badgeText}),getBadgeText.call(this,{callback:this.onBadgeTextRetrieved,scope:this}));var fields=this.getCollectionFileds();if(_.isArray(fields)&&fields.length>0){var entityId=this.config.context.entity.id,typeName=this.config.context.entity.entityType.name||"general",changes=fields.join("|");this.config.store.on({type:typeName,eventName:"afterSave",hasChanges:[changes],filter:{id:entityId},listener:this},_.bind(this.onEntityChanged,this)),this.calculateCount()}},onEntityChanged:function(){var entityId=this.config.context.entity.id,typeName=this.config.context.entity.entityType.name||"general";this.config.store.evictProperties(entityId,typeName,_.map(this.getCollectionFileds(),function(val){return val+"-count"})),this.calculateCount()},calculateCount:function(){var self=this,ctx=self.config.context,type=ctx.entity.entityType.name,copyFields=[],fields=this.config.countFieldNames;for(var i=0;i<fields.length;i++)copyFields.push(fields[i]+"-count");var cmdSettings={id:ctx.entity.id,fields:copyFields};self.store.get(type,cmdSettings,{success:this.countersRetreived,scope:this}).done()},getCollectionFileds:function(){var fields=_.reject(this.config.countFieldNames,function(fieldName){return fieldName=="id"});return fields},countersRetreived:function(evtData){if(!this.config)return;var fields=this.getCollectionFileds(),data=evtData.data,totalCount=0;for(var i=0;i<fields.length;i++)totalCount+=data[fields[i]+"-count"];this.fire("setBadgeText",{text:totalCount})},onBadgeTextRetrieved:function(data){var text=data[this.config.badgeFieldName];this.badgeText=text,this.bus?this.bus.fire("setBadgeText",{text:text}):this.fire("badgeTextChanged",{text:text})}});return labelModel})