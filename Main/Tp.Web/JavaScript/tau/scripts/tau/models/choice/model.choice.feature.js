define(["Underscore","./model.choice.base"],function(e,t){return t.extend({name:"release-list",propertyType:"feature",onInit:function(){var t=this;t.store.get("project",{fields:["id","name",{process:["id"]},{features:["id","name"]}]},{success:e.bind(t.onProjectRetrieved,t)}).get("feature",{fields:["id","name",{project:["id"]}]},{success:e.bind(t.onFeatureRetrieved,t)}).get("process",{fields:["id",{practices:["name"]}]},{success:e.bind(t.onProcessesRetrieved,t)}).done({success:e.bind(t.onDataRetrieved,t)})},onFeatureRetrieved:function(e){this.featureList=e.data},onProjectRetrieved:function(e){this.projectList=e.data},onProcessesRetrieved:function(e){this.processList=e.data},getFeaturesForProject:function(t){var s=this.getCurrentEntityId(),i=function(e){e.id!==s&&this.push(e)},r=[];return this.projectHasRequirementsPractice(t)&&e.each(t.features,i,r),r},onDataRetrieved:function(){this.processData(this.projectList,this.processList)},projectHasRequirementsPractice:function(t){var s=t.process.id,i=e.detect(this.processList,function(e){return e.id==s}),r=e.detect(i.practices,function(e){return"Requirements"==e.name});return!e.isEmpty(r)},processData:function(t,s){var i=[];this.processList=s,e.each(this.sortProjects(t),function(t){var s=this.getFeaturesForProject(t);e.isEmpty(s)||i.push({id:t.id,name:t.name,items:s})},this);var r={states:i,completed:!0};this.fire("dataBind",r)}})});