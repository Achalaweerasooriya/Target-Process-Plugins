define(["Underscore","tau/core/model-base"],function(_,BaseModel){return BaseModel.extend({"bus beforeInit":function(evt){var configurator=evt.data.config.context.configurator;this.fire("configurator.ready",configurator)},getTeams:function(store){var deferred=$.Deferred();return store.get("team",{fields:["id","name","icon"]}).done(function(result){deferred.resolve(result[0].data)}),deferred},getProjects:function(store){var deferred=$.Deferred();return store.get("project",{fields:["id","name","color","isActive"]}).done(function(result){var projects=_.filter(result[0].data,function(v){return v.isActive});deferred.resolve(projects)}),deferred},getBoardAccess:function(boardSettings,configurator){var deferred=$.Deferred(),loggedUser=configurator.getLoggedUser();return boardSettings.get({fields:["ownerId","user","id","name","isShared","customSharedData","acid"],callback:function(data){var isOwner=!data.ownerId||data.ownerId==loggedUser.id,dataAccess={isShared:data.isShared,isAdmin:loggedUser.isAdministrator,isOwner:isOwner,customSharedData:data.customSharedData,id:data.id,name:data.name,acid:data.acid};dataAccess.customSharedData||(dataAccess.customSharedData={isActive:!1,teamIds:[],projectIds:[]}),deferred.resolve(dataAccess)}.bind(this)}),deferred},getEmailNotificationSettings:function(configurator){var deferred=$.Deferred();return configurator.getGlobalSettingsService().getGlobalSettings({success:function(data){deferred.resolve(data.IsEmailNotificationsEnabled)},failure:function(){deferred.resolve(!1)}}),deferred},_process:function(items,data){var sortBySelectionAndName=function(item){return(item.id==-1?"0":"1")+(item.selected?"0_":"1_")+item.name.toUpperCase()},list=items;return list=_.chain(list).map(function(item){return{id:item.id,name:item.name,icon:item.icon,color:item.color,selected:_.indexOf(data,item.id)>=0}}).sortBy(sortBySelectionAndName).value(),list},"bus configurator.ready + boardSettings.ready:last":function(evt,configurator,bs){var store=configurator.getStore(),boardSettings=bs.boardSettings;$.when(this.getTeams(store),this.getProjects(store),this.getBoardAccess(boardSettings,configurator),this.getEmailNotificationSettings(configurator)).done(function(teams,projects,access,isEmailNotificationsEnabled){teams=this._process(teams,access.customSharedData.teamIds),projects=this._process(projects,access.customSharedData.projectIds),this.fire("dataBind",{access:access,teams:teams,projects:projects,canAddTeams:!1,canAddProjects:!1,checkedAllProject:projects.length==access.customSharedData.projectIds.length,checkedAllTeam:teams.length==access.customSharedData.teamIds.length,showSearch:!0,submitLabel:"Share",boardId:access.id,boardName:access.name,isEmailNotificationsEnabled:isEmailNotificationsEnabled,boardAcid:access.acid})}.bind(this));var fireRefresh=function(){this.fire("refresh")}.bind(this);boardSettings.unbind({listener:this}),boardSettings.bind({fields:["name","acid"],listener:this,callback:fireRefresh}),store.unbind(this),store.on({eventName:"afterSave",type:"team",listener:this},fireRefresh),store.on({eventName:"afterRemove",type:"team",listener:this},fireRefresh),store.on({eventName:"afterSave",type:"project",listener:this},fireRefresh),store.on({eventName:"afterRemove",type:"project",listener:this},fireRefresh)},"bus boardSettings.ready:last + form.submitted":function(evt,bs,form){bs.boardSettings.set({set:form})},"bus destroy + boardSettings.ready:last":function(evt,smt,bs){bs.boardSettings.unbind({listener:this})}})})