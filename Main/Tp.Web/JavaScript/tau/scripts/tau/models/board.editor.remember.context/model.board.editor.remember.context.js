define(["Underscore","tau/core/model-base","tau/models/board.editor/board.filter.help"],function(_,BaseModel){var Model=BaseModel.extend({"bus beforeInit":function(evt){var configurator=evt.data.config.context.configurator,self=this;self.fire("configurator.ready",configurator),configurator.getAppStateStore().get({fields:["acid"],callback:function(result){self.fire("acid.ready",result.acid)}}),configurator.getAppStateStore().unbind({listener:this}),configurator.getAppStateStore().bind({fields:["acid"],listener:this,callback:function(result){self.fire("acid.changed",result.acid)}})},"bus boardSettings.ready:last + remember.acid":function(evt,bs,acid){var boardSettings=bs.boardSettings,self=this;boardSettings.set({set:{acid:acid},callback:function(){self.fire("settings.acid.changed")}})},"bus configurator.ready:last + boardSettings.ready:last + acid.ready + afterInit":function(evt,configurator,bs,acid){var self=this,loggedUser=configurator.getLoggedUser(),boardSettings=bs.boardSettings;boardSettings.get({fields:["ownerId","id","acid"],callback:function(data){var editable=!data.ownerId||data.ownerId==loggedUser.id||loggedUser.isAdministrator;self.fire("dataBind",{editable:editable,acid:data.acid,currentAcid:acid,boardAcidEqualToCurrentAcid:data.acid==acid}),self.fire("board.acid.ready",data.acid)}}),boardSettings.unbind({listener:self}),boardSettings.bind({fields:["acid"],listener:self,callback:function(data){self.fire("refresh")}})},"bus boardSettings.ready:last + destroy":function(evt,bs){bs.boardSettings.unbind({listener:this})},"bus settings.changed":function(evt,settings){settings&&settings.acid&&this.fire("board.acid.ready",settings.acid)},"bus configurator.ready:last + board.acid.ready":function(evt,configurator,acid){if(!acid)return;var self=this,store=configurator.getStore(),sortByValueGetter=function(item){return item.name.toUpperCase()};store.get("project",{fields:["id","name","color","isActive"]}).done(function(result){var projects=_.filter(result[0].data,function(v){return v.isActive});projects=_.sortBy(projects,sortByValueGetter),self.fire("projects.ready",[{id:-1,name:"No project",icon:""}].concat(projects))}),store.get("team",{fields:["id","name","icon"]}).done(function(result){var teams=result[0].data;teams=_.sortBy(teams,sortByValueGetter),self.fire("teams.ready",[{id:-1,name:"No team",icon:""}].concat(teams))});var contextStore=configurator.getApplicationContextService();contextStore.getApplicationContext({acid:acid},{success:function(context){self.fire("applicationContext.ready",context)},failure:function(){self.fire("applicationContext.ready",{appContext:{teamContext:{},projectContext:{},selectedProjects:{},selectedTeams:{}}})}})},"bus teams.ready + projects.ready + applicationContext.ready":function(evt,teams,projects,appContext){if(!appContext)return;var selectedProjectIds={};for(var i=0;i<appContext.selectedProjects.length;i++)selectedProjectIds[appContext.selectedProjects[i].id]=!0;var selectedTeamIds={},totalTeamsNumber=teams.length,totalProjectsNumber=projects.length;for(var i=0;i<appContext.selectedTeams.length;i++)selectedTeamIds[appContext.selectedTeams[i].id]=!0;teams=_.filter(teams,function(team){return appContext.appContext.teamContext.no&&team.id==-1?!0:selectedTeamIds[team.id]});if(teams.length==totalTeamsNumber){if(totalTeamsNumber>1||teams[0].id!=-1)teams=[{name:"Any Team"}]}else teams.length==0&&(teams=[{name:"No Team"}]);projects=_.filter(projects,function(project){return appContext.appContext.projectContext.no&&project.id==-1?!0:selectedProjectIds[project.id]});if(projects.length==totalProjectsNumber){if(totalProjectsNumber>1||projects[0].id!=-1)projects=[{name:"Any Project"}]}else projects.length==0&&(projects=[{name:"No Project"}]);this.fire("context.data.ready",{teams:teams,projects:projects})}});return Model})