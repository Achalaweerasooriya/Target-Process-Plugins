define(["tau/core/model-base","tau/core/termProcessor"],function(ModelBase,TermProcessor){var titleModel=ModelBase.extend({onInit:function(){var self=this,ctx=self.config.context,typeName=ctx.entity.entityType.name,entityId=ctx.entity.id;self.store.unbind(self),self.store.on({eventName:"afterSave",type:typeName,filter:{id:entityId},hasChanges:["userStories|effort"],listener:self},_.bind(self.onDataUpdated,self)),self.store.get(typeName,{id:entityId,fields:["id","userStories-count","effort"]},{scope:this,success:this.onGetEntity}).done({scope:this,success:this.onRequestCompleted})},onDataUpdated:function(){this.fire("refresh")},floatToString:function(flt){return flt.toFixed(2).replace(".00","")},_getEffortPoints:function(){return this.config.context.getEffortPoint().shortName},onGetEntity:function(result){if(!this.config)return;var entity=result.data,terms=this.config.context.getTerms(),tp=new TermProcessor(terms),userStoriesCount=entity["userStories-count"];userStoriesCount>0?(this.userStoriesCount=userStoriesCount,this.featureTerm=tp.getTerms("feature").name,this.userStoriesTerm=tp.getTerms("userStory").names,this.effort=this.floatToString(entity.effort),this.point=this._getEffortPoints(),this.hidden=!1):(this.label="",this.hidden=!0)},onRequestCompleted:function(){this.fire("dataBind",{userStoriesCount:this.userStoriesCount,featureTerm:this.featureTerm,userStoriesTerm:this.userStoriesTerm,effort:this.effort,point:this.point,hidden:this.hidden})}});return titleModel})