define(["tau/core/model-base","tau/core/termProcessor"],function(a,b){var c=a.extend({onInit:function(){var a=this,b=a.config.context,c=b.entity.entityType.name,d=b.entity.id;a.store.unbind(a),a.store.on({eventName:"afterSave",type:c,filter:{id:d},hasChanges:["userStories|effort"],listener:a},_.bind(a.onDataUpdated,a)),a.store.get(c,{id:d,fields:["id","userStories-count","effort"]},{scope:this,success:this.onGetEntity}).done({scope:this,success:this.onRequestCompleted})},onDataUpdated:function(){this.fire("refresh")},floatToString:function(a){return a.toFixed(2).replace(".00","")},_getEffortPoints:function(){return this.config.context.getEffortPoint().shortName},onGetEntity:function(a){var c=a.data,d=this.config.context.getTerms(),e=new b(d),f=c["userStories-count"];f>0?(this.userStoriesCount=f,this.featureTerm=e.getTerms("feature").name,this.userStoriesTerm=e.getTerms("userStory").names,this.effort=this.floatToString(c.effort),this.point=this._getEffortPoints(),this.hidden=!1):(this.label="",this.hidden=!0)},onRequestCompleted:function(){this.fire("dataBind",{userStoriesCount:this.userStoriesCount,featureTerm:this.featureTerm,userStoriesTerm:this.userStoriesTerm,effort:this.effort,point:this.point,hidden:this.hidden})}});return c})