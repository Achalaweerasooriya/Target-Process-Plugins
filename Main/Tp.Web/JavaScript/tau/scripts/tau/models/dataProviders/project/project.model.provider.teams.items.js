define(["Underscore","tau/models/dataProviders/model.provider.items.base"],function(e,t){return t.extend({sparklineLength:16,fetch:function(e){this._fetch("teamProjects","teamProject",!1,e)},_createDetailCommand:function(e){var t={};return t[e]=["id",{team:["id","name","icon",{teamMembers:[{user:["id","firstName","lastName","avatarUri"]}]}]}],t},_fetch:function(e,t,r,a){var n=this,i=this.config.context.entity,s=this.config.context.configurator;$.ajax({url:s.getApplicationPath()+"/api/v2/TeamProject?select={"+["id","isProjectAccessed","Project.ProjectMembers.Select(User.id) as projectMembers","Project.ProjectMembers.Count() as projectMembersCount",'"TeamProject" as __type',"new("+["Team.id","Team.name","Team.icon","Team.TeamMembers.Select({User.id, User.firstName, User.lastName, User.avatarUri}) AS members",'Team.Assignables.Count(entityType.Name == "Bug" and entityState.IsFinal != true) as openBugsCount','Team.Assignables.Count(entityType.Name == "Bug" and entityState.IsFinal == true) as closedBugsCount','Team.Assignables.Count(entityType.Name == "UserStory" and entityState.IsFinal != true) as openUsCount','Team.Assignables.Count(entityType.Name == "UserStory" and entityState.IsFinal == true) as closedUsCount','Team.Assignables.Where(entityType.Name == "UserStory" and Project.id = '+i.id+").Sparkline("+this.sparklineLength+") as userStoriesSparkline",'Team.Assignables.Where(entityType.Name == "Bug" and Project.id = '+i.id+").Sparkline("+this.sparklineLength+") as bugsSparkline"].join(",")+") as team"].join(",")+"}&where=(Project.id=="+i.id+")"}).done(function(e){a(n._convertData(e.items))}).fail(function(){a(n._convertData([]))})},_convertData:function(e){return e=this._super(e),this._sortByPriority(e)},_sortByPriority:function(t){return e.sortBy(t,function(e){return-1*e.id})},_convertItem:function(t){var r=t.team.members;t.team.teamMembers=e.map(r,function(e){return e.id});var a=this.config.context.configurator.getLoggedUser(),n=e.find(r,function(e){return e.id==a.id});n&&(r=e.reject(r,function(e){return e.id==a.id}),r.unshift(n));var i=7,s=!1;r.length>i&&(s=!0,r=r.slice(0,i)),r=e.map(r,function(t){return t.name=e.trim(t.firstName+" "+t.lastName),t.uri="#user/"+t.id,t});var o=t.team.userStoriesSparkline,m=t.team.bugsSparkline,c=this.config.context.configurator.getUrlBuilder().getNewViewUrl(t.team.id,"team",!0),u={id:t.id,__type:"teamProject",isProjectAccessed:t.isProjectAccessed,projectMembers:t.projectMembers,team:t.team,members:r,membersMore:s,teamMembersCount:t.team.teamMembers.length,teamMembersInProjectCount:e.intersection(t.team.teamMembers,t.projectMembers).length,uri:c,membersUri:c+"/members",appPath:this.config.context.configurator.getApplicationPath(),userStoriesSparkline:o,bugsSparkline:m};return u}})});