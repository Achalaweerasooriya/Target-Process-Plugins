define(["Underscore","tau/models/dataProviders/model.provider.items.base"],function(_,BaseProvider){return BaseProvider.extend({sparklineLength:16,fetch:function(fnCallback){this._fetch("teamProjects","teamProject",!1,fnCallback)},_createDetailCommand:function(collectionType){var detailCommand={};return detailCommand[collectionType]=["id",{team:["id","name","icon",{teamMembers:[{user:["id","firstName","lastName","avatarUri"]}]}]}],detailCommand},_fetch:function(collectionName,typeName,importanceTypeName,fnCallback){var self=this,entity=this.config.context.entity,configurator=this.config.context.configurator;$.ajax({url:configurator.getApplicationPath()+"/api/v2/TeamProject?select={"+["id",'"TeamProject" as __type',"new("+["Team.id","Team.name","Team.icon","Team.TeamMembers.Select({User.id, User.firstName, User.lastName, User.avatarUri}) AS members",'Team.Assignables.Count(entityType.Name == "Bug" and entityState.IsFinal != true) as openBugsCount','Team.Assignables.Count(entityType.Name == "Bug" and entityState.IsFinal == true) as closedBugsCount','Team.Assignables.Count(entityType.Name == "UserStory" and entityState.IsFinal != true) as openUsCount','Team.Assignables.Count(entityType.Name == "UserStory" and entityState.IsFinal == true) as closedUsCount','Team.Assignables.Where(entityType.Name == "UserStory" and Project.id = '+entity.id+").Sparkline("+this.sparklineLength+") as userStoriesSparkline",'Team.Assignables.Where(entityType.Name == "Bug" and Project.id = '+entity.id+").Sparkline("+this.sparklineLength+") as bugsSparkline"].join(",")+") as team"].join(",")+"}&where=(Project.id=="+entity.id+")"}).done(function(data){fnCallback(self._convertData(data.items))}).fail(function(){fnCallback(self._convertData([]))})},_convertData:function(data){return data=this._super(data),this._sortByPriority(data)},_sortByPriority:function(items){return _.sortBy(items,function(item){return item.id*-1})},_convertItem:function(data){var members=data.team.members,membersCount=members.length,currentUser=this.config.context.configurator.getLoggedUser(),currentMember=_.find(members,function(v){return v.id==currentUser.id});currentMember&&(members=_.reject(members,function(v){return v.id==currentUser.id}),members.unshift(currentMember));var limit=7,membersMore=!1;members.length>limit&&(membersMore=!0,members=members.slice(0,limit)),members=_.map(members,function(v){return v.name=_.trim(v.firstName+" "+v.lastName),v.uri="#user/"+v.id,v});var usp=data.team.userStoriesSparkline,bsp=data.team.bugsSparkline,item={id:data.id,__type:"teamProject",team:data.team,members:members,membersMore:membersMore,membersCount:membersCount,uri:"#team/"+data.team.id,membersUri:"#team/"+data.team.id+"/members",appPath:this.config.context.configurator.getApplicationPath(),userStoriesSparkline:usp,bugsSparkline:bsp};return item}})})