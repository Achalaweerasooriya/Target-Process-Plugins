define(["Underscore","tau/core/class"],function(_,Class){return Class.extend({init:function(config){this.entityId=config.context.entity.id,this.store=config.store,this.dependencyType=config.dependencyType||"master",this.entityTypeName=config.context.entity?config.context.entity.entityType.name:"general"},fetch:function(callback){var command={id:this.entityId,fields:[{masterRelations:[{master:["id",{entityType:["name"]}]},{relationType:["name"]}]},{slaveRelations:[{slave:["id",{entityType:["name"]}]},{relationType:["name"]}]},{entityType:["name"]}]};this.store.get(this.entityTypeName,command).done({success:function(data){this._getForTypes(data,this.dependencyType,callback)},scope:this})},_getForTypes:function(data,dependencyType,callback){var groupedByEntityType=_.groupBy(data[0].data[dependencyType+"Relations"],function(relation){return relation[dependencyType].entityType.name}),idsByTypes=_.map(groupedByEntityType,function(groupByName){return{entityType:groupByName[0][dependencyType].entityType.name,ids:_.map(groupByName,function(relatedEntity){return relatedEntity[dependencyType].id})}}),self=this,requests=_.map(idsByTypes,function(typeWithIds){return function(next){self.store.find(typeWithIds.entityType,{fields:self._getFieldsForEntity(typeWithIds.entityType),$query:{id:{$in:typeWithIds.ids}}}).done({success:function(r){next(!1,r[0].data)}})}});_.parallel(requests,function(err,results){var adapted=[];_.reduce(results,function(memo,r){return r.length>0&&memo.push({type:r[0].__type,items:r}),memo},adapted),adapted=_.sortBy(adapted,function(item){return item.items.length>0&&item.items[0].entityType.id}),callback(self.transform(data,dependencyType,adapted))})},_getFieldsForEntity:function(entityType){var baseFieldSet=["id","name",{entityType:["name"]},{project:["abbreviation"]}];switch(entityType.toLowerCase()){case"userstory":case"bug":case"feature":case"task":case"testplanrun":case"testcaserun":case"request":return baseFieldSet.concat([{entityState:["name","isFinal"]},{release:["name"]},{iteration:["name"]}]);case"iteration":return baseFieldSet.concat([{release:["name"]}]);case"build":return baseFieldSet.concat([{release:["name"]},{iteration:["name"]}]);case"impediment":return baseFieldSet.concat([{entityState:["name","isFinal"]}]);case"testcase":return baseFieldSet.concat(["lastStatus"]);default:return baseFieldSet}},transform:function(relations,dependencyType,relatedEntities){var self=this,result=_.map(relations[0].data[dependencyType+"Relations"],function(e){var entity;_.forEach(relatedEntities,function(relatedEntity){_.forEach(relatedEntity.items,function(item){item.id==e[dependencyType].id&&(entity=item)})});if(!entity)return null;var entityHasEntityState=entity.lastStatus===undefined;return{id:entity.id,__type:entity.__type,name:entity.name,project:entity.project?entity.project.abbreviation:"",hasValidEntityState:entityHasEntityState&&entity.entityState,entityState:entity.entityState,status:entityHasEntityState?"":entity.lastStatus?"Passed":"Failed",release:entity.release?entity.release.name:"",iteration:entity.iteration?entity.iteration.name:"",relationId:e.id,relationType:e.__type}});return _.filter(result,function(item){return item!=null})}})})