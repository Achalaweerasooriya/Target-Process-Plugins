define(["Underscore","tau/models/dataProviders/model.provider.items.base","tau/utils/utils.date"],function(_,Class,dateUtils){return Class.extend({fetch:function(fnCallback){this._fetch("testCaseRuns","testCaseRun","priority",fnCallback)},_createDetailCommand:function(collectionType){var detailCommand={};return detailCommand[collectionType]=["id","passed","executed","comment","runDate",{testPlanRun:["id","name","tags","numericPriority",{testPlan:["id","name"]},{priority:["id","name","importance"]},{release:["id","name"]},{iteration:["id","name"]},{build:["id","name"]}]}],detailCommand},_convertData:function(data){return data=this._super(data),data=_.compact(data),_.sortBy(data,function(item){return item.runDateReal}).reverse()},_convertItem:function(data){var self=this;if(data.runDate==null)return null;if(data.passed===null)return null;var testplanrun=data.testPlanRun,testplan=testplanrun.testPlan,item={id:data.id,__type:data.__type,name:testplan.name,testplan:testplan,comment:data.comment,testplanrun:{id:testplanrun.id,__type:testplanrun.__type,name:testplanrun.name,url:this.config.context.configurator.getUrlBuilder().getNewViewUrl(testplanrun.id,testplanrun.__type,!0)},release:testplanrun.release,iteration:testplanrun.iteration,build:testplanrun.build,passed:data.passed,runDate:dateUtils.format.datetime.short(dateUtils.convertToTimezone(data.runDate)),runDateReal:data.runDate,executed:data.executed,status:data.passed===!0?"Passed":data.passed===!1?"Failed":"Skipped"};return item}})})