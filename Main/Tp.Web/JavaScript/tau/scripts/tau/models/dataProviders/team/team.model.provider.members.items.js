define(["Underscore","tau/models/dataProviders/model.provider.items.base"],function(_,BaseProvider){return BaseProvider.extend({sparklineLength:16,fetch:function(fnCallback){this._fetch("teamMembers","teamMember",null,fnCallback)},_createDetailCommand:function(collectionType){var detailCommand={};return detailCommand[collectionType]=["id",{user:["id","firstName","lastName","email","avatarUri","IsAdministrator","isActive","bug-count","userStorie-count"]},{role:["id","name"]}],detailCommand},_fetch:function(collectionName,typeName,importanceTypeName,fnCallback){var self=this,entity=this.config.context.entity,configurator=this.config.context.configurator;$.ajax({url:configurator.getApplicationPath()+"/api/v2/TeamMember?select={"+["id",'"TeamMember" as __type',"new("+["User.id","User.firstName","User.lastName","User.email","User.avatarUri","User.isActive","User.isAdministrator",'User.Assignables.Count(entityType.Name == "Bug" AND entityState.IsFinal != true AND Team.id = '+entity.id+") as bugsCount",'User.Assignables.Count(entityType.Name == "Task" AND entityState.IsFinal != true AND Team.id = '+entity.id+") as tasksCount",'User.Assignables.Count(entityType.Name == "UserStory" AND entityState.IsFinal != true AND Team.id = '+entity.id+") as userStoriesCount","User.Assignables.Where(Team.id = "+entity.id+").Sparkline("+this.sparklineLength+") as allSparkline"].join(",")+") as user","new("+["Role.id","Role.name"].join(",")+") as role "].join(",")+"}&where=(Team.id=="+entity.id+")"}).done(function(data){fnCallback(self._convertData(data.items))}).fail(function(){fnCallback(self._convertData([]))})},_convertItem:function(data){data.user.name=_.trim(_.asString(data.user.firstName)+" "+_.asString(data.user.lastName))||"",data.user.url="#user/"+data.user.id;var item={id:data.id,__type:"teamMember",user:data.user,role:data.role,appPath:this.config.context.configurator.getApplicationPath(),doneSparkline:data.user.doneSparkline,allSparkline:data.user.allSparkline};return item}})})