define(["Underscore","tau/models/dataProviders/model.provider.groups.base","tau/utils/utils.date"],function(_,BaseProvider,dateUtils){return BaseProvider.extend({fetch:function(key,items,fnCallback){var types=["userstory"];return this.config.context.isPracticeAvailable("Bug Tracking")&&types.push("bug"),key=="entityState.name"?this._fetchState(key,types,fnCallback):this._fetchIterations(key,types,fnCallback)},isAvailableForItem:function(item,group){if(group.realGroups){var realGroup=_.find(group.realGroups,function(group){return group.entityType.name.toLowerCase()==item.__type.toLowerCase()});return realGroup?!0:!1}return!0},_fetchIterations:function(key,entityTypes,fnCallback){var ctx=this.config.context,entityTypeName=ctx.entity.entityType.name,entityId=ctx.entity.id,storeChain=this.config.store,command={id:entityId,nested:!0,fields:[{iterations:["id","name","startDate","endDate"]}]},dateFormat="d MMM";storeChain=storeChain.get("release",command),storeChain.done({success:function(data){var iterations=_(data).pluck("data")[0].iterations,groups=[];iterations=_.sortBy(iterations,function(item){return dateUtils.parse(item.startDate)}),_.forEach(iterations,function(item){var startDate=dateUtils.parse(item.startDate).clearTime(),endDate=dateUtils.parse(item.endDate).clearTime(),collapsed=!0,isCurrent=!1;dateUtils.Date.today().between(startDate,endDate)&&(collapsed=!1,isCurrent=!0);var title=startDate.toString(dateFormat)+" / "+endDate.toString(dateFormat);title=title+" ("+Math.floor((endDate.getTime()-startDate.getTime())/1e3/60/60/24+1)+" days)",isCurrent&&(title+=" (current)"),item.releaseId=entityId,groups.push({key:item.id,title:item.name,subtitle:title,collapsed:collapsed,realGroup:item})}),groups.push({key:null,title:"Backlog",collapsed:!0,realGroup:{id:null,releaseId:entityId}}),_.forEach(groups,function(group){group.items=[]}),fnCallback(groups)},scope:this})},moveToGroup:function(item,group,prevGroup,callback){return this.config.groupBy=="entityState.name"?this._moveToGroupByState(item,group,prevGroup,callback):this._moveToGroupByIteration(item,group,prevGroup,callback)},_moveToGroupByIteration:function(item,group,prevGroup,callback){var store=this.config.store,realGroup=group.realGroup;if(!realGroup||item.iteration&&realGroup.id==item.iteration.id){callback.call(null);return}var actions=[];actions.push(function(next){store.save(item.__type,{id:item.id,$set:{iteration:{id:realGroup.id},release:{id:realGroup.releaseId}},fields:["id",{iteration:["id"]}]}).done({success:function(){next(null,arguments)}})}),actions.push(function(next){store.get(item.__type,{id:item.id,fields:["id",{iteration:["id"]}]}).done({success:function(result){next(null,result[0].data)}})}),_.series(actions,function(err,result){_.isFunction(callback)&&callback.call(null,{changed:result[1]})})}})})