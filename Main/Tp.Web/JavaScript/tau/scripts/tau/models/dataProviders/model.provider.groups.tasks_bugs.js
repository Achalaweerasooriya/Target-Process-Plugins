define(["Underscore","tau/models/dataProviders/model.provider.groups.base"],function(_,Class){return Class.extend({fetch:function(key,items,fnCallback){var projectIds={tasks:[],bugs:[]},taskProjectIds=[],bugsProjectIds=[],tasks=_(items).select(function(el){return el.__type==="task"}),bugs=_(items).select(function(el){return el.__type==="bug"});projectIds.tasks=_(tasks).chain().pluck("projectId").uniq().value(),this.config.context.isPracticeAvailable("Bug Tracking")&&(projectIds.bugs=_(bugs).chain().pluck("projectId").uniq().value());var store=this.config.store,self=this;store.get("projects",{fields:[{process:["id"]}],list:!0}).done({success:function(res){var projects=res[0].data,processIds={tasks:[],bugs:[]};_.forEach(projectIds,function(ids,entityType){processIds[entityType]=_(projects).chain().select(function(project){return _(ids).include(project.id)}).map(function(project){return project.process.id}).uniq().value()});var fetchFilter=function(state){var typeName=(state.entityType.name||"").toLowerCase(),processId=state.process.id;return typeName==="task"&&_(processIds.tasks).include(processId)||typeName==="bug"&&_(processIds.bugs).include(processId)};return self._fetchState(key,fetchFilter,fnCallback)}})},moveToGroup:function(item,group,prevGroup,callback){return this._moveToGroupByState(item,group,prevGroup,callback)},isAvailableForItem:function(item,group,currentGroup){var realCurrentGroup=_.find(currentGroup.realGroups,function(group){return group.id==item.entityState.id}),realGroup=_.find(group.realGroups,function(group){return group.entityType.name.toLowerCase()==item.__type.toLowerCase()&&group.process.id==realCurrentGroup.process.id}),availableIds=_.pluck(realCurrentGroup.nextStates,"id");return availableIds.push(realCurrentGroup.id),realGroup&&_.include(availableIds,realGroup.id)},getCommentRequirements:function(item,groups,currentGroup){var realCurrentGroup=_.find(currentGroup.realGroups,function(group){return group.id==item.entityState.id}),config=[];return _.forEach(groups,function(group){var realGroup=_.find(group.realGroups,function(group){return group.entityType.name.toLowerCase()==item.__type.toLowerCase()&&group.process.id==realCurrentGroup.process.id});config.push({isCommentRequired:realGroup?realGroup.isCommentRequired:!1})}),config}})})