define(["Underscore","tau/core/model-base","tau/utils/utils.date"],function(_,ModelBase,dateUtils){function getTimesOfEntityQueryConfig(id){return{id:id,fields:["id","name",{times:["id","date","spent","remain","description",{assignable:["id"]},{user:["id","firstName","lastName"]}]}]}}function getTimesOfTasksQueryConfig(id){var tasksConfig={id:id,fields:["id",{tasks:["id","name",{times:["id","date","spent","remain","description",{assignable:["id"]},{user:["id","firstName","lastName"]}]}]}],list:!0,nested:!0};return tasksConfig}function dataProcessor(model){this.model=model,this.times=[]}dataProcessor.prototype={getAssignableRetrievedCallback:function(){return{scope:this,success:this.onAssignableRetrieved}},getTaskRetrievedCallbackInfo:function(){return{scope:this,success:this.onTasksRetrieved}},getAllTasksRetrievedCallbackInfo:function(){return{scope:this,success:this.onAllTasksRetrieved}},onAssignableRetrieved:function(result){this.assignable=this.model.assignable=result.data;var assignable=this.model.assignable,times=assignable.times;this._addTimesToTimeArray(times,this.assignable)},onTasksRetrieved:function(result){_(result.data.tasks).each(function(task){task.__type="task"});var tasks=result.data.tasks;for(var i=0;i<tasks.length;i++)this._addTimesToTimeArray(tasks[i].times,tasks[i])},onAllTasksRetrieved:function(){var initialData={items:this.getTimes()};this.model.bus.fire("dataBind",initialData)},getTimesSortedByDate:function(){var times=[],timesCount=this.times.length;for(var i=0;i<timesCount;i++){var time=_(this.times[i]).clone();time.date=dateUtils.parse(time.date),times.push(time)}return times.sort(function(a,b){var dateDiff=b.date-a.date;return dateDiff!=0?dateDiff:b.id-a.id}),times},getTimes:function(){var times=[],actualTimes=this.getTimesSortedByDate(),timesCount=actualTimes.length;for(var i=0;i<timesCount;i++)times.push(this.convertServerDataModelData(actualTimes[i]));return times},convertServerDataModelData:function(serverData){var user=serverData.user,urlBuilder=this.model.config.context.configurator.getUrlBuilder();return{id:serverData.id,date:dateUtils.format.date.short(dateUtils.convertToTimezone(serverData.date)),spent:serverData.spent,remain:serverData.remain,description:serverData.description,person:[user.firstName,user.lastName].join(" "),workOn:{__type:serverData.workOn.__type,name:serverData.workOn.name},editUrl:urlBuilder.getEditUrl(serverData.id,"time")}},_addTimesToTimeArray:function(times,workOn){var cloneOfTimes=[];for(var i=0;i<times.length;i++){var timeClone=_(times[i]).clone();timeClone.workOn=workOn,cloneOfTimes.push(timeClone)}this.times=this.times.concat(cloneOfTimes)}};var timeListModel=ModelBase.extend({isUserStory:function(entityTypeName){return entityTypeName.toLowerCase()=="userstory"},onInit:function(){var processor=new dataProcessor(this),assignable=this.config.context.entity,id=assignable.id,entityTypeName=assignable.entityType.name,config=getTimesOfEntityQueryConfig(id),isUserStory=this.isUserStory(entityTypeName),storeChain=this.store;storeChain=storeChain.get(entityTypeName,config,processor.getAssignableRetrievedCallback());if(isUserStory){var tasksConfig=getTimesOfTasksQueryConfig(id);storeChain=storeChain.get(entityTypeName,tasksConfig,processor.getTaskRetrievedCallbackInfo())}storeChain.done(processor.getAllTasksRetrievedCallbackInfo())}});return timeListModel})