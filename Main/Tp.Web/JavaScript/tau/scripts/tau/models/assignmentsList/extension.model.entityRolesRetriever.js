define(["Underscore","tau/models/extension.model.base"],function(_,ExtensionBase){return ExtensionBase.extend({category:"model entity roles retriever extension","bus registerStoreRequest":function(){var entity=this.config.context.entity||{entityType:{}},roleType={role:["id","name","isPair","hasEffort"]};this.fire("get",{type:entity.entityType.name,query:{id:entity.id,fields:[{roleEfforts:["id","effort","effortToDo",roleType,{assignable:["id"]}],list:!0},{entityState:[{role:["id"]}]}]},callback:{scope:this,success:this.onRoleEffortsRetrieved}})},"bus userGroupWasCreated":function(evtArgs){var group=evtArgs.data||{},role=group.role||{};if(role.hasEffort){var roleEfforts=this.entity.roleEfforts;_.each(roleEfforts,function(roleEffort){if(roleEffort.role.id==role.id)return group.roleEffort={effort:this.floatToString(roleEffort.effort),remain:this.floatToString(roleEffort.effortToDo),id:roleEffort.id},!0},this),this.fire("roleEffortsReady",roleEfforts)}else group.roleEffort=null},getRoles:function(){var roleEfforts=this.entity.roleEfforts,idRoleIsResponsible=this.entity.entityState.role&&this.entity.entityState.role.id,roles=[],roleEffortsCount=roleEfforts.length;for(var i=0;i<roleEffortsCount;i++){var role=roleEfforts[i].role;role.isResponsible=!1,role.id==idRoleIsResponsible&&(role.isResponsible=!0),roles.push(roleEfforts[i].role)}return roles},"bus entityRoleRetriever":function(evtArgs){this.entity=evtArgs.data.data;var roles=this.getRoles();this.fire("rolesReady",roles)},onRoleEffortsRetrieved:function(evtArgs){this.fire("entityRoleRetriever",evtArgs)},"bus extendDataToBind":function(evtArgs){var data=evtArgs.data||{}}})})