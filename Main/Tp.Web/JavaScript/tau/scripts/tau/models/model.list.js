define(["Underscore","tau/core/model-base","tau/models/dataProviders/model.provider.groups.default"],function(_,ModelBase,GroupsProvider){var entityListModel=ModelBase.extend({name:"model.list",onInit:function(){var self=this;self.store.unbind(this);var itemsProvider=new this.config.itemsDataProvider(this.config);itemsProvider.fetch(function(data){self.fire("afterItemsProvided",{data:data})})},"bus afterItemsProvided":function(e){var self=this,RealGroupsProvider=null;this.config.groupsDataProvider?RealGroupsProvider=this.config.groupsDataProvider:RealGroupsProvider=GroupsProvider;var items=e.data.data,groupFieldName=_.isArray(this.config.groupBy)?this.config.groupBy[0]:this.config.groupBy,provider=new RealGroupsProvider(this.config);provider.fetch(groupFieldName,items,function(groups){self.fireAfterGroupsProvided(groups)})},fireAfterGroupsProvided:function(groups){this.fire("afterGroupsProvided",{data:groups})},createSubscription:function(type,fnDetect){var self=this;self.store.on({eventName:"beforeRemove",type:type,listener:self},function(evt){var removedEntityId=evt.data.id;fnDetect(removedEntityId)&&self.fire("beforeDeleteRow",{id:removedEntityId})}),self.store.on({eventName:"afterRemove",type:type,listener:self},function(evt){var removedEntityId=evt.data.id;fnDetect(removedEntityId)&&self.fire("afterDeleteRow",{id:removedEntityId})})},"bus afterItemsProvided+afterGroupsProvided":function(e){var self=this,items=e.afterItemsProvided.data.data,groups=e.afterGroupsProvided.data.data;if(items&&items.length){var isItemDetected=function(entityId){return _(items).detect(function(item){return item.id==entityId})};_(items).chain().map(function(item){return item.__type}).unique().each(function(type){self.createSubscription(type,isItemDetected)})}var data={items:[],groups:[],isEmpty:items.length?!1:!0};groups!==!1?data.groups=this.innerGroupBy(items,groups):data.items=items,this.data=data,self.fire("afterDataProvided",{data:data})},"bus afterDataProvided":function(e){var result=this.preProcess(e.data.data);this.fire("preDataBind",result),this.fire("dataBind",result)},preProcess:function(data){var currentView=this.config.views[0];return _.forEach(data.groups,function(group){group.title||(_.isObject(group.key)?group.title=_.complexKey(group.key,currentView.group.dataIndex):group.title=group.key)}),data.config={views:this.config.views,currentView:currentView},data},innerGroupBy:function(items,groups){var groupFieldName=_.isArray(this.config.groupBy)?this.config.groupBy[0]:this.config.groupBy,self=this;return _.forEach(groups,function(group){_.forEach(items,function(item){var value=_.complexKey(item,groupFieldName);_.isArray(group.key)&&_.indexOf(group.key,value)>-1?group.items.push(item):_.isEqual(group.key,value)&&group.items.push(item)})}),groups},"bus prioritize.start":function(e){var item=e.data.item,currentGroup=e.data.group,RealGroupsProvider=null;this.config.groupsDataProvider?RealGroupsProvider=this.config.groupsDataProvider:RealGroupsProvider=GroupsProvider;var provider=new RealGroupsProvider(this.config),availableGroups=_.filter(this.data.groups,function(group){return provider.isAvailableForItem(item,group,currentGroup)});this.fire("prioritize.updateGroupsAvailability",{groups:availableGroups});var commentRequirementsConfig=provider.getCommentRequirements(item,this.data.groups,currentGroup);this.fire("prioritize.updateGroupsCommentRequirements",{groups:commentRequirementsConfig})}});return entityListModel})