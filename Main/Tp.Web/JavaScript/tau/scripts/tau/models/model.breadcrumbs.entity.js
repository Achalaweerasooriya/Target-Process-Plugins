define(["Underscore","tau/core/model-base","tau/core/termProcessor"],function(_,ModelBase,TermProcessor){var initialDataProcessor=function(model,appContext){this.model=model,this.appContext=appContext;var terms=appContext.processes[0].terms;this.termProcessor=new TermProcessor(terms)};initialDataProcessor.prototype={getTitle:function(entity){var parts=[];return _.each(this.fields,function(fieldName){parts.push(entity[fieldName])}),parts.join(" ")},convertToItem:function(entity){var _generateTitle=_.bind(function(entity){var name=this.termProcessor.getTerms(entity.__type).name;return name+" #"+entity.id+" "+this.getTitle(entity)},this);return{id:entity.id,url:"#"+entity.__type.toLowerCase()+"/"+entity.id,title:_generateTitle(entity)}},onGetEntity:function(result){this.entity=result.data},done:function(){this.model.fire("currentFound",this.convertToItem(this.entity))}};var BreadCrumbsEntityModel=ModelBase.extend({onInit:function(){var self=this,ctx=self.config.context,typeName=ctx.entity.entityType.name,entityId=ctx.entity.id,process=ctx.applicationContext.processes[0],processor=new initialDataProcessor(self,ctx.applicationContext),afterSaveCallback=function(e){e.data.changes.hasOwnProperty("name")&&self.store.get(typeName,{id:entityId,fields:["id","name"]},{success:function(r){self.fire("currentUpdated",processor.convertToItem(r.data))}}).done()};self.store.on({eventName:"afterSave",type:typeName,listener:this},afterSaveCallback);var fields=this.config.fields||["id","name"];processor.fields=_.clone(this.config.fields)||["name"],self.store.get(typeName,{id:entityId,fields:fields},{scope:processor,success:processor.onGetEntity}).done({scope:processor,success:processor.done})}});return BreadCrumbsEntityModel})