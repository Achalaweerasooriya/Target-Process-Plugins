define(["Underscore","tau/core/event.emitter","tau/slice/api"],function(_,a,b){return a.extend({"bus initialize+boardSettings.ready:last":function(a){var c=this,d=a.initialize.data,e=a["boardSettings.ready"].data.boardSettings;e.get({fields:["x","y","cells","zoomLevel"],callback:function(a){var e={definition:{global:{acid:d.context.acid},x:a.x,y:a.y,cells:a.cells},service:d.sliceService},f=new b(e);c.fire("slice.ready",{slice:f})}})},"bus slice.ready:last+model.get.sliceInfo":function(a){var b=this;b.onGetSliceInfo(a["slice.ready"].data.slice)},onGetSliceInfo:function(a){var b=this;a.axes().done(function(a){var c=a.data,d={marksX:c.x,marksY:c.y};b.onSliceInfoRetrieved(d)})},onSliceInfoRetrieved:function(a){this.fire("model.sliceInfo.retrieved",a)},"bus boardSettings.ready":function(a){var b=this,c=a.data.boardSettings;c.bind({fields:["zoomLevel"],listener:b,callback:_.bind(b.onZoomLevelUpdated,b)}),c.get({fields:["zoomLevel"],callback:_.bind(b.onZoomLevelReady,b)})},onZoomLevelUpdated:function(a){this.fire("model.zoomLevelChanged",a)},onZoomLevelReady:function(a){this.fire("model.zoomLevelChanged",a)}})})