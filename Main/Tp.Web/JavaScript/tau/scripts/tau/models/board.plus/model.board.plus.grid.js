define(["Underscore","tau/models/board.plus/model.board.plus"],function(_,BaseModel){return BaseModel.extend({requestSpace:function(definition,configurator,acid){var self=this,hasX=self.isConfigured(definition.x),hasY=self.isConfigured(definition.y),$spaceDeferred=$.Deferred(),processSpace=function(space){var response={viewMode:"board",definition:definition,zoomLevel:definition.zoomLevel||3};if(space&&space.data){var axesData={};_.forEach(space.data.axes.items,function(v){axesData[v.id]=v.name}),response.titleX=axesData[definition.x.types[0].toLowerCase()],response.titleY=axesData[definition.y.types[0].toLowerCase()]}$spaceDeferred.resolve(response)};return hasX&&hasY?configurator.getSliceFactory().create({definition:{global:{acid:acid}}}).space().done(processSpace).fail(processSpace):processSpace({}),$spaceDeferred},requestSize:function(slice){var self=this,$deferred=$.Deferred(),processSize=function(r){var size=r?r.data:{x:0,y:0};$deferred.resolve(_.deepClone(size))};return slice.size().done(processSize).fail(processSize),$deferred},requestMarks:function(axisName,definition,slice){var self=this,$deferred=$.Deferred(),page=definition.page,completeCall=function(marks,isAxisConfigured,isFocusArgs){var result={},axisPagingObject=isAxisConfigured?self.getAxisPagingObject(axisName,marks.items,page):self.getAxisNullPagingObject();axisPagingObject.isNull=!isAxisConfigured,axisPagingObject.isFocus=!!isFocusArgs,result[axisName]=axisPagingObject,result["marks"+axisName.toUpperCase()]=axisPagingObject.data,$deferred.resolve(result)},askForMarks=function(){var axisArgs=self.getSlicePagingArgs(axisName,page);return definition.focus[axisName].length>0&&(axisArgs={id:{$in:definition.focus[axisName]}},page[axisName]=0),slice[axisName](axisArgs).fail(function(){completeCall({items:[]},!1,!1)})},processAxisResponse=function(marks,isFocusArgs){var isAxisConfigured=self.isConfigured(definition[axisName]);if(isFocusArgs&&marks&&marks.items){var items={};_.each(marks.items,function(item){_.each(definition.focus[axisName],function(v){v.toLowerCase()==item[axisName].toLowerCase()&&(items[v.toLowerCase()]=item)})}),marks.items=_.values(items),marks.items.length&&(page.size[axisName]=marks.items.length)}if(isAxisConfigured&&(!marks.items||marks.items.length===0)&&(page[axisName]>0||isFocusArgs)){var data={page:{},focus:{}};return page[axisName]=0,data.page[axisName]=0,isFocusArgs&&(data.focus[axisName]=[],definition.focus[axisName]=[]),askForMarks().done(function(marks){processAxisResponse(marks.data)}),self.fire("board.settings.silent.set",data),!1}completeCall(marks,isAxisConfigured,isFocusArgs)};return askForMarks().done(function(args){var isFocusArgs=!1;args&&args.command&&args.command.config&&args.command.config.hasOwnProperty("id")&&(isFocusArgs=!0),processAxisResponse(args.data,isFocusArgs)}),$deferred},"bus configurator.ready:last + onGetSliceInfo.execute + acid.ready:last":function(evt,configurator,slice,acid){var self=this,definition=_.deepClone(slice.config.definition),$space=self.requestSpace(definition,configurator,acid),$size=self.requestSize(slice),$x=self.requestMarks("x",definition,slice),$y=self.requestMarks("y",definition,slice);$.when($space,$x,$y).done(function(s,x,y){var info=self.publishSliceInfoEvent(s,x,y);$size.done(function(size){_.each(["x","y"],function(axisName){info[axisName].isFocus&&(size[axisName]=info[axisName].onPage)}),self.publishBoardPagingSettingsEvent(size,info)})})},"bus boardSettings.ready:last + board.settings.silent.set":function(evt,bs,$set){var boardSettings=bs.boardSettings;boardSettings.get({fields:["page","focus"],callback:function(r){var page=r.page||{},focus=r.focus||{},data={page:page,focus:focus};_.extend(page,$set.page),_.extend(focus,$set.focus),boardSettings.set({set:data,isSilent:!0})}})},"bus board.paging.settings:last + board.paging.settings.retrieve":function(evt){this.fire("board.paging.settings.retrieved",_.values(evt)[0].data)},"bus page.move.to+board.paging.settings:last + boardSettings.ready:last":function(evt){var boardSettings=evt["boardSettings.ready"].data.boardSettings,pageSettings=evt["board.paging.settings"].data,moveValue=evt["page.move.to"].data.direction,page=pageSettings.page;this.getPageMoveStrategy(page)[moveValue](),boardSettings.set({set:{page:page}})},"bus boardSettings.ready:last+page.switched":function(evt,bs,page){var boardSettings=bs.boardSettings;boardSettings.set({set:{page:page}})},publishSliceInfoEvent:function(space,x,y){_.extend(space,x),_.extend(space,y);var availableDirections={up:space.y.hasPrev,down:space.y.hasNext,left:space.x.hasPrev,right:space.x.hasNext};return space=_.extend(space,{availableDirections:availableDirections,page:{x:space.x.currentPage,y:space.y.currentPage}}),space.x.title=space.titleX,space.y.title=space.titleY,this.fire("model.sliceInfo.retrieved",space),space},publishBoardPagingSettingsEvent:function(size,info){var self=this;_.each(["x","y"],function(axisName){if(size[axisName]){var axis=info[axisName];axis.total=size[axisName],axis.totalPages=self.getPagesCountForAxis(size[axisName],axis.maxOnPage)}}),this.fire("board.paging.settings",info)},onGetSliceInfo:function(slice){this.fire("onGetSliceInfo.execute",slice)}})})