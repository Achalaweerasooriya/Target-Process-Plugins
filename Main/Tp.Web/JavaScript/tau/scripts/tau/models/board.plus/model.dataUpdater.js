define(["Underscore","tau/core/event.emitter","tau/utils/utils.date","app.path"],function(_,baseModel,dateUtils,AppPath){var updatingFlag={},allTime=0;return baseModel.extend({dataSchema:{3:{query:{userstory:["name"],bug:["name"],feature:["name"],request:["name"],task:["name"],impediment:["name"],testcase:["name"],user:[{role:["id","name"]}]},dataFields:{userstory:["name"],bug:["name"],feature:["name"],request:["name"],task:["name"],impediment:["name"],testcase:["name"],user:["role"]}},4:{query:{userstory:["tags"],bug:["tags"],feature:["tags"],request:["tags"],task:["tags"],impediment:["tags"],testcase:["tags"],user:[{assignables:[{entityState:["isFinal","isInitial","isPlanned"]},{entityType:["id","name"]}]}]},dataFields:{userstory:["tags"],bug:["tags"],feature:["tags"],request:["tags"],task:["tags"],impediment:["tags"],testcase:["tags"],user:["assignables"]}},5:{query:{testcase:["lastStatus","lastRunDate"],user:["currentAllocation","teamMembers-count",{impediments:[{entityState:["isFinal"]}]}],userstory:[{assignments:[{generalUser:["id","firstName","lastName"]}]},"effort",{impediments:[{entityState:["isFinal"]}]},{bugs:[{entityState:["isFinal","isInitial","isPlanned"]}]},{tasks:[{entityState:["isFinal","isInitial","isPlanned"]}]}],bug:[{assignments:[{generalUser:["id","firstName","lastName"]}]},"effort",{impediments:[{entityState:["isFinal"]}]},{severity:["id","name"]}],feature:[{assignments:[{generalUser:["id","firstName","lastName"]}]},"effort",{userStories:[{entityState:["isFinal","isInitial","isPlanned"]}]},{impediments:[{entityState:["isFinal"]}]}],request:[{requesters:["id","firstName","lastName"]},{assignments:[{generalUser:["id","firstName","lastName"]}]},{userStories:[{entityState:["isFinal","isInitial","isPlanned"]}]},{bugs:[{entityState:["isFinal","isInitial","isPlanned"]}]},{tasks:[{entityState:["isFinal","isInitial","isPlanned"]}]},{features:[{entityState:["isFinal","isInitial","isPlanned"]}]},"createDate",{comments:["id","createDate",{owner:["firstName","lastName"]}]}],task:[{assignments:[{generalUser:["id","firstName","lastName"]}]},"effort",{impediments:[{entityState:["isFinal"]}]}],impediment:[{responsible:["id","firstName","lastName"]},"createDate",{priority:["id","name"]}]},dataFields:{feature:["assignments","effort","userStories","impediments"],testcase:["lastStatus","lastRunDate"],userstory:["assignments","effort","impediments","bugs","tasks"],bug:["assignments","effort","impediments","severity"],user:["currentAllocation","teamMembers-count","impediments"],request:["assignments","userStories","bugs","tasks","features","requesters","createDate","lastComment"],task:["assignments","effort","impediments"],impediment:["responsible","createDate","priority"]}}},init:function(config){this._super(config),this.config=config,this.reguestsCount=0,this.registerItems={}},lifeCycleCleanUp:function(){this.registerItems=null,this.reguestsCount=0},"bus configurator.ready":function(evt,configurator){this.urlBuilder=configurator.getUrlBuilder()},"bus model.data.loader.registerItems":function(evt){var registerItems=[];this.registerItems=this.registerItems||{};var items=evt.data.items;for(var i=0;i<items.length;i++){var dataItem=items[i],item=this.registerItems[dataItem.id]=this.registerItems[dataItem.id]||{};_.extend(item,dataItem),registerItems.push(item)}this.fire("model.data.loader.itemsUpdated",{items:item})},"bus start.lifecycle:last+model.data.loader.itemsUpdated":function(evt){var store=evt["start.lifecycle"].data.context.configurator.storeFactory.getStore(),self=this,zoomLevel=7;self.getDataForZoomLevel(zoomLevel,store)},"bus model.requestBegin:last+model.dataUpdated":function(evt){var updatedItemIds=evt["model.requestBegin"].data.updatedItemIds,updatedItems=evt["model.dataUpdated"].data.items;_.each(updatedItems,function(item){updatedItemIds[item.id]=!0})},"bus model.requestBegin+model.requestCompleted":function(evt){var updatedItemIds=evt["model.requestBegin"].data.updatedItemIds,items=[],registeredItems=this.registerItems;_.each(updatedItemIds,function(id,key){items.push(registeredItems[key])}),this.fire("model.updateItems.complete",items)},handleOperations:function(storeOperations,store,success){var self=this;if(storeOperations.length==0){self.beforeRequest(),self.requestComplete();return}var step=100,index=0,to=Math.min(index+step,storeOperations.length),iterator=function(){var chain=store,operationByTypes={};for(;index<to;index++){var storeOperation=storeOperations[index],type=storeOperation.type,operation=operationByTypes[type]=operationByTypes[type]||{$in:[],fields:[],type:type};operation.$in.push(storeOperation.id),operation.fields=_.union(operation.fields,storeOperation.fields)}_.each(operationByTypes,function(op){self.beforeRequest();var type=op.type;chain=chain.turboGet(type,{$query:{id:{$in:op.$in}},fields:op.fields},{success:function(){var storeSelf=this,params=_.toArray(arguments);success.apply(storeSelf,params),self.requestComplete()},failed:function(){self.requestComplete()}})}),chain.done(),to!=storeOperations.length&&(to=Math.min(index+step,storeOperations.length),iterator())};iterator()},beforeRequest:function(){this.reguestsCount++,this.reguestsCount==1&&this.fire("model.requestBegin",{updatedItemIds:{}})},requestComplete:function(){--this.reguestsCount==0&&this.fire("model.requestCompleted")},getDataForZoomLevel:function(zoomLevel,store){var storeOperations=this.getStoreOperationsForZoomLevel(zoomLevel,_.map(this.registerItems,function(v){return v}));this.executeStoreOperations(storeOperations,store)},executeStoreOperations:function(storeOperations,store){var success=_.bind(this.dataRetrieved,this);this.handleOperations(storeOperations,store,success)},dataRetrieved:function(evt){var data=evt.data,updatedItems=[],registeredItems=this.registerItems||{};_.each(data,function(item){if(!item.id)return;registeredItems[item.id]=registeredItems[item.id]||{},_.extend(registeredItems[item.id],item),_.extend(registeredItems[item.id],this.extendEntityRef(item,data.__type)),_.extend(registeredItems[item.id],this.extractCountFields(item,data.__type)),_.extend(registeredItems[item.id],this.extractDates(item)),_.extend(registeredItems[item.id],this.splitTags(item)),_.extend(registeredItems[item.id],this.trimUsers(this.uniqUsers(item))),_.extend(registeredItems[item.id],this.extractComments(item,data.__type)),_.defaults(registeredItems[item.id],{type:data.__type});var updatedItem=registeredItems[item.id];updatedItems.push(updatedItem)},this),this.fire("model.dataUpdated",{items:updatedItems})},getCollectionInfo:function(collection){var collectionInfo={totalCount:collection.length,doneCount:_.filter(collection,function(data){var entityState=data.entityState;return entityState.isFinal}).length,plannedCount:_.filter(collection,function(data){var entityState=data.entityState;return entityState.isPlanned||entityState.isInitial}).length,inProgressCount:_.filter(collection,function(data){var entityState=data.entityState;return!entityState.isPlanned&&!entityState.isInitial&&!entityState.isFinal}).length};return collectionInfo.openCount=collectionInfo.totalCount-collectionInfo.doneCount,collectionInfo},addCollectionInfo:function(items,infoFieldName,counters){if(_.isArray(items)){var collectionInfo=this.getCollectionInfo(items);if(collectionInfo.plannedCount||collectionInfo.inProgressCount||collectionInfo.totalCount)counters[infoFieldName]=collectionInfo}},extractDates:function(itemData){var returnObject={},shortDateFieldNames=["createDate","lastRunDate"];return _.each(shortDateFieldNames,function(dateFieldName){itemData[dateFieldName]&&(returnObject[dateFieldName]=dateUtils.format.date.short(dateUtils.convertToTimezone(itemData[dateFieldName])))}),returnObject},lastCommentRequiredForType:function(type){var lastCommentRequired=!1;return _.each(this.dataSchema,function(zoomLevel){var fields=zoomLevel.dataFields[type]||[];_.find(fields,function(field){return field=="lastComment"})&&(lastCommentRequired=!0)}),lastCommentRequired},extractComments:function(itemData,type){var object={};if(_.isArray(itemData.comments)&&_.isEmpty(itemData.comments)==0&&this.lastCommentRequiredForType(type)){var comments=_.sortBy(itemData.comments||[],function(comment){return-dateUtils.parse(comment.createDate).getTime()});comments[0]&&(object.lastComment=comments[0])}return object},extractCollectionInfo:function(itemData){var counters={},counterFieldNames=["userStories","bugs","tasks","features"],countOfAddedCounters=0;return _.each(counterFieldNames,function(counterFieldName){_.isArray(itemData[counterFieldName])&&itemData[counterFieldName].length>0&&(countOfAddedCounters++,counters[counterFieldName+"Count"]=itemData[counterFieldName].length)}),countOfAddedCounters?{relatedEntitiesInfo:counters}:{}},extendEntityRef:function(itemData,type){var ref={};return type.toLowerCase()=="user"?ref={userRef:AppPath.get()+"/User/View.aspx?UserID="+itemData.id,avatarRef:AppPath.get()+"/avatar.ashx?size=40&UserId="+itemData.id}:ref={entityRef:this.urlBuilder.getNewViewUrl(itemData.id,type,!0)},ref},extractCountFields:function(itemData,type){var counters={};if(type&&type.toLowerCase()=="request")return this.extractCollectionInfo(itemData);if(_.isArray(itemData.assignables)){var getItemsByType=function(collection,type){return _.filter(collection,function(data){return data.entityType.name==type})},data={userStories:getItemsByType(itemData.assignables,"UserStory"),bugs:getItemsByType(itemData.assignables,"Bug"),tasks:getItemsByType(itemData.assignables,"Task"),features:getItemsByType(itemData.assignables,"Feature")};_.extend(counters,this.extractCollectionInfo(data))}return _.isArray(itemData.impediments)&&(counters.openImpedimentsCount=_.filter(itemData.impediments,function(impediment){return!impediment.entityState.isFinal}).length),this.addCollectionInfo(itemData.tasks,"tasksInfo",counters),this.addCollectionInfo(itemData.bugs,"bugsInfo",counters),this.addCollectionInfo(itemData.userStories,"userStoriesInfo",counters),counters},splitTags:function(itemData){return _.isString(itemData.tags)&&itemData.tags.length>0?{tags:itemData.tags.split(",")}:{}},uniqUsers:function(itemData){return _.isArray(itemData.assignments)?{assignments:_.uniq(itemData.assignments,!1,function(assignment){return assignment.generalUser.id})}:{}},trimUsers:function(itemData){return _.isArray(itemData.assignments)?{assignments:_.filter(itemData.assignments,function(assignment,i){return i<4})}:{}},getStoreOperationsForZoomLevel:function(zoomLevel,registerItems){var startDate=new Date,storeOperations=[],ids=[];for(var i=0;i<registerItems.length;i++){var data=registerItems[i],fields=_.map(data,function(a,key){return key}),operation,dataSchema=this.dataSchema;for(var curZoomLevel=1;curZoomLevel<=zoomLevel;curZoomLevel++){if(!dataSchema.hasOwnProperty(curZoomLevel))continue;var dataSchemaForZoomLevel=dataSchema[curZoomLevel],typeName=data.type.toLowerCase(),query=dataSchemaForZoomLevel.query[typeName]||[],dataFields=dataSchemaForZoomLevel.dataFields[typeName]||[];if(dataFields.length>0){var intersection=_.intersection(fields,dataFields),allDataPresent=intersection.length===dataFields.length;_.chain().difference(fields,intersection).each(function(fieldName){data[fieldName]=updatingFlag}),allDataPresent||(operation=operation||{type:data.type.toLowerCase(),fields:[],id:data.id},operation.fields=_.union(operation.fields,query))}}operation&&(ids.push(operation.id),storeOperations.push(operation)),operation=null}return storeOperations}})})