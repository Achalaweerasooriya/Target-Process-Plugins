define(["Underscore","tau/core/extension.base"],function(_,ExtensionBase){return ExtensionBase.extend({"bus beforeInit":function(evt,initConfig){var entity=initConfig.config.context.entity,configurator=initConfig.config.context.configurator;this.fire("entity.ready",entity),this.fire("configurator.ready",configurator)},"bus configurator.ready + entity.ready + beforeInit":function(evt,configurator,entity){var store=configurator.getStore(),fields=["id","tags"];_.has(store.config.proxy.types[entity.entityType.name].refs,"project")&&fields.push({project:["id"]}),store.get(entity.entityType.name,{id:entity.id,fields:fields}).done(_.bind(function(res){this.fire("entityTags.ready",res[0].data.tags),this.fire("entityProject.ready",res[0].data.project)},this)),store.unbind(this),store.on({eventName:"afterSave",type:entity.entityType.name,listener:this,filter:{id:entity.id}},_.bind(function(e){e.data.cmd.config.$set&&_.has(e.data.cmd.config.$set,"tags")&&this.fire("refresh")},this)),store.on({eventName:"afterSave",type:entity.entityType.name,listener:this,filter:{id:entity.id},hasChanges:["project"]},_.bind(function(e){this.fire("refresh")},this))},"bus configurator.ready + entityProject.ready + beforeInit":function(evt,configurator,project){var projectId=project&&project.id?project.id:0;$.ajax({url:configurator.getApplicationPath()+"/PageServices/WebMethods.asmx/GetAllTags",type:"post",data:JSON.stringify({projectID:projectId}),contentType:"application/json; charset=utf-8"}).done(_.bind(function(res){var items=_.map(res.d,function(v,k){return{name:k,size:v}});items=this._process(items),this.fire("cloudData.ready",items)},this))},"bus cloudData.ready + entityTags.ready":function(evt,cloudTags,entityTags){entityTags=_.asString(entityTags).split(", "),_.forEach(cloudTags,function(tag){!(_.indexOf(entityTags,tag.name)>=0)}),this.fire("dataBind",{showSearch:cloudTags.length>20,tags:cloudTags})},"bus configurator.ready > destroy":function(evt,configurator){var store=configurator.getStore();store.unbind(this)},_process:function(items){var maxSize=_.max(_.pluck(items,"size"))||1,minSize=_.min(_.pluck(items,"size"))||0,avg=7/maxSize;return items=_.map(items,function(v){return v.size=Math.round(avg*v.size),v}),items=_.sortBy(items,function(v){return 20-v.size+"_"+v.name.toLowerCase()}),items=_.map(items,function(v,k){return k>=100&&(v.hidden=!0),v}),items}})})