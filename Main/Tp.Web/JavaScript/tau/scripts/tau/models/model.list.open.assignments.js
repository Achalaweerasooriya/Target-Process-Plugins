define(["Underscore","tau/core/model-base"],function(_,ModelBase){var entityListModel,itemsAssignmentsCount=0;return entityListModel=ModelBase.extend({name:"model.list.open.assignments",createSubscription:function(type,fnDetect){var self=this,loggedUser=this.config.context.applicationContext.loggedUser,userCardId=this.config.context.entity.id;self.store.on({eventName:"afterSave",type:type,listener:self},function(evt){var entityId=evt.data.id;evt.data&&evt.data.cmd&&evt.data.cmd.type=="assignment"&&fnDetect(entityId)&&self.store.get(type,{id:entityId,fields:[{assignments:[{generalUser:["id"]}]}]}).done(function(result){var assignments=result[0].data.assignments,userAssignment=_.find(assignments,function(assigment){return assigment.generalUser.id===userCardId});if(assignments.length===0||userAssignment===undefined)itemsAssignmentsCount--,itemsAssignmentsCount===0&&self.fire("refresh"),self.fire("model.assignment.did.removed",{id:entityId})})}),self.store.on({eventName:"beforeSave",type:type,listener:self},function(evt){var removedEntityId=evt.data.id;if(fnDetect(removedEntityId)&&evt.data.changes.entityState){var cmd=evt.data.cmd,include=cmd.config.$include=cmd.config.$include||[];include.push({entityState:["id","isFinal"]})}}),self.store.on({eventName:"afterSave",type:type,listener:self},function(evt){var entityId=evt.data.id;if(fnDetect(entityId)){var entityState=evt.data.changes.entityState;if(entityState)self.store.get("entityState",{id:entityState.id,fields:["isFinal"]}).done(function(r){var stateData=r[0].data;stateData.isFinal&&(itemsAssignmentsCount--,itemsAssignmentsCount===0&&self.fire("refresh"),self.fire("model.assignment.did.removed",{id:entityId}))});else{var responsible=evt.data.changes.responsible;responsible&&(itemsAssignmentsCount--,itemsAssignmentsCount===0&&self.fire("refresh"),self.fire("model.assignment.did.removed",{id:entityId}))}}})},"bus afterItemsProvided":function(e){var self=this,items=e.data.data;itemsAssignmentsCount=items.length;if(items&&items.length){var isItemDetected=function(entityId){return _(items).detect(function(item){return item.id==entityId})};_(items).chain().map(function(item){return item.__type}).unique().each(function(type){self.createSubscription(type,isItemDetected)})}}}),entityListModel})