define(["Underscore","tau/core/model-base","tau/utils/utils.jsonSchema","tau/utils/utils.date"],function(_,ModelBase,jsonSchema,dateUtils){var model=ModelBase.extend({category:"edit",name:"Model date validation","bus afterInit":function(){this.schema=jsonSchema.Schema.create({type:"string",optional:!0,empty:!0,pre:["trim"],post:function(val){if(this.wasError()==0){var date=dateUtils.parse(val),max=dateUtils.parse(this.schema.additionalProperties.max),min=dateUtils.parse(this.schema.additionalProperties.min);date==null?new this.Error("Date","Incorrect date format"):date<new Date("01/01/1900")?new this.Error("Date","Date must be greater then 1-Jan-1900"):max&&date>max?new this.Error("Date","Start Date should be earlier than End Date"):min&&date<min?new this.Error("Date","End Date should be later than Start Date"):val=dateUtils.format.date.short(date)}return val},additionalProperties:{dateFormat:dateUtils.getFormatData().date.short,max:null,min:null}});var store=this.config.store,entity=this.config.context.entity,self=this,_success=function(result){var data=result[0].data;this.config.propertyName=="startDate"&&(this.schema.additionalProperties.max=dateUtils.parse(data.endDate)),this.config.propertyName=="endDate"&&(this.schema.additionalProperties.min=dateUtils.parse(data.startDate))};store.get("project",{id:entity.id,fields:["startDate","endDate"]}).done({success:_.bind(_success,this)}),this.config.propertyName=="startDate"?store.on({eventName:"afterSave",type:"project",listener:this,filter:{id:entity.id},hasChanges:["endDate"]},function(res){var value=dateUtils.parse(res.data.changes.endDate);self.schema.additionalProperties.max=value}):this.config.propertyName=="endDate"&&store.on({eventName:"afterSave",type:"project",listener:this,filter:{id:entity.id},hasChanges:["startDate"]},function(res){var value=dateUtils.parse(res.data.changes.startDate);self.schema.additionalProperties.min=value})},"bus afterRender":function(evt){this.element=evt.data.element},"bus validateDate":function(evtArgs){var validation=this.schema.validate(evtArgs.data.value||"");evtArgs.data.value=validation.instance},"bus validate":function(evt){var element=this.element.find(".property");element.dateEditor("resetValidationErrors");var args=evt.data,data=args.cmd.$set[this.config.propertyName];if(!args.validation||args.validation.isError()!=1)args.validation=this.schema.validate(data),args.cmd.$set[this.config.propertyName]=args.validation.instance||null},"bus resetValidationErrors":function(){var element=this.element.find(".property");element.dateEditor("resetValidationErrors")},"bus afterValidate":function(evt){var validation=evt.data.validation;this.element.find(".property").dateEditor("setValue",validation.instance)},"bus validationFailed":function(evt){var element=this.element.find(".property");element.dateEditor("setValidationErrors",evt.data.validation.errors[0].description)}});return model})