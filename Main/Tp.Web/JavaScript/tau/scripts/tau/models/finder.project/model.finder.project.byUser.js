define(["Underscore","tau/core/extension.base","tau/configurations/factory.container.config"],function(_,ModelBase,configFactory){return ModelBase.extend({resetLifecycle:!0,"bus beforeInit":function(evt,initConfig){var configurator=initConfig.config.context.configurator;this.fire("configurator.ready",configurator),initConfig.config.context.entity.type=initConfig.config.context.entity.entityType.name.toLowerCase(),this.fire("entity.ready",initConfig.config.context.entity)},"bus configurator.ready + entity.ready":function(e,configurator,entity){var store=configurator.getStore(),fireRefresh=_.bind(function(res){res.data.cmd.name=="removeFromList"&&this.fire("refresh")},this);store.unbind(this),store.on({eventName:"afterSave",type:"project",listener:this},fireRefresh)},"bus configurator.ready:last + projectMembers.ready:last + activeTab.ready:last + beforeInit":function(e,configurator,projectMembers,activeTab){var self=this,store=configurator.getStore(),f=[];f.push(_.bind(this._getList,this,store,"project",["id","name","color"],_.pluck(_.compact(_.pluck(projectMembers,"project")),"id"))),_.parallel(f,function(err,res){var projects=res[0];self.fire("dataBind",{activeTab:activeTab,teams:[],showProjects:!1,canAddProjects:!1,projects:projects,canAddprojects:!0,submitLabel:"Assign",showEmpty:!0,showSearch:projects.length>20,icons:configFactory.getConfigByType("project").prototype.icons})})},_getList:function(store,name,fields,excludeIds,next){store.get(name,{fields:fields}).done({success:function(result){var items=result[0].data;items=_.filter(items,function(v){return _.indexOf(excludeIds,v.id)==-1}),items=_.sortBy(items,function(v){return v.name.toUpperCase()}),next(!1,items)}})},"bus configurator.ready:last + entity.ready":function(evt,configurator,entity){var self=this;configurator.getStore().get(entity.type,{id:entity.id,fields:[{projectMembers:[{project:["id","name"]}]}]}).done({success:function(res){self.fire("projectMembers.ready",res[0].data.projectMembers)}})},"bus configurator.ready:last + entity.ready:last + form.submitted":function(evt,configurator,user,data){var self=this,store=configurator.getStore(),saves=[];_.forEach(data.projectIds,function(id){saves.push({id:id,type:"project",fields:["id","projectMembers"],data:{projectMembers:[{user:{id:user.id}}]}})});var f=[];_.forEach(saves,function(save){f.push(function(next){store.save(save.type,{id:save.id,fields:save.fields,$set:save.data}).done({success:function(r){next(!1,r[0].data)}})})}),_.parallel(f,function(err,res){res.length&&configurator.getGlobalBus().fire("projectsAndUsers.connected",res),self.fire("refresh")})},"bus configurator.ready:last + destroy":function(e,configurator){var store=configurator.getStore();store.unbind(this)}})})