define(["Underscore","tau/core/model-base","tau/models/board.editor/board.filter.help"],function(_,BaseModel,Help){var Model=BaseModel.extend({"bus beforeInit":function(evt){var configurator=evt.data.config.context.configurator,self=this;self.fire("configurator.ready",configurator)},"bus afterInit + boardSettings.ready:last":function(evt){var self=this,settings=_.values(evt)[0].data,boardSettings=_.values(evt)[1].data.boardSettings,loggedUser=self.config.context.configurator.getLoggedUser(),processCallback=function(data,examples){var cells=data.cells||{types:[]};cells.name="cells",data.user&&data.user.cardFilter?cells.filter=data.user.cardFilter:cells.filter="",cells.predefinedFilters=examples,self.fire("cell.types",cells.types);var isOwner=!data.ownerId||data.ownerId==loggedUser.id;self.fire("dataBind",{name:data.name,isShared:data.isShared,viewMode:data.viewMode,cells:cells,zoom:{value:data.zoomLevel,min:settings.config.min,max:settings.config.max},isAdmin:loggedUser.isAdministrator,isOwner:isOwner})};boardSettings.get({fields:["ownerId","user","id","name","isShared","viewMode","zoomLevel","cells"],callback:function(data){(new Help).get({cells:data.cells}).done(function(r){processCallback(data,r.cells||[])})}}),boardSettings.unbind({listener:self}),boardSettings.bind({fields:["cells"],listener:self,callback:function(data){self.fire("cell.types",data.cells.types)}})},"bus user.filter.changed + boardSettings.ready:last":function(evt,filter,data){data.boardSettings.set({set:{user:{cardFilter:filter}}})},"bus boardSettings.ready:last + destroy":function(evt,data){data.boardSettings.unbind({listener:this})}});return Model})