define(["Underscore","tau/core/model-base"],function(_,BaseModel){var ZoomLevelModel=BaseModel.extend({"bus boardSettings.ready":function(evt){var self=this,boardSettings=evt.data.boardSettings;boardSettings.unbind({listener:this}),boardSettings.bind({fields:["zoomLevel"],listener:self,callback:_.bind(self.onZoomLevelUpdated,self)}),boardSettings.get({fields:["zoomLevel"],callback:_.bind(self.onDataReady,self)})},onDataReady:function(result){var value=this.normalize(result.zoomLevel,this.config);this.isValid(value,this.config)&&this.fire("zoom.provided",{value:value})},onZoomLevelUpdated:function(r){var value=this.normalize(r.zoomLevel,this.config);this.isValid(value,this.config)&&this.fire("zoom.provided",{value:value})},"bus boardSettings.ready:last + zoom.updated":function(evt){var boardSettings=_.values(evt)[0].data.boardSettings,zoom=_.values(evt)[1].data,value=this.normalize(zoom.value,this.config);this.isValid(value,this.config)&&boardSettings.get({fields:["zoomLevel"],callback:function(r){r.zoomLevel!=value&&boardSettings.set({set:{zoomLevel:value}})}})},"bus boardSettings.ready + destroy":function(evt){var self=this;self.onDataReady=function(){};var boardSettings=evt["boardSettings.ready"].data.boardSettings;boardSettings.unbind({listener:this})},isValid:function(value,config){return config.hasOwnProperty("min")&&value<config.min?!1:config.hasOwnProperty("max")&&value>config.max?!1:value!=undefined},normalize:function(value,config){if(config.hasOwnProperty("min")&&config.hasOwnProperty("max")){if(value==undefined)return config.defaultValue;if(value<config.min)return this.config.min;if(value>config.max)return config.max}return value}});return ZoomLevelModel})