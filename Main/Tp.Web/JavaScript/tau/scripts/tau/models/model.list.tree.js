define(["Underscore","tau/core/model-base","tau/models/dataProviders/model.provider.groups.default"],function(_,ModelBase,GroupsProvider){var entityListModel=ModelBase.extend({onInit:function(){var self=this;this.config.groupsDataProvider&&(GroupsProvider=this.config.groupsDataProvider);var groupFieldName=_.isArray(this.config.groupBy)?this.config.groupBy[0]:this.config.groupBy,provider=new GroupsProvider(this.config);provider.fetch(groupFieldName,[],function(groups){self.fire("afterGroupsProvided",{data:groups})})},"bus afterGroupsProvided":function(e){var groups=e.data.data,self=this,itemsProvider=new this.config.itemsDataProvider(this.config),fetchers=[];_.forEach(groups,function(group){var f=function(next){itemsProvider.fetchForGroup(group,function(items){group.items=items,next()})};fetchers.push(f)}),_.parallel(fetchers,function(){self.fire("afterDataProvided",{data:{items:[],groups:groups}})})},"bus afterDataProvided":function(e){var result=this.preProcess(e.data.data);this.fire("preDataBind",result),this.fire("dataBind",result)},preProcess:function(data){var currentView=this.config.views[0];return _.forEach(data.groups,function(group){group.title||(_.isObject(group.key)?group.title=_.complexKey(group.key,currentView.group.dataIndex):group.title=group.key)}),data.config={views:this.config.views,currentView:currentView},data},innerGroupBy:function(items,groups){var groupFieldName=_.isArray(this.config.groupBy)?this.config.groupBy[0]:this.config.groupBy,self=this;return _.forEach(groups,function(group){_.forEach(items,function(item){var value=_.complexKey(item,groupFieldName);_.isArray(group.key)&&_.indexOf(group.key,value)>-1?group.items.push(item):_.isEqual(group.key,value)&&group.items.push(item)})}),groups}});return entityListModel})