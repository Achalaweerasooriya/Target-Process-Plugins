define(["Underscore","tau/core/model-base","tau/models/dataprocessor/model.processor.implementationHistory","tau/configurator","tau/store/types"],function(_,a,b,c,d){return a.extend({onInit:function(){var a=this.config.context,b="implementationHistory";this.store.evictProperties(this.config.context.entity.id,"implementationHistory",["statistics"]),this.store.get(b,{id:a.entity.id,fields:["id","statistics"]}).get("process",{id:a.getProcessId(),nested:!0,fields:[{entityStates:["id","name","isInitial","isFinal","numericPriority",{entityType:["id","name"]},{role:["id"]}]}]}).get("user",{fields:["id","firstName","lastName"]}).get("roles",{fields:["id","name"]}).done({scope:this,success:this.onDone}),this.store.unbind(this),this._bindToStoreChanges()},_bindToStoreChanges:function(){this._bindToStoreAfterSafe(),this._bindToStoreAfterRemove()},_bindToStoreAfterSafe:function(){this.store.on({eventName:"afterSave",type:this.config.context.entity.entityType.name,listener:this,filter:{id:this.config.context.entity.id},hasChanges:["entityState"]},this._getOnStoreChangesProxy()),_.each(this._getStoreObservableEntityTypes(),function(a){this.store.on({eventName:"afterSave",type:a,listener:this},this._getOnStoreChangesProxy())},this)},_bindToStoreAfterRemove:function(){_.each(this._getStoreObservableEntityTypes(),function(a){this.store.on({eventName:"afterRemove",type:a,listener:this},this._getOnStoreChangesProxy())},this)},_getStoreObservableEntityTypes:function(){if(!this._storeObservableEntityTypes){var a=["assignment","impediment"];switch(this.config.context.entity.entityType.name){case"userstory":a.push("task","bug");break;case"feature":a.push("userstory");break;case"request":a.push("feature","userstory","task","bug")}this._storeObservableEntityTypes=a}return this._storeObservableEntityTypes},_onStoreChanges:function(a){this.store.evictProperties(this.config.context.entity.id,"implementationHistory",["statistics"]),this.fire("afterUpdate")},_getOnStoreChangesProxy:function(){return this._onStoreChangesProxy||(this._onStoreChangesProxy=_.bind(this._onStoreChanges,this)),this._onStoreChangesProxy},onDone:function(a){var c=b.transform({response:a,entityTypeName:this.config.context.entity.entityType.name,terms:this.config.context.getTerms()});this.fire("dataBind",c)}})})