define(["Underscore","tau/core/extension.base"],function(_,BaseModel){return BaseModel.extend({"bus beforeInit":function(evt){var configurator=evt.data.config.context.configurator;this.fire("configurator.ready",configurator),configurator.service("boardSettings").get({fields:["ownerId","prioritization","cells"],callback:_.bind(function(result){var isOwner=configurator.getLoggedUser().id==result.ownerId,ordering=_.defaults(result.cells.ordering||{},{name:"rank"}),isPrioritizable=!ordering.name||ordering.name.toLowerCase()=="rank",types=["project","team","user"];isPrioritizable=isPrioritizable&&_.intersection(types,result.cells.types||[]).length==0,this.fire("dataBind",_.defaults(result||{},{prioritization:{mode:"enabled"},access:{edit:(configurator.getLoggedUser().isAdministrator||isOwner)&&isPrioritizable}}))},this)}),configurator.service("boardSettings").unbind({listener:this}),configurator.service("boardSettings").bind({fields:["cells"],listener:this,callback:_.bind(function(result){this.fire("refresh")},this)})},"bus configurator.ready + afterRender":function(evt,configurator,renderData){var $el=renderData.element,boardSettings=configurator.service("boardSettings");$el.on("change",":radio",function(){var formData={};_.forEach($el.find("form").serializeArray(),function(v,k){formData[v.name]=v.value}),boardSettings.set({set:{prioritization:formData}})})}})})