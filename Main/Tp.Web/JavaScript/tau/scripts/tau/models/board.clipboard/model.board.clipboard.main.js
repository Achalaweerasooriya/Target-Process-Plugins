define(["Underscore","tau/core/extension.base"],function(_,ExtensionBase){var Model=ExtensionBase.extend({"bus initialize":function(ev,cf){var self=this,initConfig=cf,options=this._extractOptions(initConfig,{refreshTimeout:null,settingsFieldName:"board_clipboard_collapse_state"}),context=initConfig.context,configurator=context.configurator;self.fire("options.ready",options),self.fire("configurator.ready",configurator)},"bus boardSettings.ready":function(ev,bs){var boardSettings=bs.boardSettings,self=this;boardSettings.get({fields:["viewMode"],callback:function(r){self.fire("viewMode.ready",r.viewMode),self.fire("viewMode.ready.fromInit",r.viewMode)}}),boardSettings.unbind({listener:this}),boardSettings.bind({listener:this,fields:["viewMode"],callback:function(r){self.fire("viewMode.ready",r.viewMode),self.fire("viewMode.ready.fromBind",r.viewMode)}})},"bus afterRender":function(ev,renderData){this.fire("$el.ready",renderData.element),this.fire("$holder.ready",renderData.element.find("[role=holder]"))},"bus options.ready+configurator.ready":function(evt,options,configurator){var settingsManager=configurator.getSettingsManager(),fieldName=options.settingsFieldName;settingsManager.get({fields:[fieldName],callback:_.bind(function(r){this.fire("collapseState.updated",r[fieldName])},this)}),settingsManager.unbind({listener:this}),settingsManager.bind({fields:[fieldName],listener:this,callback:_.bind(function(r){this.fire("collapseState.updated",r[fieldName])},this)})},"bus options.ready:last+configurator.ready:last+collapseState.set":function(evt,options,configurator,toExpand){var settingsManager=configurator.getSettingsManager(),fieldName=options.settingsFieldName,set={};set[fieldName]=toExpand?"expanded":"collapsed",settingsManager.set({set:set,callback:function(){}})}});return Model})