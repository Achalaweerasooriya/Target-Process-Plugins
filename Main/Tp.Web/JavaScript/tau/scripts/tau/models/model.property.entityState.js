define(["tau/core/model-base","Underscore"],function(ModelBase,_){var initialDataProcessor=function(model){this.model=model};initialDataProcessor.prototype={done:function(r){var data=r[0].data.entityState;this.model.fire("dataBind",data)}};var entityStateModel=ModelBase.extend({onInit:function(){var self=this,proc=new initialDataProcessor(this),ctx=this.config.context,entityTypeName=ctx.entity.entityType.name,entityId=ctx.entity.id,fields=[{entityState:["id","name","isFinal","isCommentRequired",{nextStates:["id"]}]}],beforeSaveCallback=function(evt){var changes=evt.data.changes,requiredUpdates=evt.data.cmd.config.fields;evt.data.cmd.config.fields=_.union(requiredUpdates,fields),self.fire("beforeChanges",changes),self.fire("beforeChangeProperty")},afterSaveCallback=function(evt){self.fire("applyChanges",evt.data.changes),self.fire("propertyChanged")};self.store.unbind(self),self.store.on({eventName:"beforeSave",type:entityTypeName,hasChanges:["entityState"],listener:this},beforeSaveCallback),self.store.on({eventName:"afterSave",type:entityTypeName,hasChanges:["entityState"],listener:this},afterSaveCallback),this.store.get(entityTypeName,{id:entityId,fields:fields},{success:proc.setEntity,scope:proc}).done({success:proc.done,scope:proc})}});return entityStateModel})