define(["jQuery","Underscore","tau/core/model-base","tau/utils/utils.date"],function(t,e,i,n){return i.extend({init:function(){this.name="Finish Iteration",this._super.apply(this,arguments)},onInit:function(){var t=this.config.context.entity,i={iteration:"project",teamiteration:"team"},n=i[t.type];if(!n)throw"It's only possible to use only iterations and team iterations here. Actual "+t.type;var s={};s[n]=["id"],this.store.get(t.type,{id:t.id,fields:["id","name","startDate","endDate",s]},{scope:this,success:e.bind(this.onIterationRetrieved,this,n)}).done()},"bus beforeInit:last + finishIteration":function(t,i,n){var s=i.config.context.configurator,a=s.getActionsService();this.fire("beforeFinishIteration");var o={iteration:"finishIteration",teamIteration:"finishTeamIteration"},r=o[n.type];if(!r)throw"It's only possible to use only iterations and team iterations here. Actual "+n.type;a[r](n.from,n.to,n.useMoveInsteadSplit,e.bind(this._finishIsSuccessful,this),e.bind(this._finishIsFailed,this))},_finishIsSuccessful:function(){this.fire("iterationIsFinished",{successful:!0})},_finishIsFailed:function(e){var i=t.parseJSON(e.responseText).Message;this.fire("iterationIsFinished",{successful:!1,reason:i})},_convertIterationDates:function(t){return t.startDate=n.convertToTimezone(t.startDate),t.endDate=n.convertToTimezone(t.endDate),t},onIterationsRetrieved:function(t,i){var n=e(i.data).chain().map(this._convertIterationDates).sortBy(function(t){return+t.startDate}).value();this.fire("dataBind",{iteration:this._convertIterationDates(t),iterations:n})},onIterationRetrieved:function(t,i){var n=i.data,s={};s[t+".id"]={$eq:n[t].id},s.id={$ne:n.id},this.store.find(n.__type,{fields:["id","name","startDate","endDate"],$query:s,$orderBy:"startDate"},{scope:this,success:e.bind(this.onIterationsRetrieved,this,n)}).done()}})});