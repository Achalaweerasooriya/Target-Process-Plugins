define(["Underscore","tau/core/extension.base","tau/models/dataprocessor/model.processor.context"],function(_,ModelBase,contextWrapper){return ModelBase.extend({name:"Entity","bus initialize":function(evt,config){config&&config.context.configurator.getStore().evictData()},"bus beforeInit":function(evt,initData){var entityData=_.isObject(initData.config.entity)?initData.config.entity:{id:initData.config.id,type:initData.config.entity},configurator=initData.config.context.configurator,self=this,funcs=[];funcs.push(function(next){var globSettingsService=configurator.getGlobalSettingsService();globSettingsService.getGlobalSettings({success:function(result){next(!1,result)}})}),funcs.push(function(next){var appContextService=configurator.getApplicationContextService();appContextService.getApplicationContext({id:entityData.type!="user"?entityData.id:""},{success:function(result){next(!1,result)}})}),funcs.push(function(next){var entity={id:entityData.id,entityType:{name:entityData.type}};next(!1,entity)}),funcs.push(function(next){var componentSettings=configurator.getBoardSettingsFactory().createComponentSettings({id:entityData.type});next(!1,componentSettings)}),funcs.push(function(next){var hasTeams=configurator.getConfig("hasTeams");_.isUndefined(hasTeams)?configurator.getStore().get("team",{fields:["id"]}).done(function(res){var hasTeams=res[0].data.length>0;configurator.setConfig("hasTeams",hasTeams),next(!1,{hasTeams:hasTeams})}):next(!1,{hasTeams:hasTeams})}),_.parallel(funcs,function(err,result){self.prepareContext({globalSettings:result[0],applicationContext:result[1],entity:result[2],componentSettings:result[3],applicationContextAdditions:result[4],configurator:configurator})})},prepareContext:function(data){var context={};data.applicationContext.globalSettings=data.globalSettings,_.extend(context,{entity:data.entity,applicationContext:data.applicationContext,componentSettings:data.componentSettings,configurator:data.configurator}),this.fire("entity.ready",context.entity),this.fire("configurator.ready",context.configurator);var contextWrapped=contextWrapper(context);data.applicationContextAdditions.hasTeams&&(contextWrapped.applicationContext.edition=["hasTeams"].concat(contextWrapped.applicationContext.edition)),this.fire("contextRetrieved",{context:contextWrapped})}})})