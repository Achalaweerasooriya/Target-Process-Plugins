define(["tau/core/model-base","tau/utils/utils.date"],function(ModelBase,dateUtils){function initialDataProcessor(model,filterCallback){this.model=model,this.filterCallback=filterCallback||defaultFilter}var defaultFilter=function(){return!0};initialDataProcessor.prototype={getAssignableRetrievedCallback:function(){return{scope:this,success:this.onAssignableRetrieved}},onAssignableRetrieved:function(result){this.assignable=result.data;var initialData={items:this.getAttachments()},selected=this.getSelected();selected&&(initialData.selected=selected),this.model.data=initialData,this.model.bus.fire("dataBind",initialData)},each:function(callback){var attachmentsData=this.assignable.attachments,attachmentsCount=attachmentsData.length;for(var i=0;i<attachmentsCount;i++){var attachment=attachmentsData[i];this.filterCallback(attachment)&&callback(attachment)}},getAttachments:function(){var self=this,attachments=[];if(!self.model.config)return;var selected=self.model.config.selected,callback=function(attachment){var attachmentModelData=self.attachmentDTOToModelAttachment(attachment);attachments.push(attachmentModelData),selected&&attachment.id==selected.id&&(self.selected=attachmentModelData,attachmentModelData.selected=!0)};return this.each(callback),attachments},attachmentDTOToModelAttachment:function(attachmentDTO){var date=dateUtils.parse(dateUtils.convertToTimezone(attachmentDTO.date));return{id:attachmentDTO.id,name:attachmentDTO.name,mimeType:attachmentDTO.mimeType,ownerName:[attachmentDTO.owner.firstName," ",attachmentDTO.owner.lastName].join(""),date:dateUtils.format.date.short(date),thumbnailUri:attachmentDTO.thumbnailUri,uri:attachmentDTO.uri}},getSelected:function(){return this.selected}};var modelAttachments=ModelBase.extend({init:function(store,context,filter){this.name="Attachment Model",this._super.apply(this,arguments),this.filter=this.config.filter||filter},_getFields:function(){var fields=[{attachments:["id","date","name","mimeType","uri","thumbnailUri",{owner:["id","firstName","lastName"]}]}];return fields},onInit:function(){var entity=this.config.context.entity,dataProcessor=new initialDataProcessor(this,this.filter),fields=this._getFields();this.store.get(entity.entityType.name,{id:entity.id,fields:fields},dataProcessor.getAssignableRetrievedCallback()).done()},setSelected:function(attachment){if(this.config.selected.id!=attachment.id){var attachments=this.data.items,foundedAttachment=null;for(var i=0;i<attachments.length;i++)if(attachments[i].id==attachment.id){foundedAttachment=attachments[i];break}foundedAttachment&&(this.config.selected=foundedAttachment,this.fire("selectedChanged",{attachment:attachment}))}},next:function(){var attachments=this.data.items,foundedAttachment=null,attachment=this.config.selected;for(var i=0;i<attachments.length;i++)if(attachments[i].id==attachment.id){foundedAttachment=attachments[i];break}foundedAttachment&&(i==attachments.length-1&&(i=-1),this.setSelected(attachments[i+1]))},prev:function(){var attachments=this.data.items,foundedAttachment=null,attachment=this.config.selected;for(var i=0;i<attachments.length;i++)if(attachments[i].id==attachment.id){foundedAttachment=attachments[i];break}foundedAttachment&&(i==0&&(i=attachments.length),this.setSelected(attachments[i-1]))},close:function(){this.fire("close")},"bus attachmentUploaded":function(evt){var self=this,fields=[{general:["id"]}].concat(self._getFields()[0].attachments);self.store.save("attachment",{id:evt.data.data.id,$set:{},fields:fields}).done({success:function(){self.bus.fire("attachmentUploadCompleted",{element:evt.data.element})}})}});return modelAttachments})