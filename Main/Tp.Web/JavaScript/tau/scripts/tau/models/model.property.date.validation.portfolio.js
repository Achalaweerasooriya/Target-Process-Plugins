define(["Underscore","tau/core/model-base","tau/utils/utils.jsonSchema","tau/utils/utils.date"],function(t,e,a,i){var n=e.extend({category:"edit",name:"Model date validation","bus afterInit":function(){this.schema=a.Schema.create({type:"string",optional:!0,empty:!0,pre:["trim"],post:function(t){if(this.wasError())return t;var e=function(t,e){return new this.Error(t,e)}.bind(this),a=i.parse(t),n=i.parse(this.schema.additionalProperties.max),r=i.parse(this.schema.additionalProperties.min);return null==a?e("Date","Incorrect date format"):a<new Date(1900,0,1)?e("Date","Date must be greater than 1-Jan-1900"):n&&a>n?e("Date","Start Date should be earlier than End Date"):r&&r>a?e("Date","End Date should be later than Start Date"):t=i.format.date.short(a),t},additionalProperties:{dateFormat:i.getFormatData().date.short,max:null,min:null}});var t=this.config.context.entity;this.store.get(this.config.context.entity.entityType.name,{id:t.id,fields:["startDate","endDate"]}).done({success:this.safeCallback(this._processDateFromStore)}),"startDate"==this.config.propertyName?this.store.on({eventName:"afterSave",type:this.config.context.entity.entityType.name,listener:this,filter:{id:t.id},hasChanges:["endDate"]},function(t){this._setMaxDate(t.data.changes.endDate)}.bind(this)):"endDate"==this.config.propertyName&&this.store.on({eventName:"afterSave",type:this.config.context.entity.entityType.name,listener:this,filter:{id:t.id},hasChanges:["startDate"]},function(t){this._setMinDate(t.data.changes.startDate)}.bind(this))},_processDateFromStore:function(t){var e=t[0].data;"startDate"==this.config.propertyName?this._setMaxDate(e.endDate):"endDate"==this.config.propertyName&&this._setMinDate(e.startDate)},_setMinDate:function(t){this._setDateRestriction("min",t)},_setMaxDate:function(t){this._setDateRestriction("max",t)},_setDateRestriction:function(t,e){this.schema.additionalProperties[t]=i.parse(e)},"bus afterRender":function(t){this.element=t.data.element},"bus validateDate":function(t){var e=this.schema.validate(t.data.value||"");
t.data.value=e.instance},"bus validate":function(t){var e=this.element.find(".property");e.dateEditor("resetValidationErrors");var a=t.data;if(!a.validation||!a.validation.isError()){var i=a.cmd.$set[this.config.propertyName];a.validation=this.schema.validate(i),a.cmd.$set[this.config.propertyName]=a.validation.instance||null}},"bus resetValidationErrors":function(){this._getProperty().dateEditor("resetValidationErrors")},"bus afterValidate":function(t){var e=t.data.validation;this._getProperty().dateEditor("setValue",e.instance)},"bus validationFailed":function(t){var e=t.data.validation;this._getProperty().dateEditor("setValidationErrors",e.errors[0].description)},_getProperty:function(){return this.element.find(".property")}});return n});