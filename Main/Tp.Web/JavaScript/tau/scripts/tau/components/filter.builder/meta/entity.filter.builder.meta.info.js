define(["require","Underscore","jQuery","tau/core/class","./filter.builder.meta.info.utils","./entity.filter.builder.static.meta.source","./entity.filter.transformers","../services/filter.builder.suggestion.service","../services/filter.builder.suggestion.for.collection.service"],function(e){var t=e("Underscore"),r=e("jQuery"),i=e("tau/core/class"),n=e("./filter.builder.meta.info.utils"),s=e("./entity.filter.builder.static.meta.source"),o=e("./entity.filter.transformers"),a=e("../services/filter.builder.suggestion.service"),u=e("../services/filter.builder.suggestion.for.collection.service"),l=t.reduce(s.entities,function(e,t,r){return e[r.toLowerCase()]=t,e},{}),c=function(e,r){function i(e,r){return function(i,n){return t.extend(e(i,n),{transformer:r})}}function c(e){var r=e.name.toLowerCase();if(t.contains(w,r))return null;var i=e.type.toLowerCase(),n=e.isCollection||"tags"===r?F[r]:_[i];return n?(r=A[r]||e.name,n(r,E[r]||t.humanize(r))):null}var p=n.createTextField.bind(n),d=n.createToggleField.bind(n),f=new a(e,r),y=n.createAutocompleteField.bind(n,f),g=new u(e,r),m=i(n.createAutocompleteField.bind(n,g),o.collection),h=y,b=p,v=i(p,o.number),S=y,T=y,w=["entityType","general","parentId","units","priority"],F={assigneduser:m,tags:m},_={"boolean":d,bug:h,build:h,datetime:b,entitytype:S,entitystate:S,epic:h,feature:h,general:h,generaluser:T,number:v,iteration:h,impediment:h,priority:S,process:h,projectmember:h,program:h,project:h,release:h,request:h,requester:T,role:h,severity:S,string:p,tag:h,task:h,team:h,teamiteration:h,user:T,userstory:h},A={},E={EntityState:"State",AssignedUser:"Assigned to",TeamIteration:"Team Sprint"};return{getFieldsForEntityType:function(e){var r=this.isEntityTypeSupported(e);if(!r.isSupported)return console.error(r.message),[];e=r.forwardTo;var i=t.chain(l[e]).map(c).compact().value();return _[e]&&i.push(_[e]("It","It")),i.length||console.warn('Field set for "'+e+'" is empty.'),i},isEntityTypeSupported:function(e){return t.isString(e)?(e=e.toLowerCase(),e=s.typeNameAliases[e]||e,t.has(_,e)?{isSupported:!0,forwardTo:e}:{isSupported:!1,message:'EntityType "'+e+'" is not supported. The following types are supported: '+t.keys(_).join(", ")}):{isSupported:!1,message:"EntityType should be a non-empty string"}
}}},p=i.extend({init:function(e,r){this._fieldSource=c(e,r),this._entityTypes=r,t.isArray(r)?this._fields=t.chain(r).map(this._fieldSource.getFieldsForEntityType,this._fieldSource).flatMap(function(e){return t.uniq(e,t.property("name"))}).groupBy(t.property("name")).where({length:r.length}).map(t.first).sortBy(t.property("label")).value():(console.warn("Meta info constructor should be called with an array of entity types."),this._fields=[])},areAllTypesSupported:function(){return t.all(this._entityTypes,function(e){return this._fieldSource.isEntityTypeSupported(e).isSupported},this)},getDefinitions:function(){return r.Deferred().resolve(t.toArray(this._fields))}});return p.chooseDefaultFields=n.createDefaultFieldStrategy(["name","assigneduser","tags","release","iteration","entitystate","feature","userstory","requester"],1),p});