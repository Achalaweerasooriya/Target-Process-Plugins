define(["require","Underscore","jQuery","tau/core/class","react"],function(e){var t=e("Underscore"),i=e("jQuery"),n=e("tau/core/class"),s=e("react"),r=n.extend({init:function(e,i){e=t.deepClone(e),e.settings=e.settings||{},this.definition=e,this.templateLoadedEvent=t.Callbacks(),this.widgetTemplatePromise=i(e.templateId),this.template=null,this._initTemplate()},_initTemplate:function(){var e="pending"===this.widgetTemplatePromise.state();this.widgetTemplatePromise.done(function(i){this.template=i,t.defaults(this.definition,{name:this.template.name}),t.defaults(this.definition.settings,this.template.defaultSettings),e&&this.templateLoadedEvent.fire()}.bind(this))}}),o=n.extend({init:function(e){this.placeholder=e.placeholder,this._templateTokenPromise=e.templateTokenPromise,this._templateTokenPromise.then(function(e){this._templateToken=e}.bind(this)),this._onCleanUp=e.onCleanUp.bind(e),this._isCleanedUp=!1},_getRenderedTemplateToken:function(){if(this.getInsertFailed())return null;if(this.getIsRendered())return this._templateToken;throw new Error("Widget is not rendered yet, unable to retrieve template descriptor")},tryUpdateInPlace:function(e){var i=this._getRenderedTemplateToken(),n=i&&t.isFunction(i.update);return n?(i.update(e),!0):!1},getIsCleanedUp:function(){return this._isCleanedUp},getIsRendered:function(){return"resolved"===this._templateTokenPromise.state()},getInsertFailed:function(){return"rejected"===this._templateTokenPromise.state()},getIsInserting:function(){return"pending"===this._templateTokenPromise.state()},cleanUp:function(){return this._isCleanedUp?void console.warn("Inserted widget descriptor has already been cleaned up"):(this._isCleanedUp=!0,s.unmountComponentAtNode(this.placeholder),i(this.placeholder).empty().off(),void this._templateTokenPromise.done(this._onCleanUp.bind(this)).fail(this._onCleanUp.bind(this,null)))}}),d=n.extend({init:function(e,i,n,s,o){if(!s)throw new Error("Acid service should be defined");if(!o)throw new Error("Resize broker should be defined");
this._isReadOnly=i,this._state=new r(e,n),this._acidService=s,this._resizeBroker=o,this.instanceId=e.widgetId,this.templateLoaded=this._state.templateLoadedEvent,this.settingsChanged=t.Callbacks(),this.inserting=t.Callbacks(),this.inserted=t.Callbacks()},insertIntoNewContainer:function(){var e=document.createElement("div");return e.style.height="100%",e.style.overflow="hidden",this._insertInto(e).then(t.constant(e))},_insertInto:function(e){if(!e)throw new Error("Placeholder should be defined");if(!this._validateTemplate("Insert widget"))return i.Deferred().reject();this._cleanUpInserted(),this.inserting.fire({placeholder:e});var n=this._createWidgetEnvironment(),s=i.when(this._state.template.insert(e,this._cloneSettings(),n)),r=this;return this._insertedDescriptor=new o({templateTokenPromise:s,placeholder:e,onCleanUp:function(e){e&&(r._acidService.acidChanged.remove(e),t.isFunction(e.destroy)&&e.destroy(),r._resizeBroker.tryRemoveResizeHandler(e))}}),s.then(this._wrapInsertedHandler(this._widgetInserted),this._wrapInsertedHandler(t.constant()))},_wrapInsertedHandler:function(e){var t=this._insertedDescriptor;return function(i){t.getIsCleanedUp()||(e.call(this,i),this.inserted.fire({placeholder:t.placeholder}))}.bind(this)},_widgetInserted:function(e){e&&(t.isFunction(e.updateContext)&&this._acidService.acidChanged.add(function(){e.updateContext(this._createEnvironmentContext())}.bind(this),e),this._resizeBroker.tryAddResizeHandler(e))},remove:function(){this._cleanUpInserted()},_reinsert:function(){this._insertedDescriptor&&this._removeAndInsertInto(this._insertedDescriptor.placeholder)},_removeAndInsertInto:function(e){this.remove(),e?this._insertInto(e):this.insertIntoNewContainer()},applyNewDefinition:function(e){var i=this._state.definition,n=i.templateId,s=e.templateId;if(n!==s)throw new Error('Template IDs should be the same. Old template: "'+n+'". New template: "'+s+'".');var r=i.widgetId,o=e.widgetId;if(r!==o)throw new Error('Widget IDs should be the same. Old widget: "'+r+'". New widget: "'+o+'".');
var d=i.settings,a=e.settings;this._state.definition=e,t.isEqual(d,a)||this._tryRefreshRendered()},_tryRefreshRendered:function(){return this._insertedDescriptor?this._insertedDescriptor.getIsInserting()?void this._removeAndInsertInto():void(this._insertedDescriptor.tryUpdateInPlace(this._cloneSettings())||this._reinsert()):void 0},_cleanUpInserted:function(){this._insertedDescriptor&&(this._insertedDescriptor.cleanUp(),this._insertedDescriptor=null)},insertSettingsIntoNewContainer:function(){if(!this._validateTemplate("Insert widget settings"))return i.Deferred().reject();var e=document.createElement("div"),n=this._createWidgetEnvironment(),s=this._state.template.insertSettings(e,this._cloneSettings(),n),r=s&&t.isFunction(s.promise);return r||t.isFunction(s)?i.when(s).then(function(t){return{container:e,applySettings:function(){this._modifyDefinition(t())}.bind(this)}}.bind(this)):(console.warn(d.MSG_INSERT_SETTINGS_SHOULD_RETURN_FUNCTION),i.Deferred().resolve({container:null,applySettings:i.noop}))},getIsWidgetLoaded:function(){return"resolved"===this._state.widgetTemplatePromise.state()},getHasSettings:function(){return this._state.template&&t.isFunction(this._state.template.insertSettings)},getDefinition:function(){return t.deepClone(this._state.definition)},getSizes:function(){var e=this._state.template;return e?t.extend({},e.layout,this._state.definition.layoutSettings):{}},setLayoutSettingsSilently:function(e){t.defaults(this._state.definition,{layoutSettings:{}}),t.extend(this._state.definition.layoutSettings,{aspectRatio:e.aspectRatio,height:e.height})},getName:function(){return this._state.definition.name},setName:function(e){this._validateIsEditable(),e&&e!==this.getName()&&(this._state.definition.name=e,this.settingsChanged.fire())},_modifyDefinition:function(e,i){this._validateIsEditable();var n=this._state.definition;return n.settings=t.extend({},n.settings,e),t.extend(n,t.pick(i||{},"name")),this.settingsChanged.fire(),this._insertedDescriptor?this._insertedDescriptor.getIsInserting()?void console.warn(d.MSG_UNABLE_TO_APPLY_SETTINGS_TO_NOT_RENDERED_WIDGET):void(this._insertedDescriptor.tryUpdateInPlace(this._cloneSettings())||(console.warn(d.MSG_NO_IN_PLACE_UPDATES,n.templateId),this._reinsert())):void console.warn(d.MSG_SETTINGS_APPLIED_TO_NOT_INSERTED_WIDGET)
},_validateTemplate:function(e){return this._state.template?!0:(console.error('"'+e+'" failed because template is not loaded yet. Template id: '+this._state.definition.templateId),!1)},_validateIsEditable:function(){if(this._isReadOnly)throw new Error("Widget is not editable for the current user and can't be modified")},_cloneSettings:function(){return t.deepClone(this._state.definition.settings)},_createWidgetEnvironment:function(){return{context:this._createEnvironmentContext(),widgetApi:this._createWidgetApi()}},_createWidgetApi:function(){var e=!this._isReadOnly;return{canEditWidget:t.constant(e),internalModifyDefinition:this._modifyDefinition.bind(this)}},_createEnvironmentContext:function(){return{acid:this._acidService.getCurrentAcid().acid}}});return d.MSG_INSERT_SETTINGS_SHOULD_RETURN_FUNCTION='"insertSettings" should return a function which will be called to retrieve the settings chosen by user or a promise which will produce such function.',d.MSG_SETTINGS_APPLIED_TO_NOT_INSERTED_WIDGET="Widget is not inserted, but its settings are applied",d.MSG_UNABLE_TO_APPLY_SETTINGS_TO_NOT_RENDERED_WIDGET="Widget is inserted but is not rendered yet. Applying settings to not rendered widgets is not supported",d.MSG_NO_IN_PLACE_UPDATES='"Template does not support in-place updates, applying settings can be ineffective. It is recommended to return an object with "update" method from template\'s "insert". Template id: ',d});