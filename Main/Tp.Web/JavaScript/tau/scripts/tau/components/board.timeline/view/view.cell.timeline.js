define(["Underscore","jQuery","tau/core/class","tau/components/board.timeline/view/view.cell.base","tau/components/board.timeline/views/card/view.timeline.card","tau/components/board.timeline/views/view.timeline.cell.tracks","tau/components/board.timeline/views/view.timeline.cell.axisDates"],function(t,e,i,a,n,r,d){function s(t){return"cell-view-"+t.dataItem.x+t.dataItem.y}var c=a.extend({init:function(e,i,a,n,s){this.onOpenCardViewRequired=t.Callbacks(),this.onCardMetricsEdit=t.Callbacks(),this.onCardMetricsEdited=t.Callbacks(),this.onTracksCountChanged=t.Callbacks(),e.onYAxisUpdated.add(this._updateAxisPlannerPosition,this),this._cellPlanner=new d,this._tracks=new r(s.timelineWidth),this._tracks.onTracksCountChanged.add(this.onTracksCountChanged.fire.bind(this.onTracksCountChanged)),this._cardMetricsConverter=new o(i),this._super(e,i,a,n,s)},refresh:function(){this._tracks=new r(this._renderConfig.timelineWidth),this._super()},_createTimelineCard:function(t,e){return t.onMetricsUpdating.add(this.onCardMetricsEdit.fire.bind(this.onCardMetricsEdit)),t.onMetricsUpdated.add(this._cellModel.movePlannedDates.bind(this._cellModel)),t.onMetricsUpdating.add(this._tracks.updateCardCascade.bind(this._tracks)),t.onMetricsUpdated.add(function(){this.onCardMetricsEdited.fire(e.$dom())}.bind(this)),new n(t,e,this._cardMetricsConverter)},_createCard:function(t){return this._cards[t.id]=this._createTimelineCard(t,this._super(t)),this._cards[t.id]},_createCardFromDom:function(t,e){return this._cards[t.id]=this._createTimelineCard(t,this._super(t,e)),this._cards[t.id]},_createCellContent:function(){t.each(this._cellModel.getVisibleCardModels(),function(t){var e=this._createCard(t);this._addCardToDom(e,{})},this);var e=this._tracks.$content();this._tracks.setContainer(this._$cell);var i=this._cellModel.getYAxisDataRange();return e.push(this._cellPlanner.render(i.data?i.data.name:null)),this._updateAxisPlannerPosition(i),e},_addCardToDom:function(t,e){this._tracks.addCard(t,e)},_completeUpdateOperation:function(t){return this._tracks.updateCardCascade(),this._super(t)},_clearCards:function(t){this._super(t),this._tracks.updateCardCascade()},moveCardIn:function(t,e){if(!this._cards[t.data("id")]){t.detach();var i=t.data("data-item");i.data={cardData:t.data("card-data")};var a=this._cellModel.moveCardIn(i),n=new l(this._$cell),r=new h(a,n,e.at),d=this._createCardFromDom(a,t);this._addCardToDom(d,e),r.edit({pageX:e.at.x}),t.on("drag."+s(this._cellModel),r.edit.bind(r))}},clearCardArtifacts:function(t){var e=t.data("id");this._getCard(e).clearArtifacts(),delete this._cards[e],this._cellModel.moveCardOut(e),t.off("."+s(this._cellModel))},moveCardOut:function(t){this.clearCardArtifacts(t)},unlockAllTrackCards:function(){this._tracks.unlockAllCards()},_updateAxisPlannerPosition:function(t){this._cellPlanner.setCoords(t.plannedLeft,t.plannedWidth)},createPlaceholderContent:e.noop}),o=i.extend({init:function(t){this._$container=t},toRelative:function(t){return t/this._$container.width()}}),l=i.extend({init:function(t){this._$container=t,this._offset=this._$container.offset(),this._maxOffset={left:t.outerWidth()-3,top:t.outerHeight()}},toRelative:function(t){return Math.min(t-this._offset.left,this._maxOffset.left)/this._$container.width()}}),h=i.extend({init:function(t,e,i){this._cardModel=t,this._cardMetricsConverter=e,this._cardModel.applyEdit(this._cardMetricsConverter.toRelative(i.x),0)},edit:function(t){var e=this._cardMetricsConverter.toRelative(t.pageX);this._cardModel.applyEdit(e,0)}});return c});