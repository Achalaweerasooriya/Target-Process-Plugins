define(["require","Underscore","jQuery","tau/components/extensions/component.extension.base"],function(n){var t=n("Underscore"),e=n("jQuery"),i=n("tau/components/extensions/component.extension.base");return i.extend({category:"edit",destroy:function(){this.destroyDynamicComponents(),this._super()},lifeCycleCleanUp:function(){this.destroyDynamicComponents(),this._super()},destroyDynamicComponents:function(){this.commentNewEditorComponent&&(this.commentNewEditorComponent.destroy(),this.commentNewEditorComponent=null)},"bus initialize":function(n){this.config=n.data},"bus afterRender + permissionsReady + dataBind":function(n,t,e,i){this.element=t.element,this.data=i,this.initializeAddCommentLink()},initializeAddCommentLink:function(){this.$addLink=e('<span class="ui-comments-add-link i-role-actionadd">Add Comment</span>').click(e.proxy(this.addNewComment,this)).insertAfter(this.element.find(".ui-all-comments"))},onCloseEditor:function(){this.$addLink.show()},addNewComment:function(){this.$addLink.hide();var n={components:[{name:"comment.add",type:"comment.add"}],context:this.config.context};this.createComponents(n,t.bind(function(n){var e=this.commentNewEditorComponent=n[0].component;e.on("afterRender",t.bind(function(n,t){t.element.insertAfter(this.$addLink)},this)),e.on("$editor.ready",t.bind(function(n,t){this.fire("comment.add.$editor.ready",t)},this)),e.on("destroy",t.bind(this.onCloseEditor,this)),e.initialize()},this))}})});