define(["require","Underscore","jQuery","tau/components/panel.tab.switching/stores/panel.tab.switching.store"],function(t){var n=t("Underscore"),s=t("jQuery"),e=t("tau/components/panel.tab.switching/stores/panel.tab.switching.store");return e.extend({results:null,bugsCount:null,_entityTypeName:"testPlanRun",_bugsTabName:"bugs",isOnBugsTab:!0,init:function(t,n,s,e,i){this._super(e),this._store=n,this._testPlanRunId=t,this._navigator=navigator,this._runnerModel=s,i.on("entity.changed",this.onEntityChanged.bind(this)),this._retrieveResults(),this._getIsOnBugsTab(),this._watchChanges()},startRun:function(){this._runnerModel.start()},onEntityChanged:function(){this._evictBugsCount(),this._retrieveResults()},_evictBugsCount:function(){this._store.evictProperties(this._testPlanRunId,this._entityTypeName,["bugs"])},_handleAsyncResponse:function(t){t.call(this)},_retrieveResults:function(){this._store.get(this._entityTypeName,{id:this._testPlanRunId,fields:[{entityState:["isFinal"]},"passedCount","failedCount","notRunCount","onHoldCount","blockedCount","startDate",{bugs:[{entityState:["isFinal"]}]}]}).done({success:function(t){var s=n.first(t);this._setData(s.data)}.bind(this)})},_watchChanges:function(){this._store.on({eventName:"afterSave",type:this._entityTypeName,listener:this,filter:{id:this._testPlanRunId},hasChanges:["passedCount|failedCount|onHoldCount|blockedCount|notRunCount|entityState"]},function(){this._retrieveResults()}.bind(this))},_setData:function(t){this.results={passed:t.passedCount,failed:t.failedCount,notrun:t.notRunCount,onhold:t.onHoldCount,blocked:t.blockedCount},this.openBugsCount=n.reduce(t.bugs,function(t,n){return n.entityState.isFinal?t:++t},0),this.totalBugsCount=t.bugs.length,this.isRunnable=!t.entityState.isFinal&&(t.notRunCount|t.onHoldCount|t.blockedCount)>0;var s=0!=(t.passedCount|t.failedCount|t.onHoldCount|t.blockedCount);this.runAction=t.startDate&&s?"Continue":"Run",this.clickHandler=this.onBugClick.bind(this),this._notifyChanged()},onBugClick:function(){this._switchToTab(this._bugsTabName)
},_getIsOnBugsTab:function(){this._isOnTab(this._bugsTabName).done(this._setIsOnBugsTab.bind(this))},_setIsOnBugsTab:function(t){this.isOnBugsTab=t,this._notifyChanged()},_handleOnSwitchedToTab:function(t){this._setIsOnBugsTab(t===this._bugsTabName)},_stopWatching:function(){this._store.unbind(this)},destroy:function(){this._super(),this._stopWatching(),this._setData=s.noop}})});