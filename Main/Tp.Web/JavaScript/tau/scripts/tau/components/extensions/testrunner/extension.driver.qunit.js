define(["jQuery","tau/components/extensions/component.extension.base"],function(e,n){return n.extend({"bus beforeInit":function(){var e=this;require(["vendors/qunit/qunit","libs.tests/tests.result","libs.tests/jquery.simulate","libs.tests/jsmock","libs.tests/jqMock"],function(){e.bus.fire("dataBind",{})})},"bus error.global":function(e){var n=e.data;module("global failure"),test("global failure",function(){ok(!1,n.message)})},"bus afterInit+afterRender":function(n){function t(){var e="true"==QUnit.urlParams.failedonly,n="true"==QUnit.urlParams.cardview&&!QUnit.urlParams.filter,t=l.find("#qunit-tests");t.hide(),t.toggleClass("failedonly",e),t.toggleClass("cardview",n)}function i(){var e=l.find("#qunit-tests");e.show()}var a=function(e,n){var t=_.extend({},e);return _.each(_.keys(e),function(e){n.hasOwnProperty(e)||delete t[e]}),t};window.included=QUnit.included=function(e,n,t){var i=a(_.extend({},e),n),r=QUnit.equiv(i,n);QUnit.push(r,i,n,t)};var r=_.compact(n.afterInit.data.config.files);if(r&&r.length){var l=n.afterRender.data.element,u=l.find("#qunit-header"),s=function(){var n="true"==QUnit.urlParams.failedonly,t="true"==QUnit.urlParams.cardview&&!QUnit.urlParams.filter,i=e('<label><input type="checkbox" name="failedonly">failed only</label>'),a=i.find("input[name=failedonly]");a.attr("checked",n),a.on("click",function(){QUnit.url({failedonly:!n})});var r=e('<label><input type="checkbox" name="cardview">card view</label>'),l=r.find("input[name=cardview]");l.attr("checked",t),l.on("click",function(){QUnit.url({cardview:!t})}),u.append(i).append(r),e.fx.off=!0},o=QUnit.start;QUnit.start=function(){o.call(QUnit),s()},require(r,function(){t();for(var e=arguments,n=0,a=e.length;a>n;n++)e[n]&&e[n].run();i()})}}})});