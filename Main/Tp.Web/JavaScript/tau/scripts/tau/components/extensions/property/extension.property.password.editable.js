define(["Underscore","jQuery","tau/components/extensions/component.extension.base"],function(_,$,ExtensionBase){return ExtensionBase.extend({category:"edit",init:function(){this._super.apply(this,arguments),this.onBlurProxy=_.bind(this.onBlur,this),this.onKeyDownProxy=_.bind(this.onKeyDown,this)},findPasswordElements:function(element){return element.find(".tau-password,.tau-password-verify")},"bus permissionsReady+afterRender":function(evt){if(evt.permissionsReady.data.editable){var element=evt.afterRender.data.element;this.findPasswordElements(element).blur(this.onBlurProxy),element.find(".tau-password,tau-password-verify").keydown(this.onBlurProxy)}},"bus view.password.ready:last+view.password.confirmation.ready:last":function(evt){var password=evt["view.password.ready"].data,passwordConfirmation=evt["view.password.confirmation.ready"].data,passwordIsNotEmpty=password.length>0;if(passwordIsNotEmpty&&password===passwordConfirmation){var data={};data[this.config.propertyName]=password,this.fire("save",data)}},"bus after_save":function(){this.fire("view.clear.passwords")},"bus afterRender:last+view.clear.passwords":function(evt){this.findPasswordElements($(evt.afterRender.data.element)).val("")},getEventNameFromTarget:function(target){var isPasswordConfirmation=$(target).hasClass("tau-password-verify");return isPasswordConfirmation?"view.password.confirmation.ready":"view.password.ready"},firePasswordReadyEventDependOnTarget:function(target){var value=$(target).val();this.fire(this.getEventNameFromTarget(target),value)},onBlur:function(evt){var target=evt.target;this.firePasswordReadyEventDependOnTarget(target)},onKeyDown:function(evt){var target=evt.target;evt.keyCode==13&&this.firePasswordReadyEventDependOnTarget(target)}})})