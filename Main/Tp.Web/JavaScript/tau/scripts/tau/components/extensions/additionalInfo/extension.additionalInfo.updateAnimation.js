define(["jQuery","tau/components/extensions/component.extension.base"],function(e,n){return n.extend({category:"edit",init:function(){this._super.apply(this,arguments)},"bus beforeComponentsInitialize":function(e){var n=this.createComponentList(e.data);this.fire("componentsList.ready",n)},"bus afterRender + componentsList.ready":function(e){var n=e.afterRender.data.element,t=e["componentsList.ready"].data;this.attachListeners(t,n)},createComponentList:function(e){for(var n=[],t=1;t<e.length;t+=2)n.push(e[t].component);return n},attachListeners:function(e,n){if(e)for(var t=0;t<e.length;t++){var r=e[t];r.on("beforeChangeProperty",this.createOnBeforeChangePropertyHandler({$el:n}),this,{index:t}),r.on("propertyChanged",this.createOnPropertyChangedHandler({$el:n}),this,{index:t,component:e[t]},1)}},createOnPropertyChangedHandler:function(e){var n=this;return function(t){var r=t.listenerData.index,a=t.listenerData.component;a.on("afterRender",function(t){t.removeListener();var a=e.$el.find(" > tbody > tr").eq(r).find(">td");n.fire("updateElement",{element:a})},a)}},createOnBeforeChangePropertyHandler:function(e){var n=this;return function(t){var r=t.listenerData.index,a=e.$el.find(" > tbody > tr").eq(r).find(">td");n.fire("markElementToBeUpdated",{element:a})}}})});