define(["Underscore","jQuery","tau/core/model-base"],function(a,b,c){return c.extend({category:"edit",init:function(){var a=this;a._super.apply(a,arguments),a.store.on({eventName:"afterSave",type:"assignment",listener:this},function(){a.assignmentSaved.apply(a,arguments)}),a.store.on({eventName:"beforeSave",type:"assignment",listener:this},function(){a.beforeSaveAssignment.apply(a,arguments)}),a.store.on({eventName:"beforeSave",type:"roleEffort",listener:this},function(){a.beforeSaveRoleEffort.apply(a,arguments)}),a.store.on({eventName:"afterSave",type:"roleEffort",listener:this},function(){a.afterSaveRoleEffort.apply(a,arguments)}),a.store.on({eventName:"beforeRemove",type:"assignment",listener:this},function(){a.beforeRemoveAssignment.apply(a,arguments)}),a.store.on({eventName:"afterRemove",type:"assignment",listener:this},function(){a.assignmentRemoved.apply(a,arguments)}),a.animations=[]},attachAfterSaveHandler:function(){var a=this.config.context.entity.entityType.name;this.store.on({eventName:"beforeSave",type:a,listener:this},{fn:this.beforeEntitySave,scope:this}),this.store.on({eventName:"afterSave",type:a,listener:this},{fn:this.afterEntitySave,scope:this}),this.attachAfterSaveHandler=function(){}},onInit:function(){this.attachAfterSaveHandler()},beforeEntitySave:function(a){if(this.isCommandForEntityInContext(a)){if(a.data.cmd.config.$set.hasOwnProperty("owner")){var b=this;this.addAnimation(function(){b.fire("updateElement",{element:b.$el.find(".owner-cell")})})}a.data.cmd.config.$set.hasOwnProperty("entityState")&&(this.store.evictProperties(this.config.context.entity.id,"assignable",["roleEfforts"]),a.data.cmd.type.toLowerCase()==="userstory"&&(a.data.cmd.config.fields.push("tasks-effort-sum"),a.data.cmd.config.fields.push("tasks-effortToDo-sum")),a.data.cmd.config.fields.push({roleEfforts:["id","effort","effortToDo",{assignable:["id"]}]}),a.data.cmd.config.fields.push("effort"),a.data.cmd.config.fields.push("effortToDo"))}},isCommandForEntityInContext:function(a){return a.data.cmd.config.id===this.config.context.entity.id},isEntityStateChanged:function(a){return this.isCommandForEntityInContext(a)?a.data.changes.hasOwnProperty("entityState"):!1},isOwnerWasChanged:function(a){return this.isCommandForEntityInContext(a)?a.data.changes.hasOwnProperty("owner"):!1},afterEntitySave:function(a){this.refresh()},beforeRemoveAssignment:function(a){var b=a.data.cmd.config.id,c=this.$el.find(this.getAssignmentSelector(b));this.fire("markElementToBeDeleted",{element:c})},getUserSelector:function(a){return".group[roleId="+a.roleId+"] .user[userId="+a.id+"]"},assignmentRemoved:function(){this.fire("afterRemoveAssignment"),this.refresh()},getAssignmentSelector:function(a){var b=this,c=".user",d=b.$el.find(c),e;d.each(function(b){var f=d.eq(b);if(f.tmplItem().data.assignmentId==a){e=f,c+=":eq("+b+")";return!1}});return c},getAssignmentSelectorByAssignmentId:function(a){var b=this,c=b.$el.find(".user"),d=".user",e=[];c.each(function(b){var f=c.eq(b);f.tmplItem().data.assignmentId==a&&(d+=".user:eq("+b+")",e.push(d))});return e.join(",")},assignmentSaved:function(){this.refresh()},generateAssignmentIdForNewAssignment:function(a){return[a.assignable.id,a.role.id,a.generalUser.id].join(",")},beforeSaveRoleEffort:function(a){var b=a.data.cmd,c=b.config.id,d=this.findRoleEffortElementByRoleEffortId(c);d&&(b.config.fields=b.config.fields||[],b.config.fields.push("effortToDo"),this.fire("markElementToBeUpdated",{element:d}))},afterSaveRoleEffort:function(a){if(this.commandContainsRoleEffortChangesForEntity(a)){var b=a.data.cmd.config.id,c=this;this.addAnimation(function(){var a=c.findRoleEffortElementByRoleEffortId(b);c.fire("updateElement",{element:a}),c.fire("updateElement",{element:c.$el.find(".total-row .effort-cell span")})}),this.fire("evictTotalEfforts"),this.refresh()}},isComponentShowsRoleEffortWithId:function(a){var b=this.bindedData.assignments.groups;for(var c=0;c<b.length;c++)if(b[c].roleEffort.id===a)return!0;return!1},findRoleEffortElementByRoleEffortId:function(a){var c=this.$el.find(".role-effort .effort"),d;c.each(function(){var c=b(this);if(c.parents(".group").tmplItem().data.roleEffort.id===a){d=c;return!1}});return d},commandContainsRoleEffortChangesForEntity:function(a){return typeof a.data.changes.effort!="undefined"&&this.isComponentShowsRoleEffortWithId(a.data.cmd.config.id)},beforeSaveAssignment:function(a){var c=this,d=a.data.cmd.config,e=d.id,f,g;if(e)f=this.getAssignmentSelector(e),g=this.$el.find(f),g&&(this.fire("markElementToBeUpdated",{element:g}),this.addAnimation(function(){c.fire("updateElement",{element:c.$el.find(f)})}));else{var h=d.$set;e=this.generateAssignmentIdForNewAssignment(h);var i={name:"",role:{},assignmentId:e};b.tmpl("user",i).appendTo(c.$el.find(".group[roleId="+h.role.id+"]"));var j=this.getUserSelector({roleId:h.role.id,id:h.generalUser.id});this.fire("beforeAssignment"),this.addAnimation(function(){c.fire("updateElement",{element:c.$el.find(j)})})}},addAnimation:function(a){this.animations.push(a)},startAnimations:function(){a.each(this.animations,function(a){a()}),this.animations=[]},refresh:function(){this.fire("refresh")},"bus dataBind":function(a){this.bindedData=a.data},"bus afterRender":function(a){this.$el=a.data.element,this.startAnimations()},normalizeEffort:function(a){return Math.abs(Math.round(parseFloat(a)*100)/100)||0},"bus permissionsReady+afterRender":function(a){var b=a.permissionsReady.data;if(b.editable){var c=this;c.$el.removeClass("assignments-table-readonly"),c.$el.find(".role-effort .effort").editableText({mask:/^\d*\.?\d*$/,restoreText:!0,onSave:function(a){var b=this.$element.parents(".group").tmplItem().data,d=c.normalizeEffort(b.roleEffort.effort),e=c.normalizeEffort(a);if(d===e){this.restoreInitialText();return!1}var f={typeName:"roleEffort",$include:["id"],id:b.roleEffort.id,$set:{effort:e}};c.bus.fire("save",f)},onEditStart:function(){this.$element.data("points",this.$element.find("span").detach())},onEditEnd:function(){this.$element.append(this.$element.data("points"))}})}},destroy:function(){delete this.$el,delete this.bindedData,delete this.animations,this._super()}})})