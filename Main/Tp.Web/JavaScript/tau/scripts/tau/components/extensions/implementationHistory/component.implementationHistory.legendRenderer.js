define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/utils/utils.date","tau/utils/utils.storage","tau/utils/utils.date/utils.date.wrapper"],function(t,e,a,n,s,i){return a.extend({"bus afterRender":function(t){this._$element=t.data.element,this._data=t.data.data,this._render(),this._bindEvents()},_render:function(){var t=e('<div class="tau-legend"></div>'),a=e('<h3><span class="tau-legendToggler">Legend</span></h3>');t.append(a,this._createGroups()),this._setProps(t),t.appendTo(this._$element)},_createGroups:function(){var t=e('<div class="tau-groups"></div>');this._createGroupElement("Progress Flow",this._getProgressFlowTypes()).appendTo(t);var a=this._getRelatedEntitiesTypes();return a&&this._createGroupElement("Related Entities",a).appendTo(t),this._createGroupElement("Histograms",this._getHistogramTypes()).appendTo(t),t},_createGroupElement:function(a,n){var s=e("<dl/>"),i=e("<dt/>").text(a);return s.append(i),t.each(n,function(t){var a=e("<dd/>"),n=e(t.element).addClass("glyph");a.text(t.description),a.prepend(n),s.append(a)}),s},_getProgressFlowTypes:function(){var a=this._$element.find(".tau-historyGrid .tau-historyItem .tau-flow"),n={};t.each(a,function(t){var a=e.trim(t.className.replace("tau-flow",""));a in n||(n[a]=e(t).clone().empty().removeAttr("title"))});var s=t.map(n,function(t,e){var a={element:t};switch(e){case"tau-normal":a.description="normal flow";break;case"tau-transitions":a.description="multiple state transitions";break;case"tau-impediment":a.description="impediment";break;case"tau-done":a.description="final state"}return a});return s},_getRelatedEntitiesTypes:function(){var a=null,n=this._$element.find(".tau-historyGrid .tau-historyItem .tau-entity");if(n.size()>0){var s={};t.each(n,function(t){var a=e.trim(t.className.replace(/tau-entity|tau-closed/g,""));a in s||(s[a]=e(t).clone(!0).unbind().removeAttr("title"))});var i=t.map(s,function(t){return{element:t,description:t.data("entityInfo").alias}});a=[{element:e('<div class="tau-entity"></div>'),description:"entity (added)"},{element:'<div class="tau-entity tau-closed"></div>',description:"entity (closed)"}].concat(i)
}return a},_getHistogramTypes:function(){var t=[];return t.push({element:this._getElementForStateHistogram(),description:"total days in entity state"}),this._timeLoadWasReported()&&t.push({element:this._getElementForTimeLoadHistogram(),description:"daily total spent time"}),t},_getElementForStateHistogram:function(){var t=e(['<div class="tau-historyGridInterpretation">','<div class="stateName tau-dateItems-50">',"<span>State name</span>","</div>","</div>"].join(""));return t},_timeLoadWasReported:function(){return t.any(this._data.historyItems,function(t){return t.spentTime>0})},_getElementForTimeLoadHistogram:function(){var t=new i(0),a=e(['<div class="tau-date tau-timeLoad-50">','<span class="tau-day">'+n.formatAs(t,"dd")+"</span>",'<span class="tau-month">'+n.formatAs(t,"MMM")+"</span>","</div>"].join(""));return a},_setProps:function(t){this._isCollapsed()&&this._collapse(t)},_bindEvents:function(){this._$element.find(".tau-legend .tau-legendToggler").click(e.proxy(this,"_toggleState"))},_toggleState:function(t){var a=e(t.currentTarget).parents(".tau-legend");this._isCollapsed()?this._uncollapse(a):this._collapse(a)},_isCollapsed:function(){return"collapsed"==s.get("implementationHistoryLegendState")},_uncollapse:function(t){s.remove("implementationHistoryLegendState"),t.removeClass("tau-collapsed")},_collapse:function(t){s.set("implementationHistoryLegendState","collapsed"),t.addClass("tau-collapsed")}})});