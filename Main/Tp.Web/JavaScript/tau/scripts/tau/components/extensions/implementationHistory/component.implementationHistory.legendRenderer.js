define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/utils/utils.date","tau/utils/utils.storage"],function(a,b,c,d,e){return c.extend({"bus afterRender":function(a){this._$element=a.data.element,this._data=a.data.data,this._render(),this._bindEvents()},_render:function(){var a=b('<div class="tau-legend"></div>'),c=b('<h3><span class="tau-legendToggler">Legend</span></h3>');a.append(c,this._createGroups()),this._setState(a),a.appendTo(this._$element)},_createGroups:function(){var a=b('<div class="tau-groups"></div>');this._createGroupElement("Progress Flow",this._getProgressFlowTypes()).appendTo(a);var c=this._getRelatedEntitiesTypes();return c&&this._createGroupElement("Related Entities",c).appendTo(a),this._createGroupElement("Histograms",this._getHistogramTypes()).appendTo(a),a},_createGroupElement:function(c,d){var e=b("<dl/>"),f=b("<dt/>").text(c);return e.append(f),a.each(d,function(a){var c=b("<dd/>"),d=b(a.element).addClass("glyph");c.text(a.description),c.prepend(d),e.append(c)}),e},_getProgressFlowTypes:function(){var c=this._$element.find(".tau-historyGrid .tau-historyItem .tau-flow"),d={};a.each(c,function(a){var c=b.trim(a.className.replace("tau-flow",""));c in d||(d[c]=b(a).clone().empty().removeAttr("title"))});var e=a.map(d,function(a,b){var c={element:a};switch(b){case"tau-normal":c.description="normal flow";break;case"tau-transitions":c.description="multiple state transitions";break;case"tau-impediment":c.description="impediment";break;case"tau-done":c.description="final state"}return c});return e},_getRelatedEntitiesTypes:function(){var c=null,d=this._$element.find(".tau-historyGrid .tau-historyItem .tau-entity");if(d.size()>0){var e={};a.each(d,function(a){var c=b.trim(a.className.replace(/tau-entity|tau-closed/g,""));c in e||(e[c]=b(a).clone(!0).unbind().removeAttr("title"))});var f=a.map(e,function(a,b){return{element:a,description:a.data("entityInfo").alias}});c=[{element:b('<div class="tau-entity"></div>'),description:"entity (added)"},{element:'<div class="tau-entity tau-closed"></div>',description:"entity (closed)"}].concat(f)}return c},_getHistogramTypes:function(){var a=[];return a.push({element:this._getElementForStateHistogram(),description:"total days in entity state"}),this._timeLoadWasReported()&&a.push({element:this._getElementForTimeLoadHistogram(),description:"daily total spent time"}),a},_getElementForStateHistogram:function(){var a=b(['<div class="tau-historyGridInterpretation">','<div class="stateName tau-dateItems-50">',"<span>State name</span>","</div>","</div>"].join(""));return a},_timeLoadWasReported:function(){return a.any(this._data.historyItems,function(a){return a.spentTime>0})},_getElementForTimeLoadHistogram:function(){var a=new Date(0),c=b(['<div class="tau-date tau-timeLoad-50">','<span class="tau-day">'+d.formatAs(a,"dd")+"</span>",'<span class="tau-month">'+d.formatAs(a,"MMM")+"</span>","</div>"].join(""));return c},_setState:function(a){this._isCollapsed()&&this._collapse(a)},_bindEvents:function(){this._$element.find(".tau-legend .tau-legendToggler").click(b.proxy(this,"_toggleState"))},_toggleState:function(a){var c=b(a.currentTarget).parents(".tau-legend");this._isCollapsed()?this._uncollapse(c):this._collapse(c)},_isCollapsed:function(){return e.get("implementationHistoryLegendState")=="collapsed"},_uncollapse:function(a){e.remove("implementationHistoryLegendState"),a.removeClass("tau-collapsed")},_collapse:function(a){e.set("implementationHistoryLegendState","collapsed"),a.addClass("tau-collapsed")}})})