define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/utils/utils.date","tau/utils/utils.storage","tau/utils/utils.date/utils.date.wrapper"],function(_,$,ComponentExtensionBase,dateUtils,storage,Date){return ComponentExtensionBase.extend({"bus afterRender":function(evt){this._$element=evt.data.element,this._data=evt.data.data,this._render(),this._bindEvents()},_render:function(){var $legendContainer=$('<div class="tau-legend"></div>'),$legendTitle=$('<h3><span class="tau-legendToggler">Legend</span></h3>');$legendContainer.append($legendTitle,this._createGroups()),this._setState($legendContainer),$legendContainer.appendTo(this._$element)},_createGroups:function(){var $groupsContainer=$('<div class="tau-groups"></div>');this._createGroupElement("Progress Flow",this._getProgressFlowTypes()).appendTo($groupsContainer);var relatedEntitiesTypes=this._getRelatedEntitiesTypes();return relatedEntitiesTypes&&this._createGroupElement("Related Entities",relatedEntitiesTypes).appendTo($groupsContainer),this._createGroupElement("Histograms",this._getHistogramTypes()).appendTo($groupsContainer),$groupsContainer},_createGroupElement:function(groupTitle,groupItems){var $group=$("<dl/>"),$groupTitle=$("<dt/>").text(groupTitle);return $group.append($groupTitle),_.each(groupItems,function(item){var $groupItem=$("<dd/>"),$glyph=$(item.element).addClass("glyph");$groupItem.text(item.description),$groupItem.prepend($glyph),$group.append($groupItem)}),$group},_getProgressFlowTypes:function(){var $flowElements=this._$element.find(".tau-historyGrid .tau-historyItem .tau-flow"),flowTypesHash={};_.each($flowElements,function(flow){var className=$.trim(flow.className.replace("tau-flow",""));className in flowTypesHash||(flowTypesHash[className]=$(flow).clone().empty().removeAttr("title"))});var flowTypes=_.map(flowTypesHash,function($flow,flowType){var flowInfo={element:$flow};switch(flowType){case"tau-normal":flowInfo.description="normal flow";break;case"tau-transitions":flowInfo.description="multiple state transitions";break;case"tau-impediment":flowInfo.description="impediment";break;case"tau-done":flowInfo.description="final state"}return flowInfo});return flowTypes},_getRelatedEntitiesTypes:function(){var relatedEntitiesTypes=null,$relatedEntities=this._$element.find(".tau-historyGrid .tau-historyItem .tau-entity");if($relatedEntities.size()>0){var entityTypesHash={};_.each($relatedEntities,function(entity){var className=$.trim(entity.className.replace(/tau-entity|tau-closed/g,""));className in entityTypesHash||(entityTypesHash[className]=$(entity).clone(!0).unbind().removeAttr("title"))});var entityTypes=_.map(entityTypesHash,function($entity,entityType){return{element:$entity,description:$entity.data("entityInfo").alias}});relatedEntitiesTypes=[{element:$('<div class="tau-entity"></div>'),description:"entity (added)"},{element:'<div class="tau-entity tau-closed"></div>',description:"entity (closed)"}].concat(entityTypes)}return relatedEntitiesTypes},_getHistogramTypes:function(){var histogramTypes=[];return histogramTypes.push({element:this._getElementForStateHistogram(),description:"total days in entity state"}),this._timeLoadWasReported()&&histogramTypes.push({element:this._getElementForTimeLoadHistogram(),description:"daily total spent time"}),histogramTypes},_getElementForStateHistogram:function(){var $element=$(['<div class="tau-historyGridInterpretation">','<div class="stateName tau-dateItems-50">',"<span>State name</span>","</div>","</div>"].join(""));return $element},_timeLoadWasReported:function(){return _.any(this._data.historyItems,function(historyItem){return historyItem.spentTime>0})},_getElementForTimeLoadHistogram:function(){var date=new Date(0),$element=$(['<div class="tau-date tau-timeLoad-50">','<span class="tau-day">'+dateUtils.formatAs(date,"dd")+"</span>",'<span class="tau-month">'+dateUtils.formatAs(date,"MMM")+"</span>","</div>"].join(""));return $element},_setState:function($legendContainer){this._isCollapsed()&&this._collapse($legendContainer)},_bindEvents:function(){this._$element.find(".tau-legend .tau-legendToggler").click($.proxy(this,"_toggleState"))},_toggleState:function(evt){var $legend=$(evt.currentTarget).parents(".tau-legend");this._isCollapsed()?this._uncollapse($legend):this._collapse($legend)},_isCollapsed:function(){return storage.get("implementationHistoryLegendState")=="collapsed"},_uncollapse:function($legend){storage.remove("implementationHistoryLegendState"),$legend.removeClass("tau-collapsed")},_collapse:function($legend){storage.set("implementationHistoryLegendState","collapsed"),$legend.addClass("tau-collapsed")}})})