define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/utils/utils.date","tau/utils/utils.storage"],function(_,$,a,b,c){return a.extend({"bus afterRender":function(a){this._$element=a.data.element,this._data=a.data.data,this._render(),this._bindEvents()},_render:function(){var a=$('<div class="tau-legend"></div>'),b=$('<h3><span class="tau-legendToggler">Legend</span></h3>');a.append(b,this._createGroups()),this._setState(a),a.appendTo(this._$element)},_createGroups:function(){var a=$('<div class="tau-groups"></div>');this._createGroupElement("Progress Flow",this._getProgressFlowTypes()).appendTo(a);var b=this._getRelatedEntitiesTypes();return b&&this._createGroupElement("Related Entities",b).appendTo(a),this._createGroupElement("Histograms",this._getHistogramTypes()).appendTo(a),a},_createGroupElement:function(a,b){var c=$("<dl/>"),d=$("<dt/>").text(a);return c.append(d),_.each(b,function(a){var b=$("<dd/>"),d=$(a.element).addClass("glyph");b.text(a.description),b.prepend(d),c.append(b)}),c},_getProgressFlowTypes:function(){var a=this._$element.find(".tau-historyGrid .tau-historyItem .tau-flow"),b={};_.each(a,function(a){var c=$.trim(a.className.replace("tau-flow",""));c in b||(b[c]=$(a).clone().empty().removeAttr("title"))});var c=_.map(b,function(a,b){var c={element:a};switch(b){case"tau-normal":c.description="normal flow";break;case"tau-transitions":c.description="multiple state transitions";break;case"tau-impediment":c.description="impediment";break;case"tau-done":c.description="final state"}return c});return c},_getRelatedEntitiesTypes:function(){var a=null,b=this._$element.find(".tau-historyGrid .tau-historyItem .tau-entity");if(b.size()>0){var c={};_.each(b,function(a){var b=$.trim(a.className.replace(/tau-entity|tau-closed/g,""));b in c||(c[b]=$(a).clone(!0).unbind().removeAttr("title"))});var d=_.map(c,function(a,b){return{element:a,description:a.data("entityInfo").alias}});a=[{element:$('<div class="tau-entity"></div>'),description:"entity (added)"},{element:'<div class="tau-entity tau-closed"></div>',description:"entity (closed)"}].concat(d)}return a},_getHistogramTypes:function(){var a=[];return a.push({element:this._getElementForStateHistogram(),description:"total days in entity state"}),this._timeLoadWasReported()&&a.push({element:this._getElementForTimeLoadHistogram(),description:"daily total spent time"}),a},_getElementForStateHistogram:function(){var a=$(['<div class="tau-historyGridInterpretation">','<div class="stateName tau-dateItems-50">',"<span>State name</span>","</div>","</div>"].join(""));return a},_timeLoadWasReported:function(){return _.any(this._data.historyItems,function(a){return a.spentTime>0})},_getElementForTimeLoadHistogram:function(){var a=new Date(0),c=$(['<div class="tau-date tau-timeLoad-50">','<span class="tau-day">'+b.formatAs(a,"dd")+"</span>",'<span class="tau-month">'+b.formatAs(a,"MMM")+"</span>","</div>"].join(""));return c},_setState:function(a){this._isCollapsed()&&this._collapse(a)},_bindEvents:function(){this._$element.find(".tau-legend .tau-legendToggler").click($.proxy(this,"_toggleState"))},_toggleState:function(a){var b=$(a.currentTarget).parents(".tau-legend");this._isCollapsed()?this._uncollapse(b):this._collapse(b)},_isCollapsed:function(){return c.get("implementationHistoryLegendState")=="collapsed"},_uncollapse:function(a){c.remove("implementationHistoryLegendState"),a.removeClass("tau-collapsed")},_collapse:function(a){c.set("implementationHistoryLegendState","collapsed"),a.addClass("tau-collapsed")}})})