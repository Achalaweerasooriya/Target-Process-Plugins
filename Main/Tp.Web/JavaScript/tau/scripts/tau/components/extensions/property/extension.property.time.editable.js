define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/ui/behaviour/date/ui.behaviour.dateEditor"],function(e,t,i){return i.extend({category:"edit",normalizeEffort:function(e){return Math.abs(Math.round(100*parseFloat(e))/100)||0},"bus permissionsReady+afterRender+dataBind":function(e){var t=this,i=this.permissions=e.permissionsReady.data;i.editable&&(t.$el=e.afterRender.data.element,t.$el.find(".property-text").editableText({mask:/^\d*\.?\d*$/,restoreText:!0,onSave:function(i){var n=e.dataBind.data,a=t.normalizeEffort(n.text),o=t.normalizeEffort(i);if(a===o)return this.restoreInitialText(),!1;var r={};r[t.config.propertyName]=o;var s={$include:["id"],id:t.config.context.entity.id,$set:r};t.bus.fire("save",s)},onEditStart:function(){this.$element.data("points",this.$element.find("span").detach())},onEditEnd:function(){this.$element.append(this.$element.data("points"))}}))},showEditor:function(){this.$el.find(".property-text").editableText("activate")},"bus edit":function(){this.permissions.editable&&this.showEditor()},onClickHandler:function(){},removeHandlers:function(){},removeWidget:function(){this.$widget&&this.$widget.editableText("destroy")},destroy:function(){this.removeHandlers(),this.removeWidget(),this._super.apply(this,arguments)}})});