define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/ui/behaviour/date/ui.behaviour.dateEditor"],function(_,$,ExtensionBase){return ExtensionBase.extend({category:"edit",normalizeEffort:function(effortVal){return Math.abs(Math.round(parseFloat(effortVal)*100)/100)||0},"bus permissionsReady+afterRender+dataBind":function(eventData){var self=this,permissions=this.permissions=eventData.permissionsReady.data;permissions.editable&&(self.$el=eventData.afterRender.data.element,self.$el.find(".property-text").editableText({mask:/^\d*\.?\d*$/,restoreText:!0,onSave:function(text){var data=eventData.dataBind.data,currEffort=self.normalizeEffort(data.text),newEffort=self.normalizeEffort(text);if(currEffort===newEffort)return this.restoreInitialText(),!1;var $set={};$set[self.config.propertyName]=newEffort;var saveCmd={$include:["id"],id:self.config.context.entity.id,$set:$set};self.bus.fire("save",saveCmd)},onEditStart:function(){this.$element.data("points",this.$element.find("span").detach())},onEditEnd:function(){this.$element.append(this.$element.data("points"))}}))},showEditor:function(){this.$el.find(".property-text").editableText("activate")},"bus edit":function(){this.permissions.editable&&this.showEditor()},onClickHandler:function(){},removeHandlers:function(){},removeWidget:function(){this.$widget&&this.$widget.editableText("destroy")},destroy:function(){this.removeHandlers(),this.removeWidget(),this._super.apply(this,arguments)}})})