define(["Underscore","tau/core/component-base","tau/core/view-base","tau/ui/extensions/ui.extension.domOperationsBase","tau/ui/ui.templateFactory"],function(_,ComponentBase,ViewBase,domOperationsBase,templateFactory){return{create:function(configCreator,componentConfig){var config=componentConfig||{};configCreator=configCreator||{},_.defaults(config,{name:configCreator.name}),configCreator.template&&(config.template=configCreator.template),config.template&&config.template.markup&&(config.template=templateFactory.register(config.template));var component=new ComponentBase(config);config=component.config;var configurator=config.context.configurator;_.defaults(config,{store:configurator.getStore()});var viewType=configCreator.ViewType||ViewBase;component.attach(viewType),configCreator.ModelType&&component.attach(configCreator.ModelType);var domOperationsExtension=configCreator.domOperations||domOperationsBase;component.attach(domOperationsExtension);if(configCreator.extensions&&configCreator.extensions.constructor==Array)for(var i=0;i<configCreator.extensions.length;i++){var extension=configCreator.extensions[i];if(!extension)throw new Error("Extension ["+i+"] for component "+config.name+" is not defined");extension.hasOwnProperty("type")&&extension.hasOwnProperty("config")?component.attach(extension.type,extension.config):component.attach(extension)}var componentBus=component.bus;return configurator.getComponentBusRegistry().register(componentBus),componentBus.on("destroy",function(){configurator.getComponentBusRegistry().unregister(this)}),componentBus}}})