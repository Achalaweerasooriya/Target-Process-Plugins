define(["require","Underscore","jQuery","tau/core/class"],function(t){"use strict";var e=t("Underscore"),i=t("jQuery"),n=t("tau/core/class");return n.extend({EMPTY_ROLE:{id:"",name:"- Select Role -"},init:function(t,i,n){this._workflowService=t,this._processId=i,this._entityType=n,this.statesChanged=e.Callbacks(),this.updateProgress=e.Callbacks()},getProcessId:function(){return this._processId},getEntityType:function(){return this._entityType},refresh:function(){return i.when(this._getStates(),this._getTerms()).then(this._fireStatesChanged.bind(this)).then(this._fireStateUpdated.bind(this))},getStateSettings:function(t){return i.when(this._getStates(),this._workflowService.getRoles(),this._getTerms()).then(function(i,n,s){var r=e.findWhere(i,{id:t});return r.isCurrent=!0,{states:i,roles:e.union(this.EMPTY_ROLE,n),terms:s,settings:r}}.bind(this))},saveStateSettings:function(t){var n=function(i){if(i.id===t.id)return t;var n=e.contains(i.nextStateIds,t.id),s=e.contains(t.previousStateIds,i.id);return n&&!s?(i.nextStateIds=e.without(i.nextStateIds,t.id),i):!n&&s?(i.nextStateIds=e.union(i.nextStateIds,t.id),i):null},s=function(t){return this._workflowService.saveEntityState(t.id,{name:t.name,isPlanned:t.isPlanned,role:t.activeRoleId&&t.activeRoleId!==this.EMPTY_ROLE.id?{id:t.activeRoleId}:null,nextStates:e.map(t.nextStateIds,function(t){return{id:t}})})}.bind(this);this._fireStateUpdating(t.id),this._getStates().then(function(t){var r=e.chain(t).map(n).compact().map(s).value();i.when.all(r).always(this.refresh.bind(this))}.bind(this))},renameState:function(t){this._fireStateUpdating(t.id),this._workflowService.saveEntityState(t.id,{name:t.name}).always(this.refresh.bind(this))},migrateEntityState:function(t,e){return this._fireStateUpdating(t.id),this._workflowService.migrateEntityState(t,e).then(this._fireStateUpdated.bind(this))},deleteEntityState:function(t){return this._fireStateUpdating(t.id),this._workflowService.deleteEntityState(t).always(this.refresh.bind(this))
},_getStates:function(){return this._workflowService.getStates(this.getProcessId(),this.getEntityType())},_getTerms:function(){return this._workflowService.getTerms(this.getProcessId(),this.getEntityType())},_fireStatesChanged:function(t,e){this.statesChanged.fire({states:t,entityTerms:e})},_fireStateUpdating:function(t){this.updateProgress.fire({updatingStateId:t})},_fireStateUpdated:function(){this.updateProgress.fire({updatingStateId:null})}})});