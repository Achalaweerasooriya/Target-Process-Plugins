define(["Underscore","tau/core/class","tau/utils/utils.debug","tau/components/board.new.list/views/view.new.list.tree.dragndrop"],function(t,i,e,n){return i.extend({_eventNamespace:".newlist-dragndrop-behavior",_fields:["prioritization"],init:function(t,i,e,n,s){this._eventAggregator=t,this.skeletonView=i,this._boardSettingsService=e,this._apiService=n,this._configurator=s,this.dndOptions={}},attach:function(){$(this._configurator.getWindow()).on("keydown"+this._eventNamespace,this._trackShiftKeyState.bind(this)).on("keyup"+this._eventNamespace,this._trackShiftKeyState.bind(this)),this._eventAggregator.treeRendered.once(this._onInitialTreeRendered,this),this._boardSettingsService.get(this._fields).then(function(t){this._setPrioritization(t.prioritization)}.bind(this)),this._boardSettingsService.bind({fields:this._fields,listener:this,callback:function(t){this._setPrioritization(t.prioritization)}.bind(this)})},_onInitialTreeRendered:function(){t.each(this.skeletonView.getAllTreeViews(),this._onTreeViewCreated,this),this.skeletonView.treeViewCreated.add(this._onTreeViewCreated,this)},_setPrioritization:function(i){i=t.defaults({},i,{mode:"enabled"}),this.dndOptions.prioritization!==i.mode&&(this.dndOptions.prioritization=i.mode,this.setDndOptions())},_trackShiftKeyState:function(t){this.dndOptions.shiftKey!==t.shiftKey&&(this.dndOptions.shiftKey=t.shiftKey,this.setDndOptions())},setDndOptions:function(){this.skeletonView.$el.toggleClass("tau-list-prioritization-enabled","enabled"===this.dndOptions.prioritization).toggleClass("tau-list-prioritization-shiftDown","shift"===this.dndOptions.prioritization&&!!this.dndOptions.shiftKey),this.setDndOptionsForView(this.skeletonView._rootView)},setDndOptionsForView:function(i){i&&(i.dndView&&i.dndView.setDndOptions(this.dndOptions),t.each(i.subViews,this.setDndOptionsForView,this))},_onTreeViewCreated:function(t){t.dndView=new n(t,this)},applyDndMove:function(i){var n={itemId:i.item.data("id"),beforeItemId:i.itemBefore.data("id"),afterItemId:i.itemAfter.data("id"),path:i.treeModel.hierarchy.getPath()};return this._apiService.treeViewPrioritizeBatch({$set:{items:[n]}}).done(function(s){taus.track({action:"drag and drop(prioritize)",cardTypes:t.map(i.treeModel.hierarchyMetaInfo.cardTypes,function(t){return t.typeName}),tags:["newlist"]});var r=i.treeModel;t.each(s.data,function(t){var i=r.hierarchy.findChildByCardId(t.dataItem.id);i?i.card.orderingValue=t.dataItem.orderingValue:e.assertError(!1,"Update card after d&d: cannot find node in model",n)}),r.sortCards()}.bind(this))},destroy:function(){$(this._configurator.getWindow()).off(this._eventNamespace),this._boardSettingsService.unbind({listener:this})}})});