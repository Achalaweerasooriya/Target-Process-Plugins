define(["Underscore","tau/core/templates-factory","tau/ui/extensions/board.plus/ui.board.plus.utils","tau/ui/extensions/board.plus/ui.board.plus.cards-custom-functions","tau/ui/templates/board.plus/customized/ui.template.boardplus.card.section.customized"],function(a,t,e,r){var i=a.extend({},r,{generateCardClass:function(a,t){return["i-role-card","tau-list-entity",this.generateFinalStateClass(t),this.generateListClass(a,t)].join(" ")},generateListClass:function(a,t){var r="tau-list-"+t.type.toLowerCase(),i=a.data.empty;return i&&(r+=" tau-axis-card-no-value"),e.isSupportedCardForView(t.type.toLowerCase())||(r+=" tau-axis-card-no-view"),r},generateHandlerClass:function(a){var t=a.isNoValueCard();return"tau-drag-handler tau-drag-handler-level-"+a.levelKey+(t?" tau-drag-handler-disabled":" tau-drag-handler-enabled")},generateFinalStateClass:function(a){return a.isFinal?this.getFinalStateClass():""},getFinalStateClass:function(){return"tau-list-entity_final-state"},generateCardCollapserClass:function(a){var t="tau-list-collapser-cell";return a.isCollapserEnabled||(t+=" disabled"),t}}),s={engine:"jqote2",customFunctions:i,name:"new.list.card.customized",markup:["<% var dataItem = this.dataItem, configurator = this.configurator; %>","<% var cardData = dataItem.data.cardData || { id: dataItem.id, type: dataItem.type }; %>","<% dataItem.data.cardData = cardData; %>",'<div role="card" id="<%= fn.generateCardId(cardData) %>" class="<%= fn.generateCardClass(dataItem, cardData) %>" <%= fn.generateDataAttributes(dataItem) %>>','<div class="tau-list-line">','<div class="tau-elems-table tau-elems-table-level-<%= dataItem.levelKey %>">','<div class="tau-drag-handler-cell i-role-dragndrop-handler">','<div class="<%= fn.generateHandlerClass(dataItem) %>"></div>',"</div>","<% if (dataItem.renderCollapser) { %>",'<div class="<%= fn.generateCardCollapserClass(dataItem) %>"><button class="i-role-card-collapser tau-v-collapser"></button></div>',"<% } %>","<% var type = cardData.type.toLowerCase(); %>","<% _.each(this.layout, function(item, index) { %>","<% var data = dataItem.data[item.unit.id]; %>","<% if (dataItem.data.empty) { %>","<% if (!item.unit.isNameUnit) {","<% return; %>","<% } %>","<% data = dataItem.data; %>","<% } %>","<% var itemData = {type: type, settings: {width: item.width}, data: data, configurator: configurator, first: !index, unit: item}; %>",'<%= fn.sub(item.unit.getTemplateName("list"), [itemData]) %>',"<% }, this); %>","</div>","</div>","</div>"]};return t.register(s)});