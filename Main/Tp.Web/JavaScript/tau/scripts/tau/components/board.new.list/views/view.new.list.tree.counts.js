define(["Underscore","jQuery","tau/core/class","tau/core/termProcessor"],function(e,t,r,n){return r.extend({init:function(e,t,r){this.treeView=e,this.treeModel=r,this.countsModel=t,this.termProcessor=new n,this.treeModel.applyAndObserve(function(e){e.countsModel.dataLoaded.add(this.refreshCount.bind(this,e.countsModel))}.bind(this)),this.treeModel.cardUpdated.add(this._onCardUpdated.bind(this))},_onCardUpdated:function(e){var t=this.treeModel.hierarchy.findChildByCardId(e.card.id);this.refreshCount(t.countsModel)},_getTitle:function(t){var r;return t.data&&t.data.types&&(r=e.map(t.data.types,function(e){var t=this._getTypePluralizedName(e.type);return(""===t?e.typeName:t)+": "+e.count},this).join(" / ")),r},refreshCount:function(e){var t=this._getTitle(e),r=e.getAllCount(),n=this._getCounter(e.treeModel.card);n.text(r),n[0].title=t,n.toggleClass("tau-counter-hidden",!r)},_getCounter:function(e){var t=this.treeView.findChildCardById(e.id);return t.find(".tau-counter").first()},_getTypePluralizedName:function(e){return this.termProcessor.getTerm(e,"names")},destroy:function(){}})});