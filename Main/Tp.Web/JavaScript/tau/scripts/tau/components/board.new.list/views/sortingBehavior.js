define(["Underscore","jQuery","tau/core/class","tau/components/board.new.list/views/sortingItem"],function(e,t,n,i){return n.extend({STAT_KEY:"statistics_newlist_sort",init:function(e){this._skeletonView=e.skeletonView,this._rootController=e.rootTreeController,this._modelSettings=e.modelSettings},attach:function(){this._skeletonView.treeViewCreated.add(this._onTreeViewCreated.bind(this))},sort:function(t){var n=t.getOrdering(),i=0===t.nodeCollection.level?[this._rootController._model]:this._rootController._model.hierarchy.getExpandedModelsAtLevel(t.nodeCollection.level);e.each(i,function(e){e.nodes.setCustomOrdering(n)});var o=e.map(i,function(e){return e.hierarchy.getPath()}),r=this.STAT_KEY,s=this._skeletonView;taus.start(r,{}),this._treeViewByLevel(o,t).done(this._updateNodes.bind(this,i)).done(this._updateQuickAdd.bind(this,i)).done(this._updateCounts.bind(this,i)).done(this._recalculateColumnWidthsForLevel.bind(this,i)).always(function(){s.toggleProgress(!1),taus.stop(r,{ordering:n,types:t.nodeCollection.hierarchyMetaInfo.cardTypes,requestState:this.state()})})},_updateNodes:function(t,n){e.each(t,function(e){var t=e.hierarchy.getPath(),i=e.hierarchy.findRawNodeByPath(n.data,t);e.updateChildrenNodes(i.nodes,n.data.meta)},this)},_recalculateColumnWidthsForLevel:function(e){e.length>0&&this._skeletonView.calculateColumnWidthsForLevel(e[0].level+1)},_treeViewByLevel:function(e,t){var n=t.nodeCollection,i=n.pagingModel.getTake(),o=n.hierarchyMetaInfo.levelType.toLowerCase(),r={$skip:0,$take:i,$set:{expansionState:e,level:n.level,orderingConfig:{levelType:o,ordering:t.getOrdering()}}};return this._modelSettings.listSettings.apiService.treeViewByLevel(r)},_onTreeViewCreated:function(e){var n=e.findHeaderHolder(),o=e.treeModel;n.on("click.newlist",".i-role-card-sorting",function(e){var n=t(e.currentTarget);if(0===n.closest(".tau-list-level-empty").length){var r=new i(n,o);this.sort(r),this._skeletonView.toggleProgress(!0)}}.bind(this))},_updateData:function(t,n,i){var o=e.flatMap(t,function(e){return n(e).getExpansionStateForLoadData()
});if(o.length){var r={$set:{expansionState:o}};i(this._modelSettings.listSettings.apiService,r).done(function(e){var t=this._rootController._model;n(t).setSparseData(e.data)}.bind(this))}},_updateCounts:function(e){this._updateData(e,function(e){return e.countsModel},function(e,t){return e.treeViewCountsSparse(t)})},_updateQuickAdd:function(e){this._updateData(e,function(e){return e.quickAddModel},function(e,t){return e.treeViewPossibleActionsSparse(t)})},destroy:function(){}})});