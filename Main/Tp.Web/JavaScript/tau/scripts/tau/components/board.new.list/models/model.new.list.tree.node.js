define(["require","jQuery","./model.new.list.tree.base","./hierarchy.meta","./showMorePaging"],function(e){var t=e("jQuery"),i=e("./model.new.list.tree.base"),n=e("./hierarchy.meta"),a=e("./showMorePaging"),r=i.extend({_createPaging:function(){return new a(this)},_getNodeConstructor:function(){return r},resetModel:function(){this.collapse(),this.pagingModel.reset(),this.modelReset.fire()},expand:function(){var e=this._createTreeViewRequestArguments(0);return this._executeTreeDataWorkflow(function(t){return t.treeViewExpand(e)})},collapse:function(){this.nodes=null,this.pagingUpdated.empty(),this.pagingLoadingStarted.empty()},goToNextPage:function(){return this.pagingModel.hasNext?(this.pagingLoadingStarted.fire(),this._apiService.treeView(this._createTreeViewRequestArguments()).done(function(e){this.pagingModel.goToNextPage(),this._handleNewItemsLoaded(e.data.nodes,e.data.meta)}.bind(this)).fail(this._handleFailedTreeResponse.bind(this))):t.Deferred().resolve()},_handleNewItemsLoaded:function(e,t){var i=this.card?this.card.type:null,a=this._createNodeCollectionModel(e,new n(t),this.level,!1,i),r=a&&a.items&&a.items.length;if(r){var s=a.items;this.nodes.removeDuplicatesWith(s),this.nodes.addNewItems(s)}this.pagingModel.updateWithResponseData(e),this.pagingUpdated.fire(),this.countsModel.loadData()},getCardId:function(){return this.card?this.card.getId():null},getCardType:function(){return this.card?this.card.getEntityType():null},_createTreeViewRequestArguments:function(){var e=this.hierarchy.getPath();return{$skip:this.pagingModel.getSkip(),$take:this.pagingModel.getTake(),$set:{path:e}}}});return r});