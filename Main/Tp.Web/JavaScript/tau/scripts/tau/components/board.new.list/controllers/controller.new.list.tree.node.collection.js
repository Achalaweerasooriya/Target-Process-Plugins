define(["jQuery","Underscore","tau/core/controller.base","tau/components/board.new.list/controllers/controller.new.list.paging"],function(e,t,i,d){var n=i.extend({init:function(e,t,i,d,n,o,a){this._model=e,this._treeModel=i,this._view=t,this._eventAggregator=d,this._quickAddComponentBuilder=n,this._configurator=o,this._modelSettings=a,this._initSubscriptions(this._model,this._view)},_initSubscriptions:function(e,i){e.applyAndObserve(function(i){i.nodeCollectionCreated.add(function(){this._addChildCollectionController(i)}.bind(this)),e.canExpandCard(i.card.type)&&i.nodeCollectionCreated.once(function(){var e=t.range(i.level+1,i.hierarchyMetaInfo.totalLevelCount);this._view.skeleton.calculateColumnWidthsForMultipleLevels(e,!0)},this),i.modelReset.add(function(){this._view.removeChildTreeNodeView(i.card.id),this._view.updateHeaderExpansionState()}.bind(this))}.bind(this)),e.duplicateNodesRemoved.add(function(e){this._view.removeCardsSilent(e)}.bind(this)),e.nodesAdded.add(function(e){i.appendNodes(e)}),e.cardUpdated.add(function(e){i.updateCard(e)}),e.cardDeleted.add(function(e){i.removeCard(e.card,e.deleteSilently),this._eventAggregator.cardRemoved.fire(e)}.bind(this)),e.cardMoved.add(function(e){i.moveCard(e.card,e.index)}),e.cardAdded.add(function(t){i.addCard(e,t.card,t.index)}),e.cardAdded.once(function(){i.calculateColumnWidths()}),i.expansionStateToggled.add(this._onExpansionStateToggled,this),i.collapseAllClicked.add(this._onCollapseAllClicked,this),i.openCardDetailsClicked.add(this._onOpenCardDetailsClicked,this)},startLifeCycle:function(){return this._view.renderTree().then(this._onNodeExpanded.bind(this,{node:this._treeModel})).then(this._initChildControllers.bind(this)).then(function(){var e=!this._modelSettings.listSettings.options.disableRootPaging;if(e){var t=new d(this._view.createPagingView(),this._treeModel,this._configurator);this._addChildDestroyable(t),t.startLifeCycle()}this._view.createCountsView(this._treeModel.countsModel),this._view.createQuickAddView(this._treeModel.quickAddModel),this._view.quickAddView.showQuickAddClicked.add(this._onShowQuickAddClicked.bind(this))
}.bind(this))},_initChildControllers:function(){var i=t.reduce(this._model.items,function(e,t){return t.getIsExpanded()&&e.push(this._addChildCollectionController(t)),e},[],this);return e.when.all(i)},_onOpenCardDetailsClicked:function(e){this._eventAggregator.entityDetailsViewRequested.fire(e)},_onShowQuickAddClicked:function(e){this._quickAddComponentBuilder.createQuickAddComponent(e.target,this._treeModel)},_onExpansionStateToggled:function(e){var t,i,d=this._treeModel.hierarchy.findChildByCardId(e);d.getIsExpanded()?(t=this._collapseNode,i="collapse"):(t=this._expandNode,i="expand"),t.call(this,d),taus.track({action:i,cardType:d.card.type,tags:["newlist"]})},_expandNode:function(e){var i=function(t){t.isLoading||e.loadingStatusChanged.remove(i),this._view.toggleNodeExpansionProgress(e.card.id,t.isLoading)}.bind(this);e.loadingStatusChanged.add(i);var d=t.uniqueId("statistics_newlist_expand");taus.start("statistics_newlist_expand",{},d),e.expand().then(function(){taus.stop(d,{cardType:e.card.type,cardsCount:e.getCardsCount(),levelType:e.parent.hierarchyMetaInfo.levelType})}.bind(this)).then(function(){this._treeModel.getRoot().updateExpansionState()}.bind(this))},_onCollapseAllClicked:function(){var e=t.filter(this._model.items,function(e){return e.getIsExpanded()});t.each(e,this._collapseNode,this),taus.track({action:"collapseAll",tags:["newlist"]})},_collapseNode:function(e){this.removeNode(e),this._modelSettings.listSettings.apiService.treeViewCollapse({$set:{path:e.hierarchy.getPath()}}),this._treeModel.getRoot().updateExpansionState()},removeNode:function(e){e.collapse(),e.pagingModel.reset(),this._view.removeChildTreeNodeView(e.card.id),this._view.updateHeaderExpansionState()},_onNodeExpanded:function(e){e.node.card&&this._view.parentView.setExpandedStateForCardId(e.node.card.id),this._view.parentView&&this._view.parentView.updateHeaderExpansionState()},_addChildCollectionController:function(e){var t=new n(e.nodes,this._view.createTreeView(e.nodes),e,this._eventAggregator,this._quickAddComponentBuilder,this._configurator,this._modelSettings);
return t.startLifeCycle()}});return n});