define(["Underscore","./node.modification.strategies"],function(e,t){return{tryDispatchOperations:function(t,n){if(!n)return!1;var r=e.flatMap(n,function(n){if(n.shouldBePropagated){var r=t.hierarchy.getAllNodesAtLevel(n.level);return e.map(r,function(t){var r=e.deepClone(n);return r.path=t.hierarchy.getPath(),r})}return[n]}),a=e.groupBy(r,e.property("name"));return e.reduce(a,function(e,n,r){return this._executeOperations(t,n,r)||e},!1,this)},_executeOperations:function(e,t,n){var r={added:this._onAdded,updated:this._onUpdated,deleted:this._onDeleted,notinslice:this._onNotInSlice},a=r[n];return a?(a.call(this,e,t),!0):!1},_onAdded:function(n,r){e.each(r,function(e){var r=n.hierarchy.findNodeByPath(e.path);r&&t.comet.addCard(r,e.card)})},_onUpdated:function(n,r){var a=e.groupBy(r,e.property("level"));e.each(a,function(r,a){a=parseFloat(a);var d=e.chain(r).pluck("card").uniq(function(e){return e.id+";"+e.type}).value(),i=e.flatMap(d,function(e){return this._getNodesAtLevel(n,a,e)},this),o=e.map(r,function(e){return{dataItem:e.card,path:e.path}});n.applyCardsChanges(t.comet,i,{data:o})},this)},_onDeleted:function(t,n){e.each(n,function(e){t.deleteDescendantsByCardIdAndType(e.card.id,e.card.type)})},_onNotInSlice:function(t,n){e.each(n,function(n){var r=this._getNodesAtLevel(t,n.level,n.card);e.each(r,function(e){e.parent.nodes.deleteCard(e.card)})},this)},_getNodesAtLevel:function(t,n,r){var a=t.hierarchy.findAllDescendantNodesByCardIdAndType(r.id,r.type);return e.filter(a,function(e){return e.level===n})}}});