define(["require","Underscore","tau/core/class","./node.modification.strategies"],function(e){var t=e("Underscore"),n=e("tau/core/class"),r=e("./node.modification.strategies");return n.extend({tryDispatchOperations:function(e,n){if(!n)return!1;var r=t.flatMap(n,function(n){if(n.shouldBePropagated){var r=e.hierarchy.getAllNodesAtLevel(n.level);return t.map(r,function(e){var r=t.deepClone(n);return r.path=e.hierarchy.getPath(),r})}return[n]}),a=t.groupBy(r,t.property("name"));return t.reduce(a,function(t,n,r){return this._executeOperations(e,n,r)||t},!1,this)},_executeOperations:function(e,t,n){var r={added:this._onAdded,updated:this._onUpdated,deleted:this._onDeleted,notinslice:this._onNotInSlice},a=r[n];return a?(a.call(this,e,t),!0):!1},_onAdded:function(e,n){t.each(n,function(t){var n=e.hierarchy.findNodeByPath(t.path);n&&r.comet.addCardForNewEntity(n,t.card)})},_onUpdated:function(e,n){var a=t.groupBy(n,t.property("level"));t.each(a,function(n,a){a=parseFloat(a);var d=t.chain(n).pluck("card").uniq(function(e){return e.id+";"+e.type}).value(),i=t.flatMap(d,function(t){return this._getNodesAtLevel(e,a,t)},this),o=t.map(n,function(e){return{dataItem:e.card,path:e.path}});e.applyCardsChanges(r.comet,i,{data:o})},this)},_onDeleted:function(e,n){t.each(n,function(t){e.deleteDescendantsByCardIdAndType(t.card.id,t.card.type)})},_onNotInSlice:function(e,n){t.each(n,function(n){var r=this._getNodesAtLevel(e,n.level,n.card);t.each(r,function(e){e.parent.nodes.deleteCard(e.card)})},this)},_getNodesAtLevel:function(e,n,r){var a=e.hierarchy.findAllDescendantNodesByCardIdAndType(r.id,r.type);return t.filter(a,function(e){return e.level===n})}})});