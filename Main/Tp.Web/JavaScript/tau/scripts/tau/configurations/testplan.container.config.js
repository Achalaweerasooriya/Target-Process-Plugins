define(["require","tau/configurations/baseAssignable.container.config","tau/components/extensions/testCaseList/extensions.testCaseList.labelRefresher","tau/ui/extensions/list/testplan/extension.list.editableCells","tau/models/dataProviders/testplan/testplan.model.provider.testplanruns.items","tau/models/dataProviders/testplan/testplan.model.provider.testplanruns.groups","tau/ui/extensions/list/testplan/extension.list.testplanruns.refresher","tau/models/dataProviders/testplan/testplan.model.provider.testcases.items","tau/ui/extensions/list/testcases/extension.list.testcases.actions","tau/ui/templates/list_/grid.entity.testcase/ui.template.list.grid.entity.testcase","tau/components/board.new.list/views/sortingBehavior","tau/components/board.new.list/views/resizableBehavior","tau/components/board.new.list/storeListenerBehavior","tau/components/board.new.list/views/contextMenuBehavior","tau/components/board.new.list/views/unitEditorBehavior"],function(e){var t=e("tau/configurations/baseAssignable.container.config"),s=e("tau/components/extensions/testCaseList/extensions.testCaseList.labelRefresher"),a=e("tau/ui/extensions/list/testplan/extension.list.editableCells"),n=e("tau/models/dataProviders/testplan/testplan.model.provider.testplanruns.items"),i=e("tau/models/dataProviders/testplan/testplan.model.provider.testplanruns.groups"),r=e("tau/ui/extensions/list/testplan/extension.list.testplanruns.refresher"),l=e("tau/models/dataProviders/testplan/testplan.model.provider.testcases.items"),o=e("tau/ui/extensions/list/testcases/extension.list.testcases.actions"),d=e("tau/ui/templates/list_/grid.entity.testcase/ui.template.list.grid.entity.testcase"),p=e("tau/components/board.new.list/views/sortingBehavior"),c=e("tau/components/board.new.list/views/resizableBehavior"),u=e("tau/components/board.new.list/storeListenerBehavior"),m=e("tau/components/board.new.list/views/contextMenuBehavior"),y=e("tau/components/board.new.list/views/unitEditorBehavior");return t.extend({init:function(e){this._super(e);
var t=e.context.entity,g=e.context.configurator.getUrlBuilder();this.registerAction("Assign Test Cases",{disabledIf:{isBoard:!0},label:"Assign "+this.getTermName("TestCase"),url:g.getAssignTestCasesForTestPlanUrl(t.id),practices:["Test Cases"]}),this.registerAdditionalInfoItem("Test Plan Initial Estimate",{label:{text:"Run Estimate"},field:{type:"property.planInitialEstimate",effortPoint:{shortName:"h",name:"Hour"}},practices:["Planning"]}),this.registerAdditionalInfoItem("Linked Entity",{enabledIf:{feature:"linked.test.plan",isBoard:!0},label:{text:"Linked Entity"},field:{type:"property.linkedEntity"},practices:["Test Cases"]}),this.registerTab("Test Cases",{disabledIf:{isBoard:!0},label:"testcases",header:[{type:"label",text:this.getNames("testCase"),countFieldNames:["testCases"],extensions:[s],lazy:!0}],items:[{type:"container",spinnerConfigForLazy:this.getSpinnerConfigForLazy(),practices:["Test Cases"],children:[{type:"container",lazy:!0,name:"lazyPlaceholder container",practices:["Test Cases"],children:[{practices:["Test Cases"],type:"quick.add",printable:!1,property:"testPlan",onBeforeAdd:function(e){var t=e.$set;e.fields=["id","name",{testPlans:["id","testCases-count"]}];var s=t.testPlan;delete t.testPlan,t.testPlans=[s]},entityType:"testCase",evictProperties:["testCases","testCases-count"],label:"Add "+this.getNames("testcase")},{type:"list.editable",itemsDataProvider:l,multiprojects:!0,practices:["Test Cases"],views:[{type:"grid.entity.testcase",rowTemplateName:"list-grid-entity__rowtestcase",emptyMessage:"No test cases found"}],template:d,externalRefreshEvents:["testCase.items.added"],extensions:[o],labelAdd:"Assign"}]}]}],practices:["Test Cases"]}),this.registerTab("Tests",{enabledIf:{isBoard:!0},label:"testCases",header:[{type:"label.testHierarchy",text:"Tests"}],items:[{name:"TestCases",type:"testPlan.testItems",lazy:!0,spinnerConfigForLazy:this.getSpinnerConfigForLazy(),helper:this.helper}]}),this.registerTab("Test Plan Runs",{disabledIf:{isBoard:!0},label:"testPlanRuns",header:[{type:"label",text:this.getNames("testPlanRun"),countFieldNames:["testPlanRuns"],lazy:!0}],items:[{type:"container",spinnerConfigForLazy:this.getSpinnerConfigForLazy(),practices:["Test Cases"],children:[{type:"container",lazy:!0,practices:["Test Cases"],name:"lazyPlaceholder container",children:[{type:"quick.add",printable:!1,property:"testPlan",entityType:"testPlanRun",evictProperties:["testPlanRuns-count"],label:"Add "+this.getNames("TestPlanRun")},{type:"list.editable",itemsDataProvider:n,externalRefreshEvents:["testPlanRun.items.added"],groupsDataProvider:i,groupBy:"entityState.name",multiprojects:!0,views:[{rowTemplateName:"list-grid-entity__rowtestplanrun",type:"grid.entity",group:{dataIndex:"name"}}],extensions:[a,r]}]}]}],practices:["Test Cases"]}),this.registerTab("Runs",{enabledIf:{isBoard:!0},label:"testPlanRuns",header:[{type:"label",text:"Test Plan Runs",countFieldNames:["TestPlanRuns"],lazy:!0}],items:[{name:this.getNames("testPlanRun"),type:"entity.new.list",definition:{cells:{types:["testplanrun"],ordering:{name:"StateCreateDate",direction:"Desc"}},cardSettings:{list_testplanrun:{list:[[{id:"testitemrun_name",order:0},{id:"general_entity_id",order:1},{id:"tpr_run_action",order:2},{id:"tcrtpr_last_status",order:3},{id:"bugs",order:4},{id:"entity_assignments",order:5},{id:"entity_state",order:6},{id:"tcrtpr_run_daterange",order:7},{id:"release_long",order:8},{id:"iteration_long",order:9},{id:"team_iteration_long",order:10}]]}}},behaviors:[p,c,u,m,y],listOptions:{addStrategy:"head"},lazy:!0,spinnerConfigForLazy:this.getSpinnerConfigForLazy(),helper:this.helper}],practices:["Test Cases"]}),this.registerTab("Parent Plans",{enabledIf:{feature:"qa.area.hierarchy",isBoard:!0},label:"parentPlans",header:[{type:"label",text:"Parent Plans",countFieldNames:["parentTestPlans"],lazy:!0}],items:[{name:"TestPlans",type:"testItem.parentTestPlans",definition:{x:"testplanparentplans"},lazy:!0,spinnerConfigForLazy:this.getSpinnerConfigForLazy(),helper:this.helper}]}),this.registerPanel("Run",{enabledIf:{isBoard:!0},type:"panel.testPlan.run",practices:["Test Cases"]})
},getTabsAliases:function(){return["Description","Tests","Test Cases","Test Plan Runs","Runs","Parent Plans","Relations","Time","Tp2 Time","Flow","History"]},getAdditionalInfoAliases:function(){return["Project","Team","Linked Entity","Owner","Business Value","Test Plan Initial Estimate","CreationDate","StartDate","CompletionDate","PlannedStartDate","PlannedEndDate"]},getActionsAliases:function(){return["Copy to project","Assign Test Cases","Old Edit","Print","-----","Delete"]},getEntityQuickAddOptions:function(){var e=[{entityType:"time",relationName:"times",practices:["Time Tracking"]},{entityType:"testplanrun",relationName:"testPlanRuns",practices:["Test Cases"]},{entityType:"testcase",relationName:"testCases",practices:["Test Cases"]}];return{items:this.helper?this.helper.collection(e.concat({enabledIf:{feature:"qa.area.hierarchy"},entityType:"testplan",relationName:"testPlans",practices:["Test Cases"]})):e}},getPanelsAliases:function(){return["Diagnostic","State Selector","Progress Bar","Impediments","Run","Assignments","Additional Info","Custom Fields"]}})});