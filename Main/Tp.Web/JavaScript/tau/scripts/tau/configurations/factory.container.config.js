define(["Underscore","tau/core/class","tau/core/termProcessor","tau/models/model.extensions","tau/configurations/base.container.config","tau/configurations/baseAssignable.container.config","tau/configurations/baseContainable.container.config","tau/configurations/userStory.container.config","tau/configurations/task.container.config","tau/configurations/bug.container.config","tau/configurations/request.container.config","tau/configurations/testplanrun.container.config","tau/configurations/testcase.container.config","tau/configurations/testplan.container.config","tau/configurations/iteration.container.config","tau/configurations/teamiteration.container.config","tau/configurations/feature.container.config","tau/configurations/release.container.config","tau/configurations/build.container.config","tau/configurations/impediment.container.config","tau/configurations/project.container.config","tau/configurations/user.container.config","tau/configurations/team.container.config","tau/configurations/board.container.config","tau/configurations/converters/converter.context"],function(_,Class,TermProcessor,modelExtensions,baseConfig,assignableConfig,containableConfig,storyConfig,taskConfig,bugConfig,requestConfig,testplanrunConfig,testcaseConfig,testplanConfig,iterationConfig,teamiterationConfig,featureConfig,releaseConfig,buildConfig,impedimentConfig,projectConfig,userConfig,teamConfig,boardConfig,contextConverter){var ContextBasedConfigObjectWrapper=Class.extend({init:function(originalConfigObject,appConfig){this.originalConfigObject=originalConfigObject,this.appConfig=appConfig,this.practices=[],this.editions=[];var context=this.appConfig.context;context&&(this.practices=_(context.getPractices()).pluck("name")),context&&(this.editions=context.getEdition())},getConfig:function(){var config=this.originalConfigObject.getConfig(this.appConfig);return contextConverter.convert(config,this.practices,this.editions)},getActions:function(){var actions=this.originalConfigObject.getActions(this.appConfig.context.applicationContext);return contextConverter.convert(actions,this.practices,this.editions)}}),Factory=Class.extend({init:function(){this.configs={base:baseConfig,userstory:storyConfig,task:taskConfig,bug:bugConfig,request:requestConfig,testplanrun:testplanrunConfig,testcase:testcaseConfig,testplan:testplanConfig,iteration:iterationConfig,teamiteration:teamiterationConfig,feature:featureConfig,release:releaseConfig,build:buildConfig,impediment:impedimentConfig,project:projectConfig,user:userConfig,team:teamConfig,board:boardConfig}},getConfig:function(appConfig){var entityType=appConfig.context.entity.entityType.name.toLowerCase(),entityConfig=this.configs[entityType]?this.configs[entityType]:this.configs.base,configObj=new entityConfig(appConfig),config=configObj.getConfig(appConfig);return config},getContextBasedConfigObject:function(appConfig){var entityType=appConfig.context.entity.entityType.name.toLowerCase(),entityConfig=this.configs[entityType]?this.configs[entityType]:this.configs.base,entityConfigObject=new entityConfig(appConfig);return new ContextBasedConfigObjectWrapper(entityConfigObject,appConfig)},getConfigByType:function(entityType){var type=entityType.toLowerCase(),ConfigClass=this.configs[type];if(!ConfigClass)throw new Error('No config for type "'+type+'"');return ConfigClass}});return new Factory})