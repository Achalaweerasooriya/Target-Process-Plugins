define(["Underscore","tau/core/class","tau/core/termProcessor","tau/models/model.extensions","tau/configurations/base.container.config","tau/configurations/baseAssignable.container.config","tau/configurations/baseContainable.container.config","tau/configurations/userStory.container.config","tau/configurations/task.container.config","tau/configurations/bug.container.config","tau/configurations/request.container.config","tau/configurations/testplanrun.container.config","tau/configurations/testcase.container.config","tau/configurations/testcaserun.container.config","tau/configurations/testplan.container.config","tau/configurations/iteration.container.config","tau/configurations/teamiteration.container.config","tau/configurations/feature.container.config","tau/configurations/release.container.config","tau/configurations/build.container.config","tau/configurations/impediment.container.config","tau/configurations/project.container.config","tau/configurations/user.container.config","tau/configurations/team.container.config","tau/configurations/board.container.config","tau/configurations/converters/converter.context"],function(n,t,i,o,e,a,c,r,s,g,f,u,p,h,C,b,d,l,m,v,y,x,w,j,O,k){var A=t.extend({init:function(t,i){this.originalConfigObject=t,this.appConfig=i,this.practices=[],this.editions=[];var o=this.appConfig.context;o&&(this.practices=n(o.getPractices()).pluck("name")),o&&(this.editions=o.getEdition())},getConfig:function(){var n=this.originalConfigObject.getConfig(this.appConfig);return k.convert(n,this.practices,this.editions)},getActions:function(){var n=this.originalConfigObject.getActions(this.appConfig.context.applicationContext);return k.convert(n,this.practices,this.editions)}}),L=t.extend({init:function(){this.configs={base:e,userstory:r,task:s,bug:g,request:f,testplanrun:u,testcase:p,testplan:C,iteration:b,teamiteration:d,feature:l,release:m,build:v,impediment:y,project:x,user:w,team:j,testcaserun:h,board:O}},getConfig:function(n){var t=n.context.entity.entityType.name.toLowerCase(),i=this.configs[t]?this.configs[t]:this.configs.base,o=new i(n),e=o.getConfig(n);return e},getContextBasedConfigObject:function(n){var t=n.context.entity.entityType.name.toLowerCase(),i=this.configs[t]?this.configs[t]:this.configs.base,o=new i(n);return new A(o,n)},getConfigByType:function(n){var t=n.toLowerCase(),i=this.configs[t];if(!i)throw new Error('No config for type "'+t+'"');return i}});return new L});