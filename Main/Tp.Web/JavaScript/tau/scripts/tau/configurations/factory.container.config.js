define(["Underscore","tau/core/class","tau/configurations/base.container.config","tau/configurations/userStory.container.config","tau/configurations/task.container.config","tau/configurations/bug.container.config","tau/configurations/request.container.config","tau/configurations/testplanrun.container.config","tau/configurations/testcase.container.config","tau/configurations/testcaserun.container.config","tau/configurations/testplan.container.config","tau/configurations/iteration.container.config","tau/configurations/teamiteration.container.config","tau/configurations/feature.container.config","tau/configurations/release.container.config","tau/configurations/build.container.config","tau/configurations/impediment.container.config","tau/configurations/project.container.config","tau/configurations/user.container.config","tau/configurations/team.container.config","tau/configurations/program.container.config","tau/configurations/epic.container.config","tau/configurations/requester.container.config","tau/configurations/converters/converter.context"],function(t,n,i,o,e,r,a,c,s,g,u,f,p,h,C,d,b,l,m,v,y,j,x,O){var w=n.extend({init:function(n,i){this.originalConfigObject=n,this.appConfig=i,this.practices=[],this.editions=[];var o=this.appConfig.context;o&&(this.practices=t.pluck(o.getPractices(),"name"),this.editions=o.getEdition())},getConfig:function(){var t=this.originalConfigObject.getConfig(this.appConfig);return O.convert(t,this.practices,this.editions)},_renderActions:function(){var t=this.originalConfigObject._renderActions(this.appConfig.context.applicationContext);return O.convert(t,this.practices,this.editions)}}),E=n.extend({init:function(){this.configs={base:i,userstory:o,task:e,bug:r,request:a,testplanrun:c,testcase:s,testplan:u,iteration:f,teamiteration:p,feature:h,epic:j,release:C,build:d,impediment:b,project:l,user:m,requester:x,team:v,program:y,testcaserun:g}},_getConfig:function(t){return t=t.toLowerCase(),this.configs[t]},getConfig:function(t){var n=this.getEntityConfigObject(t);
return n.getConfig(t)},getContextBasedConfigObject:function(t){var n=this.getEntityConfigObject(t);return new w(n,t)},getEntityConfigObject:function(t){var n=this._getConfig(t.context.entity.entityType.name)||this.configs.base;return new n(t)},getConfigByType:function(t){var n=this._getConfig(t);if(!n)throw new Error('No config for type "'+t+'"');return n}});return new E});