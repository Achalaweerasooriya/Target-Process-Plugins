define(["Underscore","tau/core/class","tau/rules/auto-include-beforeSave"],function(e,n,t){return n.extend({init:function(n){var r=this;r.store=n.store||{},n.rulesImpl=n.rulesImpl||{},e.extend(r,t),e.extend(r,{name:"rules engine"}),e(n.rulesImpl).each(function(n){e.extend(r,n)}),r.register(n.rules||[])},register:function(n){var r=this;e.isArray(n)||(n=[n]),e(n).each(function(n){if(e.defaults(n,{name:e(t).keys()[0],fields:[],changes:[]}),!n.hasOwnProperty("type"))throw"type should be configured for rule";0!==n.fields.length&&e.each(n.changes,function(e){var t=function(e){r[n.name](e,n)},s=n.name.split(" ");r.store.on({eventName:s[s.length-1],type:n.type,listener:r,hasChanges:[e]},t)})})},registerRule:function(n){var t=this;if(e.defaults(n,{fields:[],changes:[]}),!n.hasOwnProperty("name"))throw'"name" field should be configured for rule';if(!n.hasOwnProperty("type"))throw'"type" field should be configured for rule';if(!t.hasOwnProperty(n.name))throw"unknown rule name ["+n.name+"]";t[n.name].call(t,n)},destroy:function(){var e=this.store;delete this.store,e.unbind(this)}})});