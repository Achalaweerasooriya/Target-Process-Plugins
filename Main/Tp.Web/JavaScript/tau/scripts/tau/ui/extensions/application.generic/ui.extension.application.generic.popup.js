define(["jQuery","tau/components/extensions/component.extension.base"],function($,ExtensionBase){return ExtensionBase.extend({"bus options.ready + beforeInit":function(e,options){var $popup=$("<div></div>");$popup.tauPopup(),options.integration.cssClass&&$popup.tauPopup("widget").addClass(options.integration.cssClass),$popup.on("taupopuphide",_.bind(function(){options.integration.keepAlive?this.fire("application.exit"):this.fire("destroy")},this)),this.fire("$popup.ready",$popup)},"bus $popup.ready > contentRendered":function(evt,$popup,data){this.fire("popup.open",data)},"bus popup.close > contentRendered":function(evt,d,data){this.fire("popup.open",data)},"bus configurator.ready:last + $popup.ready:last + popup.open":function(e,configurator,$popup,contentData){var $el=contentData.element;$el.addClass("ui-popup-content"),$popup.tauPopup("show"),configurator.getKeyBoardManager().pushHandler({handleKeyDown:function(e){e.keyCode==$.ui.keyCode.ESCAPE&&$popup.tauPopup("hide")}}),$el.hasClass("tau-page-entity")&&$popup.tauPopup("widget").addClass("tau-page-entity"),$popup.tauPopup("widget").append($el),this.fire("view.dom.ready",$("body"))},"bus application.exit":function(){this.fire("popup.close")},"bus configurator.ready:last + $popup.ready:last + popup.close":function(e,configurator,$popup){$popup.tauPopup("widget").is(":visible")&&($popup.tauPopup("hide"),configurator.getKeyBoardManager().popHandler())},"bus $popup.ready > destroy":function(e,$popup){$popup.tauPopup("destroy")}})})