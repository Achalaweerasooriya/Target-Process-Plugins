define(["Underscore","jQuery","tau/core/extension.base"],function(_,$,ExtensionBase){return ExtensionBase.extend({"bus $sections.ready":function(evt,$sections){$sections.each(function(){var $section=$(this),$chAll=$section.find("header :checkbox");$chAll.on("change",function(){$section.find(".i-role-list .i-role-item:visible :checkbox").prop("checked",$chAll.prop("checked"))});var _sync=function(){var $allCh=$section.find(".i-role-list .i-role-item:visible"),$nonCh=$allCh.find(":checkbox").not(":checked");$chAll.prop("checked",$nonCh.length==0&&$allCh.length)};$section.on("change",".i-role-list .i-role-item",_sync),$section.on("synccheckboxes",_sync)})},"bus $sections.ready:last + filter.completed":function(evt,$sections){$sections.trigger("synccheckboxes")},"bus $sections.ready:last + team.add.completed":function(evt,$sections){$sections.trigger("synccheckboxes")},"bus $sections.ready:last + project.add.completed":function(evt,$sections){$sections.trigger("synccheckboxes")},"bus $sections.ready:last + $popup.shown":function(evt,$sections){$sections.trigger("synccheckboxes")},"bus $sections.changed":function(e,changedData){var checkSelected=function(optionsList,data){var changes={};_.each(data,function(item){changes[item.id]=item.selected}),_.each(optionsList.find(".i-role-item :checkbox"),function(checkbox){var $checkbox=$(checkbox),id=$checkbox.val(),currentStatus=$checkbox.prop("checked"),desiredStatus=changes[id];currentStatus!==desiredStatus&&$checkbox.prop("checked",desiredStatus)})};checkSelected(changedData.projects.$optionsList,changedData.projects.data),checkSelected(changedData.teams.$optionsList,changedData.teams.data)}})})