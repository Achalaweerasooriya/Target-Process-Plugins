define(["Underscore","jQuery","tau/components/extensions/component.extension.base"],function(n,t,e){return e.extend({category:"edit",destroy:function(){this.destroyDynamicComponents(),this._super()},lifeCycleCleanUp:function(){this.destroyDynamicComponents(),this._super()},destroyDynamicComponents:function(){this.commentNewEditorComponent&&(this.commentNewEditorComponent.destroy(),delete this.commentNewEditorComponent)},"bus initialize":function(n){this.config=n.data},"bus afterRender + permissionsReady + dataBind":function(n,t,e,i){this.element=t.element,this.data=i,this.initializeAddCommentLink()},initializeAddCommentLink:function(){this.$addLink=t("<span class='ui-comments-add-link i-role-actionadd'>Add Comment</span>").click(t.proxy(this.addNewComment,this)).insertAfter(this.element.find(".ui-all-comments"))},onCloseEditor:function(){this.$addLink.show()},addNewComment:function(){this.$addLink.hide();var t={components:[{name:"comment.add",type:"comment.add"}],context:this.config.context};this.createComponents(t,n.bind(function(t){var e=this.commentNewEditorComponent=t[0].component;e.on("afterRender",n.bind(function(n,t){t.element.insertAfter(this.$addLink)},this)),e.on("$editor.ready",n.bind(function(n,t){this.fire("comment.add.$editor.ready",t)},this)),e.on("destroy",n.bind(this.onCloseEditor,this)),e.initialize()},this))}})});