define(["Underscore","jQuery","tau/components/extensions/component.extension.base","tau/ui/behaviour/common/ui.behaviour.richeditor"],function(_,$,ExtensionBase){var addCommentExtension=ExtensionBase.extend({category:"edit",destroy:function(){var self=this;self.destroyDynamicComponents(),self._super()},lifeCycleCleanUp:function(){var self=this;self.destroyDynamicComponents(),self._super()},destroyDynamicComponents:function(){var self=this;self.commentNewEditorComponent&&(self.commentNewEditorComponent.destroy(),delete self.commentNewEditorComponent)},"bus initialize":function(evtArgs){this.config=evtArgs.data},"bus afterRender+permissionsReady+dataBind":function(evtArgs){this.element=evtArgs.afterRender.data.element;var permissions=evtArgs.permissionsReady.data;this.data=evtArgs.dataBind.data,this.initializeAddCommentLink()},initializeAddCommentLink:function(){this.$addLink=$("<span class='ui-comments-add-link'>Add Comment</span>").click($.proxy(this.addNewComment,this)).insertAfter(this.element.find(".ui-all-comments"))},onCloseEditor:function(evt){this.$addLink.show()},addNewComment:function(){var self=this;self.$addLink.hide();var componentsConfig={components:[{type:"comment.new.editor"}],context:self.config.context};self.createComponents(componentsConfig,function(data){var component=self.commentNewEditorComponent=data[0].component;component.on("afterRender",function(evt){var $newComment=evt.data.element;$newComment.insertAfter(self.$addLink)}),component.on("destroy",$.proxy(self.onCloseEditor,self)),component.initialize()})}});return addCommentExtension})