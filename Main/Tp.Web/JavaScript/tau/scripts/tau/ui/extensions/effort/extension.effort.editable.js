define(["tau/components/extensions/component.extension.base","tau/ui/templates/assignmentsList/ui.template.assignments.effortsOnly","tau/ui/behaviour/common/ui.behaviour.editableText"],function(e,t){return e.extend({category:"edit",normalizeEffort:function(e){return Math.abs(Math.round(100*parseFloat(e))/100)||0},"bus afterRender+beforeChangeProperty":function(e){var t=e.afterRender.data.element;this.fire("markElementToBeUpdated",{element:t})},"bus propertyChanged":function(){this.fire("refresh")},"bus refresh+afterRender":function(e){var t=e.afterRender.data.element;this.fire("updateElement",{element:t})},hasEffortIterator:function(e){return e.role.hasEffort},"bus permissionsReady+dataBind+afterRender":function(e){var n=this,r=e.permissionsReady.data,a=e.dataBind.data;if(r.editable){var i=_(a.roleEfforts).chain().select(n.hasEffortIterator).size().value();r.editMode="disabled",i&&(r.editMode=1===i&&0==n.config.entitiesCount?"inline":"roleEfforts");var o=e.afterRender.data.element,f=o.find(".entity-effort");if("inline"===r.editMode)f.editableText({mask:/^\d*\.?\d*$/,restoreText:!0,onSave:function(e){var t=n.normalizeEffort(e),r=_(a.roleEfforts).detect(n.hasEffortIterator),i={typeName:"roleEffort",id:r.id,$set:{effort:t}};n.bus.fire("save",i)},onEditStart:function(){n._$additionalInfo=f.find(".entity-effort-info").detach()},onEditEnd:function(){n._$additionalInfo.appendTo(f)}});else if("roleEfforts"===r.editMode){var s={components:[{type:"assignmentsList",template:t}],context:n.config.context},d={target:f,componentsConfig:s};n.fire("initBubble",d)}}}})});