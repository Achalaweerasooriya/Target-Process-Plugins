define(["jQuery","tau/components/extensions/component.extension.base","tau/ui/extensions/board.plus/ui.board.plus.layout","tau/ui/extensions/board.plus/ui.board.plus.decorator.columns-resize"],function($,ExtensionBase,BoardLayout,ColumnResizeDecorator){return ExtensionBase.extend({resetLifecycle:!0,updateFixedColumnSize:function(bsApi,params,callback){bsApi.get({fields:["columnSizes"],callback:function(r){_.defaults(r,{columnSizes:{}}),r.columnSizes[params.x]=params.size,callback({col:params.x,size:params.size}),bsApi.set({set:{columnSizes:r.columnSizes}})}})},applyColumnResizeDecorator:function($node,boardLayout,boardSettings,bsApi){var self=this,decoratorInstance=ColumnResizeDecorator($node,{isAvailable:function(){var zl=boardLayout.getCurrentZoomLevel();return zl>1&&zl<6&&boardLayout.getColumnsCount()>1},resolveColumnSize:function(columnId){return boardLayout.resolveColumnSize(columnId)},onResize:function(params){var size=this.resolveColumnSize(params.x),t=params.type;t==="+"&&++size,t==="-"&&--size,params.size=size,self.updateFixedColumnSize(bsApi,params,function(p){var d={};d[p.col]=p.size,boardLayout.setFixedColumnSize(d)})}});return bsApi.bind({fields:["columnSizes"],listener:self,callback:function(r){self.triggerResize({})}}),decoratorInstance},"bus start.lifecycle + boardSettings.ready + overview.board.ready + view.dom.ready":function(evt,init,bs,overview,domReady){var self=this,boardSettings=this.boardSettings=bs.boardSettings,$el=overview.element,r=parseFloat($el.css("fontSize")),px=this.px=function(em){var base=Math.round(r);return em*base},padding=px(.5),boardLayout=new BoardLayout;boardSettings.get({fields:["focus","zoomLevel","cells","columnSizes"],callback:function(res){var focus=res.focus||{},isInFocusMode=focus.x&&focus.x.length>0,columnSizes=isInFocusMode?{}:res.columnSizes,useFixedColumnSizes=!isInFocusMode&&self.IsApplyFixedColumnSizes(res.zoomLevel);boardLayout.setConfig({useFixedColumnSizes:useFixedColumnSizes,columnSizes:columnSizes,sizes:self._getSizes(px,res.cells.types),padding:padding,scrollY:!1}),boardLayout.setElement($el),boardLayout.setCurrentZoomLevel(res.zoomLevel),isInFocusMode||self.applyColumnResizeDecorator($el,boardLayout,res,boardSettings),self.fire("boardLayout.ready",boardLayout)}})},IsApplyFixedColumnSizes:function(zoomLevel){var r=zoomLevel>1&&zoomLevel<6;return r},triggerResize:function(args){this.fire("resize.executed",args)},"bus boardLayout.ready:last + overview.board.ready":function(evt,boardLayout,renderData){var $el=renderData.element,self=this;boardLayout.setElement($el),self.triggerResize({refreshElement:!0})},"bus initialize":function(evt){var configurator=evt.data.context.configurator,self=this;$(configurator.getWindow()).bind("resize.board",function(){self.triggerResize({})})},"bus boardSettings.ready":function(evt){var boardSettings=evt.data.boardSettings,self=this;boardSettings.unbind({listener:self}),boardSettings.bind({fields:["zoomLevel"],listener:this,callback:function(res){self.triggerResize({zoomLevel:res.zoomLevel})}}),boardSettings.bind({fields:["edit"],listener:this,callback:function(res){self.fire("view.edit.applied")}}),boardSettings.bind({fields:["cells"],listener:this,callback:function(res){self.fire("cells.changed")}})},"bus view.edit.applied":function(evt){var self=this;setTimeout(function(){self.triggerResize({})},1)},"bus view.card.batch.move.completed":function(){this.triggerResize({onlyHeaders:!0})},"bus view.card.batch.move":function(){this.triggerResize({onlyHeaders:!0})},"bus view.card.drag.changed":function(){this.triggerResize({onlyHeaders:!0})},"bus view.axis.collapser.executed.after":function(){this.triggerResize({refreshElement:!0})},"bus view.cell.skeleton.updated":function(e){this.triggerResize({})},"bus boardLayout.ready:last > resize.executed":function(evt,boardLayout,config){boardLayout.setSizes(this._getSizes(this.px,this.boardSettings.settings.cells.types));var self=this;_.defaults(config,{onlyHeaders:!1,refreshElement:!1,zoomLevel:boardLayout.getCurrentZoomLevel()}),boardLayout.config.useFixedColumnSizes=self.IsApplyFixedColumnSizes(config.zoomLevel),config.refreshElement&&boardLayout.refreshElement(),config.onlyHeaders?boardLayout.updateHeaders():boardLayout.updateSize(config.zoomLevel),config.onlyHeaders||(self.fire("board.size.updated",{element:boardLayout.$el}),self.fire("board.layout.updated",{element:boardLayout.$el})),self.fire("resize.completed",config),self.fire("overview.board.updated",boardLayout.$el)},"bus overview.board.ready:last+overview.board.retrieve":function(evt){var $el=_.values(evt)[0].data.element;this.fire("overview.board.retrieved",$el)},"bus boardSettings.ready:last+destroy":function(evt){var boardSettings=_.values(evt)[0].data.boardSettings;boardSettings.unbind({listener:this})},"board initialize:last+destroy":function(evt){var configurator=_.values(evt)[0].data.context.configurator;$(configurator.getWindow()).unbind("resize.board")},_getSizes:function(px,cells){var isBig=_.contains(cells,"project")||_.contains(cells,"team"),isUser=_.contains(cells,"user"),sizes={collapsed:{width:px(1.35),height:px(1.35),cardsInRowMax:3,cardsInRowMin:3},1:{width:px(1.35),height:px(1.35),cardsInRowMax:3,cardsInRowMin:3,clientColsMin:5,clientRowsMin:5},2:{width:px(6.6),height:px(1.9+.3+.3),clientColsMin:2,clientRowsMin:2},3:{width:px(6.8),height:px(3.4),clientColsMin:2,clientRowsMin:2},4:{width:px(12.3+.3),height:px(6.4),clientColsMin:2,clientRowsMin:2},5:{width:px(14.3+.3),height:px(5.9),clientColsMin:2,clientRowsMin:2},6:{width:408,height:67,clientColsMin:2,clientRowsMin:2}};return isBig&&(sizes[2]={width:px(3.3+.3),height:px(1.9+.3+.3),clientColsMin:2,clientRowsMin:2},sizes[3]={width:px(11.8625+.3),height:px(3.4),clientColsMin:2,clientRowsMin:2},sizes[4]={width:px(12.925+.3),height:px(8.25),clientColsMin:2,clientRowsMin:2},sizes[5]={width:px(20.1625),height:px(9),clientColsMin:2,clientRowsMin:2}),isUser&&(sizes[6]={width:px(14.3+.3),height:px(5.9),clientColsMin:2,clientRowsMin:2}),_.forEach(sizes,function(v){v.width=Math.ceil(v.width),v.height=Math.ceil(v.height)}),sizes}})})