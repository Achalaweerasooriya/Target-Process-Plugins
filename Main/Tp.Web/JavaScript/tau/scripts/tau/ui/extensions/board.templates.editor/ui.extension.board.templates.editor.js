define(["jQuery","tau/core/extension.base","libs/jquery/jquery.placeholder"],function($,ExtensionBase){return ExtensionBase.extend({"bus afterRender":function(evt,renderData){var $el=renderData.element;this.fire("$el.ready",$el)},"bus boardSettings.ready + $el.ready":function(evt,bs,$el){var boardSettings=bs.boardSettings,$trigger=$el.find(".i-role-formtrigger"),$form=$el.find("form"),$content=$el.find(".i-role-formholder").detach();$trigger.tauBubble({zIndex:120,content:$content,onShow:function(){$form.find(":text:first").focus(),boardSettings.get({fields:["name"],callback:_.bind(function($form,r){$form.find("[name=name]").val(_.asString(r.name))},this,$form)})}}),this.fire("$form.ready",$form),this.fire("$bubbled.ready",$trigger)},"bus $form.ready":function(evt,$form){$form.placeholder(),$form.on("submit",_.bind(function(e){e.preventDefault();var data={};$form.find(":input").each(function(){data[this.name]=this.value}),this.fire("form.submitted",data)},this))},"bus $bubbled.ready:last + $form.ready:last + form.processed":function(evt,$bubbled,$form){this.fire("notification",{message:"Board template was added"}),$bubbled.tauBubble("hide"),$form.trigger("reset")},"bus $bubbled.ready:last + $form.ready:last + form.failed":function(evt,$bubbled,$form,errors){var $inputs=$form.find(":input");$inputs.removeClass("tau-error"),_.forEach(errors,_.bind(function(text,name){$inputs.filter("[name="+name+"]").addClass("tau-error"),this.fire("error",{message:text})},this)),$inputs.filter(".tau-error:first").focus()}})})