define(["Underscore","jQuery","tau/components/extensions/component.extension.base"],function(_,$,ExtensionBase){return ExtensionBase.extend({name:"extension.list.state",initialState:{},"bus beforeInit":function(){},"bus preDataBind":function(evt){var data=evt.data,stateManager=this.stateManager=this.config.context.componentSettings||this.config.context.configurator.getStateManager(),state={};stateManager.get({id:"list",fields:["state"],callback:function(data){state=data.state||{}}});var self=this;_.forEach(data.groups,function(group){var key=_.asString(group.key);self.initialState[key]=group.collapsed,_.isUndefined(state[key])||(group.collapsed=state[key])})},"bus afterInit+afterRender":function(evt){this.$el=evt.afterRender.data.element},"bus toggled":function(evt){var $groups=this.$el.find("[role=group]"),states={},self=this;$groups.each(function(){var $group=$(this),isCollapsedNow=$group.hasClass("tau-list__group_collapsed_true"),data=$group.data("tmplItem").data,key=_.asString(data.key);!_.isUndefined(self.initialState[key])&&self.initialState[key]!==isCollapsedNow&&(states[key]=isCollapsedNow)});var stateManager=this.stateManager,configurator=this.config.context.configurator;stateManager.set({id:"list",set:{state:states},callback:function(){}})}})})