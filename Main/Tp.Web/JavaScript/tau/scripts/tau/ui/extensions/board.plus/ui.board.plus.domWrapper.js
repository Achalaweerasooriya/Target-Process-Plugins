define(["Underscore","jQuery","tau/core/class","tau/ui/extensions/board.plus/ui.board.plus.utils","tau/core/templates-factory"],function(_,$,Class,BoardPlusUtils,TemplatesFactory){var animateWithClass=function($el,className){var $defer=$.Deferred();$el.removeClass(className).addClass(className);var timeout=parseFloat($el.css("MozAnimationDuration")||$el.css("WebkitAnimationDuration")||1,10)*parseFloat($el.css("MozAnimationIterationCount")||$el.css("WebkitAnimationIterationCount")||1,10)*1e3;return _.delay(_.bind(function($d){this.removeClass(className),$d&&$d.resolve()},$el,$defer),timeout),$defer},compareOrderings=function(o1,o2){var f1=parseFloat(o1),f2=parseFloat(o2);return f1-f2},getCellPagingMore=function($cell){return $cell.siblings(".i-role-cell-paging-more")},executeAxisLineUpdate=function($queueToUpd,options){var d=$.Deferred(),animationClass=options.suspendAnimation?"":"tau-operation_axis_updated",updLen=$queueToUpd.length;for(var u=0;u<updLen;u++){var updateItem=$queueToUpd[u],$old=updateItem.$cardEx,$new=updateItem.$cardNV;$old.replaceWith($new),animateWithClass($new,animationClass)}return d.resolve(),d},executeAxisLineRemove=function($axisCells,$linesCells,options){var d=$.Deferred();if($axisCells.size()===0)d.resolve();else{var $inners=$axisCells.find("*");$inners.each(function(e){var $e=$(this);$e.removeProp("checked"),$e.prop("disabled",!0);var roles=$e.attr("class")||"",x=roles.replace(/i-role-/ig,"i-disabled-role-");$e.attr("class",x)}),getCellPagingMore($linesCells).remove(),$linesCells.find(".i-role-card").remove();var $all=$axisCells.add($linesCells);$all.each(function(){var $e=$(this),cellCssSelected=$e.attr("class")||"";cellCssSelected=cellCssSelected.replace(/i-role-(?!cell\b)/ig,"tau-disabled-role-"),$e.attr("class",cellCssSelected),$e.addClass("tau-cellaxis__removed").css("opacity",.3);var $holder=$e.parent(".i-role-cellholder"),selections=$holder.attr("class")||"",x=selections.replace(/i-role-(?!cellholder\b)/ig,"tau-disabled-role-").replace(/tau-selected/ig,"tau-disabled-selected");$holder.attr("class",x)}),d.resolve()}return d},insert$cardTo$cell=function($card,$cell,forceAppend){var result=null,cardOrdering=$card.data("orderingValue"),$more=getCellPagingMore($cell);if($more.size()>0){var maxAvailableOrdering=$more.data("nextOrderingValue");if(compareOrderings(cardOrdering,maxAvailableOrdering)>0)return forceAppend&&($card.appendTo($more),result=$card),result}var $predecessor=findPriorityPredecessor(cardOrdering,$cell);return $predecessor.before($card),result=$card,result},executeRemove=function($selection,options){var d=$.Deferred(),animationClass=options.suspendAnimation?"":"tau-operation_card_deleted";return $selection.size()===0?d.resolve():($selection.removeClass("i-role-card"),animateWithClass($selection,animationClass).done(function(){$selection.remove(),d.resolve()})),d},executeClear=function($selection,options){var d=$.Deferred();return $selection.remove(),d.resolve(),d},executeUpdate=function($queueToUpd,options){var d=$.Deferred(),animationClass=options.suspendAnimation?"":"tau-operation_card_updated",$affectedCards=[],updLen=$queueToUpd.length;for(var u=0;u<updLen;u++){var updateItem=$queueToUpd[u],$old=updateItem.$cardEx,$new=updateItem.$cardNV;$old.replaceWith($new),$affectedCards.push($new),animateWithClass($new,animationClass)}return d.resolve($affectedCards),d},executeAppend=function($queueToAdd,options){var d=$.Deferred(),animationClass=options.suspendAnimation?"":"tau-operation_card_added",$affectedCards=[],addLen=$queueToAdd.length;for(var a=0;a<addLen;a++){var addItem=$queueToAdd[a],$card=addItem.$card,$insertedCard=insert$cardTo$cell($card,addItem.$cell,options.forceAppend);$insertedCard&&$affectedCards.push($insertedCard),animateWithClass($card,animationClass)}return d.resolve($affectedCards),d},findPriorityPredecessor=function(cardOrdering,$cell){var $predecessor={before:function($c){$cell.append($c)}},$cellCards=$cell.find(".i-role-card"),size=$cellCards.size(),c=null,i=size;while(--i>=0&&(c=$cellCards.eq(i))&&compareOrderings(cardOrdering,c.data("orderingValue"))<0&&($predecessor=c));return $predecessor},replaceCardsFastMethod=function($cell,$oldCardsSelection,newCards){var method,$prev=$oldCardsSelection.first().prev();if($prev.size()>0)method=function(){$prev.after(newCards)};else{var $next=$oldCardsSelection.last().next();$next.size()>0?method=function(){$next.before(newCards)}:method=function(){$cell.append(newCards)}}$oldCardsSelection.remove(),method()},DomWrapper=Class.extend({init:function($el,configurator){this.board=$el,this.urlBuilder=configurator.getUrlBuilder(),this.templateFactory=configurator.getTemplateFactory()},decorate:function(boardDecorator,decoratorSettings){return boardDecorator(this,decoratorSettings),this},createQuickAddPanel:function(){var $quickAddPanel=$('<div class="tau-quick-add"><button class="tau-btn tau-add tau-success"></button></div>');return $quickAddPanel},compareOrderings:compareOrderings,animateWithClass:animateWithClass,isListMode:function(){var $b=this.board,isListMode=$b.children(".i-role-board-body").hasClass("tau-board-composite-view");return isListMode},getCardBySliceId:function(cardIdB64){return this.getCardBySliceIdInTarget(cardIdB64,this.board)},getCardBySliceIdInTarget:function(cardIdB64,$targetCardHolder){return $targetCardHolder.find(".i-role-card[data-id="+cardIdB64+"]")},getCellHoldersBySliceCoordinatesInTarget:function(coordinates,$targetCardHolder){var attributesSelectors=_(coordinates).map(function(val,key){return"[data-"+key+"="+val+"]"});return $targetCardHolder.find(".i-role-cellholder"+attributesSelectors.join(""))},getCellHoldersAxisLineBySliceCoordinates:function(coordinates){return this.getCellHoldersBySliceCoordinatesInTarget(coordinates,this.board)},getCellsBySliceCoordinatesInTarget:function(coordinates,$targetCardHolder){var attributesSelectors=_(coordinates).map(function(val,key){return"[data-"+key+"="+val+"]"});return $targetCardHolder.find(".i-role-cell"+attributesSelectors.join(""))},getCellsAxisLineBySliceCoordinates:function(coordinates){return this.getCellsBySliceCoordinatesInTarget(coordinates,this.board)},getAxesHeaders:function(dimension){var $headers;return arguments.length===0?$headers=this.board.find(".i-role-header"):$headers=this.board.find(".i-role-header[data-dimension="+dimension+"]"),$headers},appendCount:function($header,title,counts){var $countElement=$('<div class="tau-axiscell__item tau-cards-count" title="'+title+'"><span>'+counts+"</span></div>");return $header.append($countElement),$countElement},updateAxisCellMetaInfo:function($axisCell,countObj,$cellsAxisLine){var $counter=$axisCell.children(".tau-cards-count"),cellHolder=$cellsAxisLine.closest(".i-role-cellholder"),classLimit="tau-axis-limit",limit=countObj.limit,counts=countObj.count,title=countObj.title,dimension=countObj.dimension;classLimit="",limit==counts&&(classLimit="tau-axis-limit_warning_"+dimension),limit<counts&&(classLimit="tau-axis-limit_overhead_"+dimension),limit===""&&(classLimit="tau-axis-limit_"+dimension),cellHolder.removeClass("tau-axis-limit_"+dimension+" tau-axis-limit_warning_"+dimension+" tau-axis-limit_overhead_"+dimension),cellHolder.addClass(classLimit);var limitText="";return limit!==""&&(limitText=" of "+limit),$counter.size()===0?($counter=$('<div class="tau-axiscell__item tau-cards-count" title="'+title+'"><span>'+counts+limitText+"</span></div>"),$axisCell.append($counter)):($counter.html("<span>"+counts+limitText+"</span>"),$counter.attr("title",title)),$counter},updateAxesMetaInfo:function(items,limits){var self=this,getCountForCoordinate=function(c){var item=_.find(items,function(i){return i.x==c.x&&i.y==c.y}),limit=_.reduce(limits,function(memo,item){var x=parseInt(item[c.x],10),y=parseInt(item[c.y],10);return memo="",_.isNumber(x)&&!_.isNaN(x)?memo=x:_.isNumber(y)&&!_.isNaN(y)&&(memo=y),memo},""),defObj={count:0,title:"",limit:limit,dimension:c.x&&"x"||c.y&&"y"},obj=item?_.reduce(item.counts,function(m,ic){m.count+=ic.count;var prefix=m.title?" / ":"";return m.title+=prefix+ic.type+": "+ic.count,m},defObj):defObj;return obj};self.getAxesHeaders().find(".i-role-cell").each(function(){var $axisCell=$(this),coords=$axisCell.data(),countObj=getCountForCoordinate(coords),$cellsAxisLine=self.getCellsAxisLineBySliceCoordinates(coords),$counter=self.updateAxisCellMetaInfo($axisCell,countObj,$cellsAxisLine);countObj.count>0||countObj.limit!==""?$counter.show():$counter.hide()})},getCardByPositionOrLast:function(position){var $cards=this.board.find(".i-role-card");return position<$cards.size()?$cards.eq(position):$cards.last()},getGrid:function(){return this.board.find(".i-role-grid")},getCards:function(){var $grid=this.getGrid(),$cards=$grid.find(".i-role-card");return $cards},hasDataItemInCoordinates:function(itemData,coords){var $cellHolder=this.getCellHolderByCoordinates(coords),$card=this.getCardBySliceIdInTarget(itemData.id,$cellHolder);return $card.size()!==0},applyCellPagingUpdate:function(args){var self=this,$appendedCards=self.getAppendedCardsForCell(args.$cell),$queueToRemove=$(),len=$appendedCards.size();for(var i=0;i<len;i++){var $el=$appendedCards.eq(i),b64Id=$el.data("id"),match=args.$cards.is(".i-role-card[data-id="+b64Id+"]");match&&($queueToRemove=$queueToRemove.add($el))}$queueToRemove.remove()},getAppendedCardsForCell:function($cell){var $appendedCards=getCellPagingMore($cell).find(".i-role-card");return $appendedCards},getAxisCellByCoordinate:function(coords){var $b=this.board,$cell=$();try{$cell=$b.find("#"+BoardPlusUtils.generateId(coords))}catch(e){}return $cell},getCellByCoordinate:function(coords){var $b=this.board,isListMode=this.isListMode(),cloneOfCoordinates=isListMode?{x:"null",y:"null"}:_.clone(coords);cloneOfCoordinates.x=cloneOfCoordinates.x||"null",cloneOfCoordinates.y=cloneOfCoordinates.y||"null";var $cell=$();try{$cell=$b.find("#"+BoardPlusUtils.generateId(cloneOfCoordinates))}catch(e){}return $cell},getCellHolderByCoordinates:function(coordinates){var $cell=this.getCellByCoordinate(coordinates),$cellHolder=$cell.parent();return $cellHolder},expandAxis:function(coords){var dimension=coords.x?"x":"y",$cells=this.getCellHoldersAxisLineBySliceCoordinates(coords);$cells.removeClass("tau-collapsed_"+dimension),$cells.each(function(){var $cell=$(this);!$cell.hasClass("tau-collapsed_x")&&!$cell.hasClass("tau-collapsed_y")&&$cell.removeClass("tau-collapsed")})},collapseAxis:function(coords){var dimension=coords.x?"x":"y",$cells=this.getCellHoldersAxisLineBySliceCoordinates(coords);$cells.addClass("tau-collapsed_"+dimension),$cells.addClass("tau-collapsed")},drawCard:function(cardData){var template=this.templateFactory.get("boardplus.card.skeleton"),d=cardData.data;return d.entityRef=this.urlBuilder.getNewViewUrl(_.asString(d.id),_.asString(d.type),!0),template.bindPure({},cardData)},create$card:function(cardData){var template=this.templateFactory.get("boardplus.card.skeleton"),d=cardData.data;d.entityRef=this.urlBuilder.getNewViewUrl(_.asString(d.id),_.asString(d.type),!0);var $card=template.bind({},cardData);return $card},$createAxisMark:function(axisMarkData){var template=TemplatesFactory.get("boardplus.cell.axis.item"),converted=BoardPlusUtils.convertCellAxisData({dynamic:{items:[axisMarkData]}});converted.dynamic=!0;var $axisMark=template.bind({},converted);return $axisMark},applyCardsBatchAdd:function(args){var self=this;args=_.defaults(args,{callback:$.noop,options:{forceAppend:!1},items:[]});var options=args.options,dataItems=args.items,callback=args.callback,$affectedCells=[],affectedDataItemsUnique={},$queueToAdd=[];for(var i=0,len=dataItems.length;i<len;i++){var item=dataItems[i],coordinates={x:item.x,y:item.y};if(self.hasDataItemInCoordinates(item.data,coordinates))continue;var d=item.data.data;affectedDataItemsUnique[d.id+d.type]=d;var $cell=self.getCellByCoordinate(coordinates);$cell.size()&&$affectedCells.push($cell);var $card=self.create$card(item.data);$queueToAdd.push({$card:$card,$cell:$cell})}var $defer=executeAppend($queueToAdd,options);$.when($defer).then(function(rAdd){callback({$affectedCells:$affectedCells,cards:rAdd,affectedDataItems:_(affectedDataItemsUnique).values()})})},applyCardsBatchRemove:function(args){args=_.defaults(args,{callback:$.noop,options:{},items:[]});var options=args.options,dataItems=args.items,callback=args.callback,affectedDataItemsUnique={},$affectedCells=[],len=dataItems.length,$targetCards=$();for(var i=0;i<len;i++){var item=dataItems[i],d=item.data.data;affectedDataItemsUnique[d.id+d.type]=d;var $cards=this.getCardBySliceId(item.data.id);$targetCards=$targetCards.add($cards)}$targetCards.each(function(i,card){var $cell=$(card).parent(".i-role-cell");$cell.size()&&$affectedCells.push($cell)});var $del=executeRemove($targetCards,options);$.when($del).then(function(){callback({$affectedCells:$affectedCells,affectedDataItems:_(affectedDataItemsUnique).values()})})},applyCardsBatchUpdate:function(args){var self=this;args=_.defaults(args,{callback:$.noop,options:{forceAppend:!1},items:[]});var options=args.options,dataItems=args.items,callback=args.callback,$queueToDel=$(),$queueToUpd=[],$queueToAdd=[],affectedDataItemsUnique={},$updatedCards=[],targetCardId,setupIterationPrerequisites=function(id,iteration){if(iteration===0)targetCardId=id,$queueToDel=self.getCardBySliceId(targetCardId);else if(targetCardId!==id){var msg="DEBUG INFO: Multiply IDs in batch update are not supported";throw console.log(msg),msg}},len=dataItems.length,isListMode=self.isListMode();isListMode&&len>1&&(len=1);var $affectedCells=[];for(var i=0;i<len;i++){var d=dataItems[i];setupIterationPrerequisites(d.data.id,i);var di=d.data.data;affectedDataItemsUnique[di.id+di.type]=di;var cellCoords={x:d.x,y:d.y},$cell=self.getCellByCoordinate(cellCoords);$cell.size()&&$affectedCells.push($cell);var $cellHolder=self.getCellHolderByCoordinates(cellCoords),$cardEx=self.getCardBySliceIdInTarget(targetCardId,$cellHolder),$cardNV=self.create$card(d.data),widget="tauselectable",dataEx=$.extend({},$cardEx.data(widget));$cardNV.data(widget,dataEx);var newOrdering=0,extOrdering=0,hasOrdering=d.data.hasOwnProperty("orderingValue");hasOrdering&&(newOrdering=d.data.orderingValue,extOrdering=$cardEx.data("orderingValue")),$cardEx.size()>0&&self.compareOrderings(extOrdering,newOrdering)===0?($queueToDel=$queueToDel.not($cardEx),$queueToUpd.push({$cardNV:$cardNV,$cardEx:$cardEx})):$queueToAdd.push({$card:$cardNV,$cell:$cell}),$updatedCards.push($cardNV)}var $del=executeClear($queueToDel,options),$upd=executeUpdate($queueToUpd,options),$add=executeAppend($queueToAdd,options);$.when($del,$upd,$add).then(function(rDel,rUpd,rAdd){callback({$affectedCells:$affectedCells,cards:_.union(rUpd,rAdd),affectedDataItems:_(affectedDataItemsUnique).values()})})},applyAxisBatchAdd:function(args){args=_.defaults(args,{callback:$.noop,options:{force:!1},items:[]});var options=args.options,dataItems=args.items,callback=args.callback,affectedCells=[],affectedDataItemsUnique={},len=dataItems.length;for(var i=0;i<len;i++){var item=dataItems[i],d=item.data.data;affectedDataItemsUnique[d.id+d.type]=d;var $el=$("<div/>");$el.data(item.data),affectedCells.push($el)}callback({$affectedCells:affectedCells,affectedDataItems:_(affectedDataItemsUnique).values()})},applyAxisBatchUpdate:function(args){var self=this;args=_.defaults(args,{callback:$.noop,options:{forceAppend:!1},items:[]});var options=args.options,dataItems=args.items,callback=args.callback,$queueToUpd=[],affectedDataItemsUnique={},$updatedCards=[],targetCardId,setupIterationPrerequisites=function(id,iteration){if(iteration===0)targetCardId=id;else if(targetCardId!==id){var msg="DEBUG INFO: Multiply IDs in batch update are not supported";throw console.log(msg),msg}},len=dataItems.length,isListMode=self.isListMode();isListMode&&(len=0);var $affectedCells=[];for(var i=0;i<len;i++){var d=dataItems[i];setupIterationPrerequisites(d.data.id,i);var di=d.data.data;affectedDataItemsUnique[di.id+di.type]=di;var axisName=d.location.toLowerCase().charAt(0),coordinates={};coordinates[axisName]=d[axisName];var $axisMarkCell=self.getAxisCellByCoordinate(coordinates);$affectedCells.push($axisMarkCell);var $cardEx=$axisMarkCell.find(".i-role-axis-item"),$cardNV=self.$createAxisMark(d.data);$queueToUpd.push({$cardNV:$cardNV,$cardEx:$cardEx}),$updatedCards.push($cardNV)}var $upd=executeAxisLineUpdate($queueToUpd,options);$.when($upd).then(function(){callback({$affectedCells:$affectedCells,cards:$updatedCards,affectedDataItems:_(affectedDataItemsUnique).values()})})},applyAxisBatchRemove:function(args){args=_.defaults(args,{callback:$.noop,options:{},items:[]});var options=args.options,dataItems=args.items,callback=args.callback,affectedDataItemsUnique={},$affectedCells=[],len=dataItems.length,$targetCells=$(),$axisTargetCells=$();for(var i=0;i<len;i++){var item=dataItems[i],d=item.data.data;affectedDataItemsUnique[d.id+d.type]=d;var axisName=item.location.toLowerCase().charAt(0),coordinates={};coordinates[axisName]=item.data.id;var $cells=this.getCellsBySliceCoordinatesInTarget(coordinates,this.getGrid());$targetCells=$targetCells.add($cells);var $axisCell=this.getAxisCellByCoordinate(coordinates);$axisTargetCells=$axisTargetCells.add($axisCell)}$targetCells.each(function(i,cell){var $cell=$(cell);$affectedCells.push($cell)});var $del=executeAxisLineRemove($axisTargetCells,$targetCells,options);$.when($del).then(function(){callback({$affectedCells:$affectedCells,affectedDataItems:_(affectedDataItemsUnique).values()})})},highlightAxesLines:function(dataItems){var me=this,$targetAxesCells=$(),$targetToHighlight=$();for(var i=0,len=dataItems.length;i<len;i++){var item=dataItems[i],coordinates={};coordinates[item.location.charAt(0).toLowerCase()]=item.data.id;var $axisCell=me.getAxisCellByCoordinate(coordinates);if($axisCell.size()===1){$targetAxesCells=$targetAxesCells.add($axisCell);var $cellholders=me.getCellHoldersAxisLineBySliceCoordinates(coordinates);$targetToHighlight=$targetToHighlight.add($cellholders)}}$targetAxesCells.size()>0&&$.scrollTo($targetAxesCells.eq(0),{onAfter:function(){me.animateWithClass($targetToHighlight,"tau-axis_highlighted")}})},applyCardsBatchMove:function(args){var self=this;if(!args.targetCellCoordinates)throw new Error("Target cell coordinates are not provided for move operation");args=_.defaults(args,{callback:$.noop,options:{forceAppend:!1},items:[]});var tcc=args.targetCellCoordinates,options=args.options,callback=args.callback,targetItems=[],sideEffectItems=[];_.each(args.items,function(arr,i){arr.length===1&&arr[0].x==tcc.x&&arr[0].y==tcc.y?targetItems.push(arr[0]):sideEffectItems.push(arr)});var dataItems=_.sortBy(targetItems,function(t){return t.data.orderingValue||0}),$targetCells=[],cardDomIds=[],resultCards=[],cardsBatchHTML="",$oldSelection=$(),customData={},widget="tauselectable";_.each(dataItems,function(d){cardsBatchHTML+=self.drawCard(d.data);var domId=BoardPlusUtils.getLatestCardId(d.data.data.id);cardDomIds.push(domId),d.domId=domId;var $cardEx=self.getCardBySliceId(d.data.id);if($cardEx.size()){$oldSelection=$oldSelection.add($cardEx);var dataEx=$.extend({},$cardEx.data(widget));customData[domId]=dataEx}});if(dataItems.length){var cellCoordinates=_.pick(dataItems[0],"x","y"),$cell=self.getCellByCoordinate(cellCoordinates);$cell.size()&&($targetCells=[$cell],replaceCardsFastMethod($cell,$oldSelection,cardsBatchHTML))}_.each(cardDomIds,function(domId){var node=BoardPlusUtils.getDomNodeByIdFast($targetCells[0],domId),$node=$(node);if(!node){var data=_.find(dataItems,function(d){return d.domId===domId});$node=self.create$card(data)}$node.data(widget,customData[domId]),resultCards.push($node)});var deferreds=[];_(sideEffectItems.length).times(function(){deferreds.push($.Deferred())}),$.when.apply($,deferreds).then(function(){var ri=[].splice.call(arguments,0),$affectedCells=$targetCells,cards=resultCards;_(ri).each(function(r){$affectedCells=$affectedCells.concat(r.$affectedCells),cards=cards.concat(r.cards)});var animationClass=options.suspendAnimation?"":"tau-operation_card_updated";_.each(cards,function($c){animateWithClass($c,animationClass)}),callback({$affectedCells:$affectedCells,cards:cards})}),_.each(sideEffectItems,function(arr,i){self.applyCardsBatchUpdate({items:arr,callback:deferreds[i].resolve})})}});return DomWrapper.fly=function($el){return new DomWrapper($el)},DomWrapper})