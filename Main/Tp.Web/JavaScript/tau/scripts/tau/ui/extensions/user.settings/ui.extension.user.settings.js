define(["Underscore","jQuery","tau/ui/extensions/ui.extension.domOperationsBase","tau/nls/translator","libs/jquery/jquery.inputMaskEditor"],function(_,$,ExtensionBase,T){return ExtensionBase.extend({init:function(){this._super.apply(this,arguments),this.onSaveProxy=_.bind(this.onSave,this),this.onDeleteProxy=_.bind(this.onDelete,this)},"bus afterRender":function(evt,afterRender){this.fire("view.update.state");var delimiter=this.config.context.applicationContext.culture.decimalSeparator,digitMask="^[0-9]*(["+delimiter+"][0-9]{0,2})?$";afterRender.element.find(".tau-weekly-hours").inputMaskEditor({mask:digitMask}),afterRender.element.on("submit",this.onSaveProxy),afterRender.element.find(".tau-btn.tau-delete").click(this.onDeleteProxy)},"bus afterRender:last+dataBind:last+view.state.updated":function(evt,afterRender,dataBind,viewState){var objectsAreEqual=!0;_.each(dataBind,function(value,key){viewState.hasOwnProperty(key)&&viewState[key]!=value&&(objectsAreEqual=!1)});if(viewState.password&&viewState.password.length>0||viewState.passwordConfirmation&&viewState.passwordConfirmation.length>0)objectsAreEqual=!1},"bus refresh>afterRender:last>model.data.changed":function(evt,refreshData,afterRender,changedData){var uiSelectorsByFieldName={login:".tau-login",email:".tau-email",weeklyAvailableHours:".tau-weekly-hours",activeDirectoryName:".tau-active-directory-name",isActive:".tau-is-active-container",isObserver:".tau-is-observer-container",isAdministrator:".tau-is-administrator-container",password:".tau-password,.tau-password-confirmation"};for(var key in uiSelectorsByFieldName)changedData[key]!==undefined&&this.fire("updateElement",{element:afterRender.element.find(uiSelectorsByFieldName[key])})},"bus afterRender:last+before_view.save.changes":function(evt,afterRender,viewState){viewState=this.getState(afterRender.element);var validationFormInfo=[],formHasError=!1,weeklyValidation={selector:".tau-weekly-hours",hasError:!1};validationFormInfo.push(weeklyValidation),_.isNaN(parseInt(viewState.weeklyAvailableHours))&&(weeklyValidation.hasError=formHasError=!0,weeklyValidation.message=T("Please provide weekly hours"));var loginValidation={selector:".tau-login",hasError:!1};validationFormInfo.push(loginValidation),viewState.login==""&&(loginValidation.hasError=formHasError=!0,loginValidation.message=T("Please enter login"));var emailValidation={selector:".tau-email",hasError:!1};validationFormInfo.push(emailValidation),viewState.email!=""?this.config.context.configurator.getConstObject().get("emailRegexp").test(_.trim(viewState.email))||(emailValidation.hasError=formHasError=!0,emailValidation.message=T("Invalid email address")):(emailValidation.hasError=formHasError=!0,emailValidation.message=T("Please enter email"));var activeDirectoryNameValidator={selector:".tau-active-directory-name",hasError:!1};validationFormInfo.push(activeDirectoryNameValidator);var activeDirectoryNameIsNotEmpty=viewState.activeDirectoryName&&viewState.activeDirectoryName.length>0;activeDirectoryNameIsNotEmpty&&!(new RegExp("^[A-Za-z0-9]+[\\\\][A-Za-z0-9]+$")).test(viewState.activeDirectoryName)&&(activeDirectoryNameValidator.hasError=formHasError=!0,activeDirectoryNameValidator.message=T("Invalid active directory user name"));var passwordValidation={selector:".tau-password",hasError:!1},passwordConfirmationValidation={selector:".tau-password-confirmation",hasError:!1};validationFormInfo.push(passwordValidation),validationFormInfo.push(passwordConfirmationValidation);var passwordInfoProvided=viewState.password&&viewState.password.length>0||viewState.passwordConfirmation&&viewState.passwordConfirmation.length>0,passwordAndConfirmationIsEqual=viewState.password===viewState.passwordConfirmation;passwordInfoProvided&&!passwordAndConfirmationIsEqual&&(passwordConfirmationValidation.hasError=passwordValidation.hasError=formHasError=!0,passwordConfirmationValidation.message=passwordValidation.message=T("Your password and confirmation password don't match")),_.each(validationFormInfo,function(info){var element=afterRender.element.find(info.selector);info.hasError?element.addClass("tau-error").attr("title",info.message):element.removeClass("tau-error").removeAttr("title")}),formHasError&&evt["before_view.save.changes"].cancelMain()},"bus dataBind:last+view.save.changes":function(evt,dataBind,viewState){var changes=this.getChanges(dataBind,viewState);this.fire("model.save",changes)},getChanges:function(data,currentState){var fields=["login","email","password","weeklyAvailableHours","isActive","isObserver","isAdministrator","activeDirectoryName"],changes={};return _.each(fields,function(key){(data[key]||"")!=currentState[key]&&(changes[key]=currentState[key])}),changes},onSave:function(e){return this.fire("view.save.changes",this.getState($(e.target))),!1},onDelete:function(){confirm(T("Do you really want to delete user?"))&&this.fire("remove",{id:this.config.context.entity.id})},getState:function(element){var password=element.find(".tau-password").val();return{login:element.find(".tau-login").val(),email:element.find(".tau-email").val(),password:password.length>0?password:undefined,passwordConfirmation:element.find(".tau-password-confirmation").val(),weeklyAvailableHours:element.find(".tau-weekly-hours").val(),activeDirectoryName:element.find(".tau-active-directory-name").val(),isAdministrator:element.find(".tau-is-admin").prop("checked"),isObserver:element.find(".tau-is-observer").prop("checked"),isActive:element.find(".tau-is-active").prop("checked")}}})})