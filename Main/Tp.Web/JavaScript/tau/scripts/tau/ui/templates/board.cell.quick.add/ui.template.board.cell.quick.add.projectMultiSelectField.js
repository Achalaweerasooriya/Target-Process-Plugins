define(["Underscore","tau/core/templates-factory","tau/ui/templates/board.cell.quick.add/ui.customFunctions.template.board.cell.quick.add","tau/ui/templates/board.context.selector/ui.template.board.context.selector.projects.list"],function(e,t,o){var i={name:"board.cell.item.quick.add.field.ProjectMultiSelect",engine:"jqote2",customFunctions:e.defaults(o,{markProjectSelected:function(t,o,i){var a;o&&o.id?a=e.find(t,function(e){return e.id===o.id}):"Release"==i.type.entityType.name&&1==t.length&&(a=t[0],a.skipDisabledCheck=!0),a&&(a.selected=!0,a.disabled=!0)},getProjectFieldWorkflowData:function(t){var o=e.chain(t.workflows).groupBy(function(e){return e.process.id}).map(function(o,i){return[i,{workflows:e.map(o,function(t){return{entityStates:e.pluck(t.entityStates.items,"name"),name:t.parentWorkflow&&t.name,id:t.id,entityType:t.entityType.name.toLowerCase(),root:!t.parentWorkflow}}),terms:e.chain(t.terms).filter(function(e){return e.process.id==i}).map(function(t){return e.pick(t,"value","wordKey")}).value()}]}).object().value(),i=e.object(e.map(t.projects,function(e){return[e.id,e.process.id]}));return{defaultProcessId:e.first(e.keys(o)),processes:o,groups:i,resetOnProcessChange:!1}},getProjects:function(t,o){return t.options.workflows?e.map(t.options.projects,function(t){return e.extend(t,{customizableWorkflow:o})}):t.options.projects}}),markup:["<% if (this.field.options.projects.length > 0) { %>","<% var field = this.field; %>","<% fn.markProjectSelected(field.options.projects, field.options.selectedProject, this); %>",'<div class="tau-field <%=(field.options.workflows && this.subWorkflowsEnabled)? "tau-new-entity-form__row--customizable": ""%>">','   <div class="tau-note tau-field-caption">Assign to Projects:<span class="invisible tau-error-field-caption">At least one should be selected</span></div>','   <div class="tau-category-settings-container">','      <div class="tau-projects tau tau-required-field-editor <%= field.id.toLowerCase()%>"              data-validate=\'{"caption":"<%= field.caption%>","rules":<%=fn.getValidationRules(field, ["projectmultiselect"])%>}\' ','              data-include-project-relation="<%=field.options.restContainsProjectRelationCollection%>"','              data-fieldname="<%=field.id%>" data-fieldtype="<%=field.type%>">','             <ul name="<%= field.id%>" class="tau-category-items-selector i-role-list">','                 <%= fn.sub("board.context.selector.projects.list", fn.getProjects(field, this.subWorkflowsEnabled)) %>',"             </ul>","              <% if (field.options.workflows && this.subWorkflowsEnabled) { %>","                  <span runas=\"workflow.selector\" data-name=\"project.workflow.selector\" data-context:general='' data-uniquename='workflow.selector' data-name='workflow.selector'","                      data-data='<%=fn.toDataAttributeValue(fn.getProjectFieldWorkflowData(field.options))%>'/>","              <% } %>","      </div>","   </div>","</div>","<% } %>"]};
return t.register(i)});