define(["Underscore","jQuery","tau/core/tau-widget"],function(_,$,tau){tau.widget("ui.behaviourMenuActions",{_create:function(){this.init()},init:function(){var self=this,onClick=this.options.onClick||function(e){self.show()},$element=$(this.element);this.$element=$element,this.$popup=$element.find(".ui-menu__popup"),this.$items=this.$element.find(".ui-menu__item-action .drop-down-option"),this.currentIndex=-1,this.options.classActive="drop-down-option_hover",self.isOpened=!1,this.$element.find(".ui-menu__trigger").click(function(e){onClick(e)}),this._bindEvents()},show:function(){var self=this;self.$popup.slideToggle(100,function(){self.isOpened=!self.isOpened,self.isOpened?self._mapKeyboard():self._unmapKeyboard()})},_bindEvents:function(){var self=this;self.$items.hover(function(){self.$items.not(this).removeClass(self.options.classActive),$(this).addClass(self.options.classActive),self.currentIndex=self.$items.index(this)},function(){$(this).removeClass(self.options.classActive)}),$("body").click(function(e){self.isOpened&&!$(e.target).parents(".tau-bubble").size()&&self.close();if($(e.target).parents(".ui-menu:first").length)return})},_mapKeyboard:function(){var self=this;this.options.keyboardManager.pushHandler({handleKeyDown:function(evt){switch(evt.keyCode){case $.ui.keyCode.ESCAPE:evt.preventDefault(),self.close();break;case $.ui.keyCode.DOWN:evt.preventDefault(),self.currentIndex++,self.currentIndex=self.currentIndex>=self.$items.length?0:self.currentIndex,self.$items.removeClass(self.options.classActive),self.$items.eq(self.currentIndex).addClass(self.options.classActive);break;case $.ui.keyCode.UP:evt.preventDefault(),self.currentIndex--,self.currentIndex=self.currentIndex<0?self.$items.length-1:self.currentIndex,self.$items.removeClass(self.options.classActive),self.$items.eq(self.currentIndex).addClass(self.options.classActive);break;case $.ui.keyCode.ENTER:evt.preventDefault();var $active=self.$items.filter("."+self.options.classActive);$active&&$active.parent().trigger("click")}}})},_unmapKeyboard:function(){this.options.keyboardManager.popHandler()},close:function(){var self=this;this.$popup.slideUp(100,function(){self.isOpened=!1,self._unmapKeyboard()})},destroy:function(){self.isOpened&&this._unmapKeyboard()}})})