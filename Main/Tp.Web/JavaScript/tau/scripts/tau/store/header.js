define(["Underscore","tau/core/tau"],function(_,tau){var tauExtension=_.extend(tau,{ref:function(name,fields){var value={};return value[name]=fields,value},list:function(name,fields){var o=tau.ref(name,fields);return o.list=!0,o},getNextPage:function(value,next,fields){fields=fields||[];var obj={holder:value,url:next,fields:fields};return value.getNextPage=function(){return obj},obj},parseFieldsFromString:function(value){var self=this;value=value.replace(/([\w-]+)\[+/ig,'{"$1":['),value=value.replace(/(\])/ig,"]}"),value=value.substr(0,value.length-1),value=value.replace(/([\w-]+)(,|\])/ig,"'$1'$2");var fields=eval("(function () { return "+value+";})();"),toLowerCase=function(key){var parts=key.split("-");if(parts.length>1){var r=[];return _.each(parts,function(part){r.push(toLowerCase(part))}),r.join("-")}return key.charAt(0).toLowerCase()+key.substr(1)},formatFields=function(fieldsToParse){var f=[];return _.each(fieldsToParse,function(field){if(self.header.isSimple(field)){f.push(toLowerCase(field));return}var obj={},fieldName=self.header.getFieldName(field);obj[toLowerCase(fieldName)]=formatFields(field[fieldName]),f.push(obj)}),f};return formatFields(fields)},formatObject:function(obj,caseName){var self=this,output={data:[],nextPages:[]};if(_.isUndefined(obj)||_.isNull(obj))return output.data=null,output;if(typeof obj!="object")return output.data=obj,output;caseName=caseName?caseName:"Lower";var toLowerCase=function(key){return key.charAt(0)["to"+caseName+"Case"]()+key.substr(1)};if(obj&&(obj.hasOwnProperty("Items")||obj.hasOwnProperty("items"))){var next=obj.next||obj.Next;next&&output.nextPages.push(self.getNextPage(output.data,next,[])),obj=obj.Items||obj.items}if(_.isArray(obj))return _.each(obj,function(value){var formatted=self.formatObject(value,caseName);output.nextPages=output.nextPages.concat(formatted.nextPages||[]),output.data.push(formatted.data)}),output;var r={};return _.each(_.keys(obj),function(key){var correctKey=toLowerCase(key),complexParts=correctKey.split("-");if(complexParts.length>1){var parts=[];_.each(complexParts,function(part){parts.push(toLowerCase(part))}),correctKey=parts.join("-")}var formatObject=self.formatObject(obj[key],caseName);output.nextPages=output.nextPages.concat(formatObject.nextPages||[]),r[correctKey]=formatObject.data}),output.data=r,output},header:{getFieldName:function(field){return _.getFieldName(field)},isSimple:function(field){return _.isString(field)},isList:function(field){return field.list===!0}}});return tauExtension})