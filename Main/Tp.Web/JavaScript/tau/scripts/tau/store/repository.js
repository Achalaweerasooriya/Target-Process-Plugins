define(["Underscore","tau/core/class","tau/core/event","tau/core/tau","tau/store/header","tau/core/comparer","tau/store/types","tau/store/db"],function(_,Class,event,tau,tauHeader,comparer,tauTypes,Db){var repository=Class.extend({init:function(config){if(!config.service)throw"rest service should be defined";this.__listenerObjects={objects:[],holders:[]},this.__subscriptions={},this.types=config.types||tauTypes.getDictionary(),this._initDb(config),this.service=config.service},_initDb:function(config){config=config||{},this.__allTypeLoadMarkers={},this.db=config.db||new Db({types:this.types})},mergeCommands:function(commands){var commandsDictionary={},self=this;return _.each(commands,function(cmd){cmd=_.defaults(cmd,{name:"get",config:{},callbacks:{}}),cmd.callbacks=tau.getCallbacks(cmd.callbacks),self._processFieldsConfig(cmd,cmd.name==="get"?null:"_getEmptyArray");var commandKey=[cmd.type,cmd.config.id||"_",cmd.name,cmd.config.nested===!0?_.uniqueId():""].join("_");if(!commandsDictionary.hasOwnProperty(commandKey))commandsDictionary[commandKey]=cmd,cmd.commands=[];else{var value=commandsDictionary[commandKey];self.db.mergeFields(value.config.fields,cmd.config.fields),value.commands.push(cmd)}}),commandsDictionary},execute:function(commands){var self=this;_.isArray(commands)||(commands=[commands]);var commandsDictionary=self.mergeCommands(commands);_.each(_.values(commandsDictionary),function(command){if(command.executed===!0)throw"command is already executed. the same command can not be used twice";self["api "+command.name](command)})},_registerListener:function(listenersHolder,config,callback){var listeners=listenersHolder||{},eventName=config.eventName;listeners.hasOwnProperty(eventName)||(listeners[eventName]={});var subscriberId=_.uniqueId(eventName),listenerConfig={id:subscriberId,config:config,callback:tau.createScopedCallbackIfRequired(callback)},holderEvents=listeners[eventName],listener=config.listener;if(listener){if(!listener.__getRepositorySubscriberId){var __repositoryListenerId=_.uniqueId("repository_");listener.__getRepositorySubscriberId=function(){return __repositoryListenerId},this.__listenerObjects[__repositoryListenerId]={listener:listener,holders:[]}}var holder={id:subscriberId,holder:holderEvents};this.__listenerObjects[listener.__getRepositorySubscriberId()].holders.push(holder)}return holderEvents[subscriberId]=listenerConfig,listenerConfig},unbind:function(listener){if(!listener.__getRepositorySubscriberId)return;var self=this,__repositorySubscriberId=listener.__getRepositorySubscriberId(),__listenerObject=self.__listenerObjects[__repositorySubscriberId];if(!__listenerObject)return;var holderConfigs=__listenerObject.holders;if(!holderConfigs)return;_(holderConfigs).each(function(holderConfig){var holder=holderConfig.holder[holderConfig.id];holder.callback=function(){},delete holderConfig.holder[holderConfig.id]}),delete listener.__getRepositorySubscriberId,delete self.__listenerObjects[__repositorySubscriberId]},_getListeners:function(config){var self=this,subscriptions=self._getSubscriptions(config.type);if(!subscriptions)return[];var concreteListeners=subscriptions[config.eventName];if(!concreteListeners)return[];var listeners=[];return _.each(_(concreteListeners).values(),function(listener){var filter=listener.config.filter,hasChanges=listener.config.hasChanges||[];if(filter){var node=self.db.getPersistedNode(config.obj.id,config.obj.type),obj=config.obj;node&&node.data?obj=node.data:config.nodeEvent.changes&&!_.isEmpty(config.nodeEvent.changes)&&(obj=config.nodeEvent.changes);var diffs=comparer.compare(obj,filter);if(_(diffs.changes).keys().length>0)return}if(config.nodeEvent&&hasChanges.length>0){var changes=config.nodeEvent.changes||{},isPassChangesFilter=_(hasChanges).all(function(expectedChange){var parts=expectedChange.split("|"),pass=!1;return parts.length>1?pass=0<_(changes).chain().keys().intersection(parts).size().value():pass=changes.hasOwnProperty(expectedChange),pass});if(!isPassChangesFilter)return}listeners.push(listener)}),listeners},on:function(config,callback){var self=this,type=config.type?self.types[config.type].name:"_all_",holder=self._getSubscriptions(type);return self._registerListener(holder,config,callback)},_getSubscriptions:function(type){return this.__subscriptions.hasOwnProperty(type)||(this.__subscriptions[type]={}),this.__subscriptions[type]},_autoAppend:function(fields,appendix,appendMethod){_.each(appendix,function(a){_.any(fields,function(field){return tauHeader.header.getFieldName(field)===tauHeader.header.getFieldName(a)})||fields[appendMethod?appendMethod:"unshift"](a)})},registerData:function(data,typeProperty){return this.db.register(data,null,typeProperty)},_getEmptyArray:function(){return[]},_getDefaultFields:function(fieldsHolder){var type=this.types[fieldsHolder.type];return _.clone(type?type.fields||[]:[])},_processFieldsConfig:function(fieldsHolder,fnDefaultFields){var self=this;fnDefaultFields=fnDefaultFields||"_getDefaultFields";if(!fieldsHolder.config.fields||fieldsHolder.config.fields.length===0)fieldsHolder.config.fields=self[fnDefaultFields](fieldsHolder);var fields=fieldsHolder.config.fields;self._autoAppend(fields,["id"]);for(var i=fields.length;i>0;i--){var refField=fields[i-1];if(_.isSimple(refField))continue;var fieldName=_.getFieldName(refField),type=fieldsHolder.type?self.types[fieldsHolder.type]:null,refTypeName=null,defaultRefFields=[];if(type&&type.refs&&type.refs[fieldName]){var ref=type.refs[fieldName];ref.list===!0&&(refField.list=!0),defaultRefFields=ref.fields,refTypeName=ref.name}var refHolder={type:refTypeName,config:{fields:refField[fieldName]||defaultRefFields}};refField[fieldName]=self._processFieldsConfig(refHolder,fnDefaultFields)}var len=fields.length;for(i=0;i<len;i++){var name=_.getFieldName(fields[i]);for(var j=i+1;j<len;j++)_.getFieldName(fields[j])===name&&(_.isSimple(fields[i])||_.mergeFields(fields[i][name],fields[j][name]),fields.splice(j,1),len--,j--)}return fields},_invokeCommandCallback:function(callbackName,callbacks,command,value){var self=this;self._invokeCommandCallbackR(callbackName,callbacks,command,value);if(command.config.silent===!0)return;if(!self.__subscriptions._all_||_.isEmpty(self.__subscriptions._all_))return;var listeners=_.values(self.__subscriptions._all_[callbackName]||[]),args={name:callbackName,data:{cmd:command,data:value}};_(listeners).each(function(listener){listener.callback(args)})},_invokeCommandCallbackR:function(callbackName,callbacks,command,value){var self=this;command.executed=!0,callbacks[callbackName]({command:command,data:value}),command.hasOwnProperty("commands")&&_.each(command.commands,function(cmd){cmd.executed=!0,cmd.failed=command.failed,self._invokeCommandCallbackR(callbackName,cmd.callbacks,cmd,value)})},"api removeFromList":function(command){var self=this,callbacks=command.callbacks;command.config.$set=command.config.$set||{},command.callbacks={success:function(r){var newValues=_.extend(_.extend({},command.config.$set),r),register=self.db.removeFromList(command.config.id,command.type,command.config.$set);self._invokeCommandCallback("success",callbacks,command,{}),self._notifyAboutNewsAndChanges(register,command)},failure:function(r){command.failed=!0,self._invokeCommandCallback("failure",callbacks,command,r)}},self._populateBeforeSaveEvent(command),self._processFieldsConfig(command,"_getEmptyArray"),self.service.removeFromList(command)},"api remove":function(command){var self=this,callbacks=command.callbacks;command.callbacks={success:function(r){var register=self.evictPersistedObject(command.config.id,command.type);self._populateAfterRemoveEvent(command,register),self._invokeCommandCallback("success",callbacks,command,command.callbacks)},failure:function(r){command.failed=!0,self._invokeCommandCallback("failure",callbacks,command,r)}},self._populateBeforeRemoveEvent(command),self.service.remove(command)},evictPersistedObject:function(id,type){return this.db.remove(id,this.types[type].name)},evictProperties:function(id,type,arrayOfPropertyNames){this.db.removeProperties(id,this.types[type].name,arrayOfPropertyNames)},evictData:function(){this._initDb()},evictCollection:function(type){this.db.removeCollection(type),this.unmarkRecordSetAsCompleteLoaded(type)},isPropertyInitialized:function(id,type,propertyName){return this.db.isPropertyInitialized(id,type,propertyName)},"api save":function(command){var self=this,callbacks=command.callbacks;command.config.$set=command.config.$set||{},command.callbacks={success:function(r){_.extend(r,{__type:command.type});var newValues={};if(_.isArray(command.config.$set)){newValues=[];for(var i=0;i<command.config.$set.length;i++){var value=_.extend(_.extend({__type:command.type},command.config.$set[i]),r[i]);newValues.push(value)}}else newValues=_.extend(_.extend({},command.config.$set),r);var register=self.db.register(newValues);self._notifyAboutNewsAndChanges(register,command),self._invokeCommandCallback("success",callbacks,command,newValues)},failure:function(r){command.failed=!0,self._invokeCommandCallback("failure",callbacks,command,r)}},self._populateBeforeSaveEvent(command),self._processFieldsConfig(command,"_getEmptyArray"),self.service.save(command)},_notifyAboutNewsAndChanges:function(register,cmd){var self=this;_.each(_.keys(register.tree),function(type){_.each(_(register.tree[type]).values(),function(r){self._populateEvent(cmd,"afterSave",r,{id:r.id,type:type})})})},_populateEvent:function(cmd,eventName,nodeEvent,obj){var id=_.uniqueId("repositoryEvent"),listeners=this._getListeners({type:obj.type,eventName:eventName,nodeEvent:nodeEvent,obj:obj});if(listeners.length!==0){var args={id:id,name:eventName,data:{id:obj.id,type:obj.type,cmd:cmd,obj:obj,changes:nodeEvent.changes}};_(listeners).each(function(listener){listener.callback(args)})}},_populateBeforeRemoveEvent:function(cmd){this._populateEvent(cmd,"beforeRemove",{},{id:cmd.config.id,type:cmd.type})},_populateAfterRemoveEvent:function(cmd,register){var self=this;_.each(register.deletedData,function(dataNode){self._populateEvent(cmd,"afterRemove",{},dataNode)}),self._notifyAboutNewsAndChanges(register,cmd)},_populateBeforeSaveEvent:function(cmd){this._populateEvent(cmd,"beforeSave",{changes:cmd.config.$set||{}},{id:cmd.config.id,type:cmd.type})},markRecordSetAsCompleteLoaded:function(type){this.__allTypeLoadMarkers[type]=!0},unmarkRecordSetAsCompleteLoaded:function(type){this.__allTypeLoadMarkers[type]=!1},isTypeMarkedAsCompleteLoaded:function(type){return this.__allTypeLoadMarkers[type]===!0},_appendDiscriminator:function(typeDefinition,notInitializedFields){var self=this;if(!typeDefinition)throw new Error("Table name is not defined");typeDefinition.isParentType&&_.indexOf(notInitializedFields,"id")>=0&&self._autoAppend(notInitializedFields,[typeDefinition.discriminator],"push"),_.each(notInitializedFields,function(field){if(tauHeader.header.isSimple(field))return;var fieldName=tauHeader.header.getFieldName(field),ref=typeDefinition.refs[fieldName];ref&&self._appendDiscriminator(self.types[ref.name],field[fieldName])})},_processCommandForGet:function(command){var self=this,persistedObject=self.db.get(command.config.id,command.type,command.config),$fields=command.config.fields;if(persistedObject.notInitializedFields.length===0)if(!persistedObject.all||!!self.isTypeMarkedAsCompleteLoaded(command.type))return command.config.fields=$fields,self._invokeCommandCallback("success",command.callbacks,command,persistedObject.data),{isInvoked:!0};var notInitializedFields=persistedObject.notInitializedFields;return persistedObject.all&&!self.isTypeMarkedAsCompleteLoaded(command.type)&&(notInitializedFields=_.clone($fields)),{isInvoked:!1,fields:notInitializedFields}},_runReadCommand:function(command,originFields,notInitializedFields,fnProcess){var self=this;try{self._appendDiscriminator(self.types[command.type],notInitializedFields)}catch(e){command.failed=!0,command.callbacks.failure(null,e);return}_.extend(command.config,{fields:notInitializedFields}),self._processFieldsConfig(command);var callbacks=command.callbacks;command.callbacks={success:function(r){command.config.fields=originFields,_.defaults(r,{__type:command.type});var register=self.db.register(r),dataToReturn=fnProcess(r,register);self._invokeCommandCallback("success",callbacks,command,dataToReturn),command.callbacks=callbacks},failure:function(r){command.config.fields=originFields,command.failed=!0,self._invokeCommandCallback("failure",callbacks,command,r),command.callbacks=callbacks}},this.service[command.name](command)},"api refresh":function(command){var self=this,$fields=command.config.fields,processResponse=function(r,register){return self._notifyAboutNewsAndChanges(register,command),self.db.get(command.config.id,command.type,{fields:$fields}).data};this._runReadCommand(command,$fields,_.clone($fields),processResponse)},"api turboGet":function(command){var self=this,$fields=command.config.fields||[];self._autoAppend($fields,["id"]);var callbacks=command.callbacks;command.callbacks={success:function(r){_.defaults(r,{__type:command.type}),self._invokeCommandCallback("success",callbacks,command,r),command.callbacks=callbacks},failure:function(r){command.failed=!0,self._invokeCommandCallback("failure",callbacks,command,r),command.callbacks=callbacks}},this.service[command.name](command)},"api find":function(command){var self=this,$fields=command.config.fields,processResponse=function(r){var dataToReturn=[];_.each(r,function(record){dataToReturn.push(self.db.get(record.id,command.type,{fields:$fields}).data)});if(r.hasOwnProperty("getNextPage")){dataToReturn.isNextPageAvailable=function(){return!0};var cmdClone=_.clone(command);cmdClone.config=_.clone(cmdClone.config),cmdClone.config.$skip=cmdClone.config.$skip+cmdClone.config.$limit,dataToReturn.getNextPageCommand=function(){return cmdClone}}else dataToReturn.isNextPageAvailable=function(){return!1};return dataToReturn};this._runReadCommand(command,$fields,_.clone($fields),processResponse)},"api get":function(command){var self=this,$fields=command.config.fields,_processCommandForGet=self._processCommandForGet(command);if(_processCommandForGet.isInvoked)return;var processResponse=function(r){return command.config.id||self.markRecordSetAsCompleteLoaded(command.type),self.db.get(command.config.id,command.type,{fields:$fields}).data};this._runReadCommand(command,$fields,_processCommandForGet.fields,processResponse)}});return repository})