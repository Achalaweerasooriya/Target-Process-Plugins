define(["Underscore","tau/core/async.source.adapter"],function(_,AsyncSourceAdapter){var applyBoardSettingsSchema=function(update,requestRef){requestRef.publicData={},requestRef.userData={};var publicFields=["x","y","cells","name","isShared","acid","limits","customSharedData","prioritization"];return _(update).each(function(v,k){var isPublic=_.indexOf(publicFields,k)!==-1,field=isPublic?"public":"user";requestRef[field+"Data"][k]=v}),requestRef},createBoardSpecificStorageAsyncSource=function(serviceContainer,settings){var storage=serviceContainer.getRestStorage();return new AsyncSourceAdapter({onGet:function(cmd){storage.data(settings.groupName,settings.id).done(function(result){var r=result.data||{},publicData=r.publicData||{},userData=r.userData||{},data=r;_.extend(data,publicData,userData);var fields={};for(var i=0;i<cmd.fields.length;i++){var fieldName=cmd.fields[i];data.hasOwnProperty(fieldName)&&(fields[fieldName]=data[fieldName])}cmd.callback(fields)})},onSet:function(cmd){var set=cmd.set;set.isDraft=!1;var requestBody={scope:"Public"};applyBoardSettingsSchema(set,requestBody),storage.data(settings.groupName,settings.id,requestBody).done(function(){cmd.callback(set)})},onBind:function(){},onUnbind:function(){}})};return{create:createBoardSpecificStorageAsyncSource}})