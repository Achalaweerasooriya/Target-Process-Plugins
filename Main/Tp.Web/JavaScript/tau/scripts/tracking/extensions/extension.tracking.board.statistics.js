define(["./extension.tracking.base","Underscore"],function(Extension,_){return Extension.extend({"global application.navigate.entity + application.entity.loaded":function(evtHash,entity){var startEvent=evtHash["application.navigate.entity"],endEvent=evtHash["application.entity.loaded"];if(startEvent.caller.id!=endEvent.caller.id||!entity)return;var loadTime=endEvent.date-startEvent.date,entityType=entity.type||entity.entity,data={statistics_view:{loadTime:loadTime,entity:{id:entity.id,type:(entityType||"unknown").toLowerCase()}}};this.fire("track.node",data)},"global start.lifecycle + overview.board.ready + board.paging.settings + model.cells.content.loaded":function(evtHash){var startEvent=evtHash["start.lifecycle"],endEvent=evtHash["overview.board.ready"],paging=evtHash["board.paging.settings"].data,cells=evtHash["model.cells.content.loaded"].data;if(startEvent.caller.id!=endEvent.caller.id)return;var loadTime=endEvent.date-startEvent.date,cardsCount=0;_.each(cells.data.items,function(item){cardsCount+=item.dynamic.items.length});var ignoreKeys=["viewMode","x","y","cells","global","boardId"],board=this.makePlainCleanObject(this.getBoardContext(paging.definition),paging.definition,null,ignoreKeys),data={loadTime:loadTime,page:{current:_.extend({},paging.page),size:{x:paging.x.onPage,y:paging.y.onPage},total:{x:paging.x.totalPages,y:paging.y.totalPages}},cardsCount:cardsCount,board:board};this.fire("track.statistics",data)}})})