/**
 * QUnit v1.3.0pre - A JavaScript Unit Testing Framework
 *
 * http://docs.jquery.com/QUnit
 *
 * Copyright (c) 2011 John Resig, Jörn Zaefferer
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * or GPL (GPL-LICENSE.txt) licenses.
 */

/**
 * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |
 * http://flesler.blogspot.com Licensed under BSD
 * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008
 *
 * @projectDescription Advanced and extensible data dumping for Javascript.
 * @version 1.0.0
 * @author Ariel Flesler
 * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}
 */

/*
 * Javascript Diff Algorithm
 *  By John Resig (http://ejohn.org/)
 *  Modified by Chu Alan "sprite"
 *
 * Released under the MIT license.
 *
 * More Info:
 *  http://ejohn.org/projects/javascript-diff-algorithm/
 *
 * Usage: QUnit.diff(expected, actual)
 *
 * QUnit.diff("the quick brown fox jumped over", "the quick fox jumps over") == "the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over"
 */

(function(window){function done(){config.autorun=!0,config.currentModule&&runLoggingCallbacks("moduleDone",QUnit,{name:config.currentModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all});var banner=id("qunit-banner"),tests=id("qunit-tests"),runtime=+(new Date)-config.started,passed=config.stats.all-config.stats.bad,html=["Tests completed in ",runtime," milliseconds.<br/>",'<span class="passed">',passed,'</span> tests of <span class="total">',config.stats.all,'</span> passed, <span class="failed">',config.stats.bad,"</span> failed."].join("");banner&&(banner.className=config.stats.bad?"qunit-fail":"qunit-pass"),tests&&(id("qunit-testresult").innerHTML=html),config.altertitle&&typeof document!="undefined"&&document.title&&(document.title=[config.stats.bad?"✖":"✔",document.title.replace(/^[\u2714\u2716] /i,"")].join(" ")),runLoggingCallbacks("done",QUnit,{failed:config.stats.bad,passed:passed,total:config.stats.all,runtime:runtime})}function validTest(name){var filter=config.filter,run=!1;if(!filter)return!0;var not=filter.charAt(0)==="!";return not&&(filter=filter.slice(1)),name.indexOf(filter)!==-1?!not:(not&&(run=!0),run)}function sourceFromStacktrace(){try{throw new Error}catch(e){if(e.stacktrace)return e.stacktrace.split("\n")[6];if(e.stack)return e.stack.split("\n")[4];!e.sourceURL}}function escapeInnerText(s){return s?(s+="",s.replace(/[\&<>]/g,function(s){switch(s){case"&":return"&amp;";case"<":return"&lt;";case">":return"&gt;";default:return s}})):""}function synchronize(callback,last){config.queue.push(callback),config.autorun&&!config.blocking&&process(last)}function process(last){var start=(new Date).getTime();config.depth=config.depth?config.depth+1:1;while(config.queue.length&&!config.blocking){if(!(!defined.setTimeout||config.updateRate<=0||(new Date).getTime()-start<config.updateRate)){window.setTimeout(function(){process(last)},13);break}config.queue.shift()()}config.depth--,last&&!config.blocking&&!config.queue.length&&config.depth===0&&done()}function saveGlobal(){config.pollution=[];if(config.noglobals)for(var key in window){if(!hasOwn.call(window,key))continue;config.pollution.push(key)}}function checkPollution(name){var old=config.pollution;saveGlobal();var newGlobals=diff(config.pollution,old);newGlobals.length>0&&ok(!1,"Introduced global variable(s): "+newGlobals.join(", "));var deletedGlobals=diff(old,config.pollution);deletedGlobals.length>0&&ok(!1,"Deleted global variable(s): "+deletedGlobals.join(", "))}function diff(a,b){var result=a.slice();for(var i=0;i<result.length;i++)for(var j=0;j<b.length;j++)if(result[i]===b[j]){result.splice(i,1),i--;break}return result}function fail(message,exception,callback){typeof console!="undefined"&&console.error&&console.warn?(console.error(message),console.error(exception),console.error(exception.stack),console.warn(callback.toString())):window.opera&&opera.postError&&opera.postError(message,exception,callback.toString)}function extend(a,b){for(var prop in b)if(b[prop]===undefined)delete a[prop];else if(prop!=="constructor"||a!==window)a[prop]=b[prop];return a}function addEvent(elem,type,fn){elem.addEventListener?elem.addEventListener(type,fn,!1):elem.attachEvent?elem.attachEvent("on"+type,fn):fn()}function id(name){return typeof document!="undefined"&&!!document&&!!document.getElementById&&document.getElementById(name)}function registerLoggingCallback(key){return function(callback){config[key].push(callback)}}function runLoggingCallbacks(key,scope,args){var callbacks;if(QUnit.hasOwnProperty(key))QUnit[key].call(scope,args);else{callbacks=config[key];for(var i=0;i<callbacks.length;i++)callbacks[i].call(scope,args)}}function getText(elems){var ret="",elem;for(var i=0;elems[i];i++)elem=elems[i],elem.nodeType===3||elem.nodeType===4?ret+=elem.nodeValue:elem.nodeType!==8&&(ret+=getText(elem.childNodes));return ret}function inArray(elem,array){if(array.indexOf)return array.indexOf(elem);for(var i=0,length=array.length;i<length;i++)if(array[i]===elem)return i;return-1}var defined={setTimeout:typeof window.setTimeout!="undefined",sessionStorage:function(){try{return!!sessionStorage.getItem}catch(e){return!1}}()},testId=0,toString=Object.prototype.toString,hasOwn=Object.prototype.hasOwnProperty,Test=function(name,testName,expected,testEnvironmentArg,async,callback){this.name=name,this.testName=testName,this.expected=expected,this.testEnvironmentArg=testEnvironmentArg,this.async=async,this.callback=callback,this.assertions=[]};Test.prototype={init:function(){var tests=id("qunit-tests");if(tests){var b=document.createElement("strong");b.innerHTML="Running "+this.name;var li=document.createElement("li");li.appendChild(b),li.className="running",li.id=this.id="test-output"+testId++,tests.appendChild(li)}},setup:function(){this.module!=config.previousModule&&(config.previousModule&&runLoggingCallbacks("moduleDone",QUnit,{name:config.previousModule,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all}),config.previousModule=this.module,config.moduleStats={all:0,bad:0},runLoggingCallbacks("moduleStart",QUnit,{name:this.module})),config.current=this,this.testEnvironment=extend({setup:function(){},teardown:function(){}},this.moduleTestEnvironment),this.testEnvironmentArg&&extend(this.testEnvironment,this.testEnvironmentArg),runLoggingCallbacks("testStart",QUnit,{name:this.testName,module:this.module}),QUnit.current_testEnvironment=this.testEnvironment;try{config.pollution||saveGlobal(),this.testEnvironment.setup.call(this.testEnvironment)}catch(e){QUnit.ok(!1,"Setup failed on "+this.testName+": "+e.message)}},run:function(){config.current=this,this.async&&QUnit.stop();if(config.notrycatch){this.callback.call(this.testEnvironment);return}try{this.callback.call(this.testEnvironment)}catch(e){fail("Test "+this.testName+" died, exception and test follows",e,this.callback),QUnit.ok(!1,"Died on test #"+(this.assertions.length+1)+": "+e.message+" - "+QUnit.jsDump.parse(e)),saveGlobal(),config.blocking&&QUnit.start()}},teardown:function(){config.current=this;try{this.testEnvironment.teardown.call(this.testEnvironment),checkPollution()}catch(e){QUnit.ok(!1,"Teardown failed on "+this.testName+": "+e.message)}},finish:function(){config.current=this,this.expected!=null&&this.expected!=this.assertions.length&&QUnit.ok(!1,"Expected "+this.expected+" assertions, but "+this.assertions.length+" were run");var good=0,bad=0,tests=id("qunit-tests");config.stats.all+=this.assertions.length,config.moduleStats.all+=this.assertions.length;if(tests){var ol=document.createElement("ol");for(var i=0;i<this.assertions.length;i++){var assertion=this.assertions[i],li=document.createElement("li");li.className=assertion.result?"pass":"fail",li.innerHTML=assertion.message||(assertion.result?"okay":"failed"),ol.appendChild(li),assertion.result?good++:(bad++,config.stats.bad++,config.moduleStats.bad++)}QUnit.config.reorder&&defined.sessionStorage&&(bad?sessionStorage.setItem("qunit-"+this.module+"-"+this.testName,bad):sessionStorage.removeItem("qunit-"+this.module+"-"+this.testName)),bad==0&&(ol.style.display="none");var b=document.createElement("strong");b.innerHTML=this.name+" <b class='counts'>(<b class='failed'>"+bad+"</b>, <b class='passed'>"+good+"</b>, "+this.assertions.length+")</b>";var a=document.createElement("a");a.innerHTML="Rerun",a.href=QUnit.url({filter:getText([b]).replace(/\([^)]+\)$/,"").replace(/(^\s*|\s*$)/g,"")}),addEvent(b,"click",function(){var next=b.nextSibling.nextSibling,display=next.style.display;next.style.display=display==="none"?"block":"none"}),addEvent(b,"dblclick",function(e){var target=e&&e.target?e.target:window.event.srcElement;if(target.nodeName.toLowerCase()=="span"||target.nodeName.toLowerCase()=="b")target=target.parentNode;window.location&&target.nodeName.toLowerCase()==="strong"&&(window.location=QUnit.url({filter:getText([target]).replace(/\([^)]+\)$/,"").replace(/(^\s*|\s*$)/g,"")}))});var li=id(this.id);li.className=bad?"fail":"pass",li.removeChild(li.firstChild),li.appendChild(b),li.appendChild(a),li.appendChild(ol)}else for(var i=0;i<this.assertions.length;i++)this.assertions[i].result||(bad++,config.stats.bad++,config.moduleStats.bad++);try{QUnit.reset()}catch(e){fail("reset() failed, following Test "+this.testName+", exception and reset fn follows",e,QUnit.reset)}runLoggingCallbacks("testDone",QUnit,{name:this.testName,module:this.module,failed:bad,passed:this.assertions.length-bad,total:this.assertions.length})},queue:function(){function run(){synchronize(function(){test.setup()}),synchronize(function(){test.run()}),synchronize(function(){test.teardown()}),synchronize(function(){test.finish()})}var test=this;synchronize(function(){test.init()});var bad=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-"+this.module+"-"+this.testName);bad?run():synchronize(run,!0)}};var QUnit={module:function(name,testEnvironment){config.currentModule=name,config.currentModuleTestEnviroment=testEnvironment},asyncTest:function(testName,expected,callback){arguments.length===2&&(callback=expected,expected=null),QUnit.test(testName,expected,callback,!0)},test:function(testName,expected,callback,async){var name='<span class="test-name">'+escapeInnerText(testName)+"</span>",testEnvironmentArg;arguments.length===2&&(callback=expected,expected=null),expected&&typeof expected=="object"&&(testEnvironmentArg=expected,expected=null),config.currentModule&&(name='<span class="module-name">'+config.currentModule+"</span>: "+name);if(!validTest(config.currentModule+": "+testName))return;var test=new Test(name,testName,expected,testEnvironmentArg,async,callback);test.module=config.currentModule,test.moduleTestEnvironment=config.currentModuleTestEnviroment,test.queue()},expect:function(asserts){config.current.expected=asserts},ok:function(a,msg){a=!!a;var details={result:a,message:msg};msg=escapeInnerText(msg),runLoggingCallbacks("log",QUnit,details),config.current.assertions.push({result:a,message:msg})},equal:function(actual,expected,message){QUnit.push(expected==actual,actual,expected,message)},notEqual:function(actual,expected,message){QUnit.push(expected!=actual,actual,expected,message)},deepEqual:function(actual,expected,message){QUnit.push(QUnit.equiv(actual,expected),actual,expected,message)},notDeepEqual:function(actual,expected,message){QUnit.push(!QUnit.equiv(actual,expected),actual,expected,message)},strictEqual:function(actual,expected,message){QUnit.push(expected===actual,actual,expected,message)},notStrictEqual:function(actual,expected,message){QUnit.push(expected!==actual,actual,expected,message)},raises:function(block,expected,message){var actual,ok=!1;typeof expected=="string"&&(message=expected,expected=null);try{block()}catch(e){actual=e}actual&&(expected?QUnit.objectType(expected)==="regexp"?ok=expected.test(actual):actual instanceof expected?ok=!0:expected.call({},actual)===!0&&(ok=!0):ok=!0),QUnit.ok(ok,message)},start:function(count){config.semaphore-=count||1;if(config.semaphore>0)return;config.semaphore<0&&(config.semaphore=0),defined.setTimeout?window.setTimeout(function(){if(config.semaphore>0)return;config.timeout&&clearTimeout(config.timeout),config.blocking=!1,process(!0)},13):(config.blocking=!1,process(!0))},stop:function(count){config.semaphore+=count||1,config.blocking=!0,config.testTimeout&&defined.setTimeout&&(clearTimeout(config.timeout),config.timeout=window.setTimeout(function(){QUnit.ok(!1,"Test timed out"),config.semaphore=1,QUnit.start()},config.testTimeout))}};(function(){function F(){}F.prototype=QUnit,QUnit=new F,QUnit.constructor=F})(),QUnit.equals=QUnit.equal,QUnit.same=QUnit.deepEqual;var config={queue:[],blocking:!0,hidepassed:!1,reorder:!0,altertitle:!0,urlConfig:["noglobals","notrycatch"],begin:[],done:[],log:[],testStart:[],testDone:[],moduleStart:[],moduleDone:[]};(function(){var location=window.location||{search:"",protocol:"file:"},params=location.search.slice(1).split("&"),length=params.length,urlParams={},current;if(params[0])for(var i=0;i<length;i++)current=params[i].split("="),current[0]=decodeURIComponent(current[0]),current[1]=current[1]?decodeURIComponent(current[1]):!0,urlParams[current[0]]=current[1];QUnit.urlParams=urlParams,config.filter=urlParams.filter,QUnit.isLocal=location.protocol==="file:"})(),typeof exports=="undefined"||typeof require=="undefined"?(extend(window,QUnit),window.QUnit=QUnit):(extend(exports,QUnit),exports.QUnit=QUnit),extend(QUnit,{config:config,init:function(){extend(config,{stats:{all:0,bad:0},moduleStats:{all:0,bad:0},started:+(new Date),updateRate:1e3,blocking:!1,autostart:!0,autorun:!1,filter:"",queue:[],semaphore:0});var tests=id("qunit-tests"),banner=id("qunit-banner"),result=id("qunit-testresult");tests&&(tests.innerHTML=""),banner&&(banner.className=""),result&&result.parentNode.removeChild(result),tests&&(result=document.createElement("p"),result.id="qunit-testresult",result.className="result",tests.parentNode.insertBefore(result,tests),result.innerHTML="Running...<br/>&nbsp;")},reset:function(){if(window.jQuery)jQuery("#qunit-fixture").html(config.fixture);else{var main=id("qunit-fixture");main&&(main.innerHTML=config.fixture)}},triggerEvent:function(elem,type,event){document.createEvent?(event=document.createEvent("MouseEvents"),event.initMouseEvent(type,!0,!0,elem.ownerDocument.defaultView,0,0,0,0,0,!1,!1,!1,!1,0,null),elem.dispatchEvent(event)):elem.fireEvent&&elem.fireEvent("on"+type)},is:function(type,obj){return QUnit.objectType(obj)==type},objectType:function(obj){if(typeof obj=="undefined")return"undefined";if(obj===null)return"null";var type=toString.call(obj).match(/^\[object\s(.*)\]$/)[1]||"";switch(type){case"Number":return isNaN(obj)?"nan":"number";case"String":case"Boolean":case"Array":case"Date":case"RegExp":case"Function":return type.toLowerCase()}return typeof obj=="object"?"object":undefined},push:function(result,actual,expected,message){var details={result:result,message:message,actual:actual,expected:expected};message=escapeInnerText(message)||(result?"okay":"failed"),message='<span class="test-message">'+message+"</span>",expected=escapeInnerText(QUnit.jsDump.parse(expected)),actual=escapeInnerText(QUnit.jsDump.parse(actual));var output=message+'<table><tr class="test-expected"><th>Expected: </th><td><pre>'+expected+"</pre></td></tr>";actual!=expected&&(output+='<tr class="test-actual"><th>Result: </th><td><pre>'+actual+"</pre></td></tr>",output+='<tr class="test-diff"><th>Diff: </th><td><pre>'+QUnit.diff(expected,actual)+"</pre></td></tr>");if(!result){var source=sourceFromStacktrace();source&&(details.source=source,output+='<tr class="test-source"><th>Source: </th><td><pre>'+escapeInnerText(source)+"</pre></td></tr>")}output+="</table>",runLoggingCallbacks("log",QUnit,details),config.current.assertions.push({result:!!result,message:output})},url:function(params){params=extend(extend({},QUnit.urlParams),params);var querystring="?",key;for(key in params){if(!hasOwn.call(params,key))continue;querystring+=encodeURIComponent(key)+"="+encodeURIComponent(params[key])+"&"}return window.location.pathname+querystring.slice(0,-1)},extend:extend,id:id,addEvent:addEvent}),extend(QUnit.constructor.prototype,{begin:registerLoggingCallback("begin"),done:registerLoggingCallback("done"),log:registerLoggingCallback("log"),testStart:registerLoggingCallback("testStart"),testDone:registerLoggingCallback("testDone"),moduleStart:registerLoggingCallback("moduleStart"),moduleDone:registerLoggingCallback("moduleDone")});if(typeof document=="undefined"||document.readyState==="complete")config.autorun=!0;QUnit.load=function(){runLoggingCallbacks("begin",QUnit,{});var oldconfig=extend({},config);QUnit.init(),extend(config,oldconfig),config.blocking=!1;var urlConfigHtml="",len=config.urlConfig.length;for(var i=0,val;i<len,val=config.urlConfig[i];i++)config[val]=QUnit.urlParams[val],urlConfigHtml+='<label><input name="'+val+'" type="checkbox"'+(config[val]?' checked="checked"':"")+">"+val+"</label>";var userAgent=id("qunit-userAgent");userAgent&&(userAgent.innerHTML=navigator.userAgent);var banner=id("qunit-header");banner&&(banner.innerHTML='<a href="'+QUnit.url({filter:undefined})+'"> '+banner.innerHTML+"</a> "+urlConfigHtml,addEvent(banner,"change",function(event){var params={};params[event.target.name]=event.target.checked?!0:undefined,window.location=QUnit.url(params)}));var toolbar=id("qunit-testrunner-toolbar");if(toolbar){var filter=document.createElement("input");filter.type="checkbox",filter.id="qunit-filter-pass",addEvent(filter,"click",function(){var ol=document.getElementById("qunit-tests");if(filter.checked)ol.className=ol.className+" hidepass";else{var tmp=" "+ol.className.replace(/[\n\t\r]/g," ")+" ";ol.className=tmp.replace(/ hidepass /," ")}defined.sessionStorage&&(filter.checked?sessionStorage.setItem("qunit-filter-passed-tests","true"):sessionStorage.removeItem("qunit-filter-passed-tests"))});if(config.hidepassed||defined.sessionStorage&&sessionStorage.getItem("qunit-filter-passed-tests")){filter.checked=!0;var ol=document.getElementById("qunit-tests");ol.className=ol.className+" hidepass"}toolbar.appendChild(filter);var label=document.createElement("label");label.setAttribute("for","qunit-filter-pass"),label.innerHTML="Hide passed tests",toolbar.appendChild(label)}var main=id("qunit-fixture");main&&(config.fixture=main.innerHTML),config.autostart&&QUnit.start()},addEvent(window,"load",QUnit.load),window.onerror=function(message,file,line){QUnit.config.current?ok(!1,message+", "+file+":"+line):test("global failure",function(){ok(!1,message+", "+file+":"+line)})},QUnit.equiv=function(){function bindCallbacks(o,callbacks,args){var prop=QUnit.objectType(o);if(prop)return QUnit.objectType(callbacks[prop])==="function"?callbacks[prop].apply(callbacks,args):callbacks[prop]}var innerEquiv,callers=[],parents=[],getProto=Object.getPrototypeOf||function(obj){return obj.__proto__},callbacks=function(){function useStrictEquality(b,a){return b instanceof a.constructor||a instanceof b.constructor?a==b:a===b}return{string:useStrictEquality,"boolean":useStrictEquality,number:useStrictEquality,"null":useStrictEquality,"undefined":useStrictEquality,nan:function(b){return isNaN(b)},date:function(b,a){return QUnit.objectType(b)==="date"&&a.valueOf()===b.valueOf()},regexp:function(b,a){return QUnit.objectType(b)==="regexp"&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline},"function":function(){var caller=callers[callers.length-1];return caller!==Object&&typeof caller!="undefined"},array:function(b,a){var i,j,loop,len;if(QUnit.objectType(b)!=="array")return!1;len=a.length;if(len!==b.length)return!1;parents.push(a);for(i=0;i<len;i++){loop=!1;for(j=0;j<parents.length;j++)parents[j]===a[i]&&(loop=!0);if(!loop&&!innerEquiv(a[i],b[i]))return parents.pop(),!1}return parents.pop(),!0},object:function(b,a){var i,j,loop,eq=!0,aProperties=[],bProperties=[];if(a.constructor===b.constructor||getProto(a)===null&&getProto(b)===Object.prototype||getProto(b)===null&&getProto(a)===Object.prototype){callers.push(a.constructor),parents.push(a);for(i in a){loop=!1;for(j=0;j<parents.length;j++)parents[j]===a[i]&&(loop=!0);aProperties.push(i);if(!loop&&!innerEquiv(a[i],b[i])){eq=!1;break}}callers.pop(),parents.pop();for(i in b)bProperties.push(i);return eq&&innerEquiv(aProperties.sort(),bProperties.sort())}return!1}}}();return innerEquiv=function(){var args=Array.prototype.slice.apply(arguments);return args.length<2?!0:function(a,b){return a===b?!0:a===null||b===null||typeof a=="undefined"||typeof b=="undefined"||QUnit.objectType(a)!==QUnit.objectType(b)?!1:bindCallbacks(a,callbacks,[b,a])}(args[0],args[1])&&arguments.callee.apply(this,args.splice(1,args.length-1))},innerEquiv}(),QUnit.jsDump=function(){function quote(str){return'"'+str.toString().replace(/"/g,'\\"')+'"'}function literal(o){return o+""}function join(pre,arr,post){var s=jsDump.separator(),base=jsDump.indent(),inner=jsDump.indent(1);return arr.join&&(arr=arr.join(","+s+inner)),arr?[pre,inner+arr,base+post].join(s):pre+post}function array(arr,stack){var i=arr.length,ret=Array(i);this.up();while(i--)ret[i]=this.parse(arr[i],undefined,stack);return this.down(),join("[",ret,"]")}var reName=/^function (\w+)/,jsDump={parse:function(obj,type,stack){stack=stack||[];var parser=this.parsers[type||this.typeOf(obj)];type=typeof parser;var inStack=inArray(obj,stack);if(inStack!=-1)return"recursion("+(inStack-stack.length)+")";if(type=="function"){stack.push(obj);var res=parser.call(this,obj,stack);return stack.pop(),res}return type=="string"?parser:this.parsers.error},typeOf:function(obj){var type;return obj===null?type="null":typeof obj=="undefined"?type="undefined":QUnit.is("RegExp",obj)?type="regexp":QUnit.is("Date",obj)?type="date":QUnit.is("Function",obj)?type="function":typeof obj.setInterval!==undefined&&typeof obj.document!="undefined"&&typeof obj.nodeType=="undefined"?type="window":obj.nodeType===9?type="document":obj.nodeType?type="node":toString.call(obj)==="[object Array]"||typeof obj.length=="number"&&typeof obj.item!="undefined"&&(obj.length?obj.item(0)===obj[0]:obj.item(0)===null&&typeof obj[0]=="undefined")?type="array":type=typeof obj,type},separator:function(){return this.multiline?this.HTML?"<br />":"\n":this.HTML?"&nbsp;":" "},indent:function(extra){if(!this.multiline)return"";var chr=this.indentChar;return this.HTML&&(chr=chr.replace(/\t/g,"   ").replace(/ /g,"&nbsp;")),Array(this._depth_+(extra||0)).join(chr)},up:function(a){this._depth_+=a||1},down:function(a){this._depth_-=a||1},setParser:function(name,parser){this.parsers[name]=parser},quote:quote,literal:literal,join:join,_depth_:1,parsers:{window:"[Window]",document:"[Document]",error:"[ERROR]",unknown:"[Unknown]","null":"null","undefined":"undefined","function":function(fn){var ret="function",name="name"in fn?fn.name:(reName.exec(fn)||[])[1];return name&&(ret+=" "+name),ret+="(",ret=[ret,QUnit.jsDump.parse(fn,"functionArgs"),"){"].join(""),join(ret,QUnit.jsDump.parse(fn,"functionCode"),"}")},array:array,nodelist:array,arguments:array,object:function(map,stack){var ret=[];QUnit.jsDump.up();for(var key in map){var val=map[key];ret.push(QUnit.jsDump.parse(key,"key")+": "+QUnit.jsDump.parse(val,undefined,stack))}return QUnit.jsDump.down(),join("{",ret,"}")},node:function(node){var open=QUnit.jsDump.HTML?"&lt;":"<",close=QUnit.jsDump.HTML?"&gt;":">",tag=node.nodeName.toLowerCase(),ret=open+tag;for(var a in QUnit.jsDump.DOMAttrs){var val=node[QUnit.jsDump.DOMAttrs[a]];val&&(ret+=" "+a+"="+QUnit.jsDump.parse(val,"attribute"))}return ret+close+open+"/"+tag+close},functionArgs:function(fn){var l=fn.length;if(!l)return"";var args=Array(l);while(l--)args[l]=String.fromCharCode(97+l);return" "+args.join(", ")+" "},key:quote,functionCode:"[code]",attribute:quote,string:quote,date:quote,regexp:literal,number:literal,"boolean":literal},DOMAttrs:{id:"id",name:"name","class":"className"},HTML:!1,indentChar:"  ",multiline:!0};return jsDump}(),QUnit.diff=function(){function diff(o,n){var ns={},os={};for(var i=0;i<n.length;i++)ns[n[i]]==null&&(ns[n[i]]={rows:[],o:null}),ns[n[i]].rows.push(i);for(var i=0;i<o.length;i++)os[o[i]]==null&&(os[o[i]]={rows:[],n:null}),os[o[i]].rows.push(i);for(var i in ns){if(!hasOwn.call(ns,i))continue;ns[i].rows.length==1&&typeof os[i]!="undefined"&&os[i].rows.length==1&&(n[ns[i].rows[0]]={text:n[ns[i].rows[0]],row:os[i].rows[0]},o[os[i].rows[0]]={text:o[os[i].rows[0]],row:ns[i].rows[0]})}for(var i=0;i<n.length-1;i++)n[i].text!=null&&n[i+1].text==null&&n[i].row+1<o.length&&o[n[i].row+1].text==null&&n[i+1]==o[n[i].row+1]&&(n[i+1]={text:n[i+1],row:n[i].row+1},o[n[i].row+1]={text:o[n[i].row+1],row:i+1});for(var i=n.length-1;i>0;i--)n[i].text!=null&&n[i-1].text==null&&n[i].row>0&&o[n[i].row-1].text==null&&n[i-1]==o[n[i].row-1]&&(n[i-1]={text:n[i-1],row:n[i].row-1},o[n[i].row-1]={text:o[n[i].row-1],row:i-1});return{o:o,n:n}}return function(o,n){o=o.replace(/\s+$/,""),n=n.replace(/\s+$/,"");var out=diff(o==""?[]:o.split(/\s+/),n==""?[]:n.split(/\s+/)),str="",oSpace=o.match(/\s+/g);oSpace==null?oSpace=[" "]:oSpace.push(" ");var nSpace=n.match(/\s+/g);nSpace==null?nSpace=[" "]:nSpace.push(" ");if(out.n.length==0)for(var i=0;i<out.o.length;i++)str+="<del>"+out.o[i]+oSpace[i]+"</del>";else{if(out.n[0].text==null)for(n=0;n<out.o.length&&out.o[n].text==null;n++)str+="<del>"+out.o[n]+oSpace[n]+"</del>";for(var i=0;i<out.n.length;i++)if(out.n[i].text==null)str+="<ins>"+out.n[i]+nSpace[i]+"</ins>";else{var pre="";for(n=out.n[i].row+1;n<out.o.length&&out.o[n].text==null;n++)pre+="<del>"+out.o[n]+oSpace[n]+"</del>";str+=" "+out.n[i].text+nSpace[i]+pre}}return str}}()})(this)