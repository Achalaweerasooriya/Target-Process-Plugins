define(["Underscore","tau/core/extension.base","tp/reports/settings/definitionBuilder"],function(_,BaseModel,DefinitionBuilder){var storageGroup="settings",storageName="timeDistributionChart",Model=BaseModel.extend({"bus beforeInit":function(e,initData){var configurator=initData.config.context.configurator;this.fire("configurator.ready",configurator),configurator.getRestStorage().data(storageGroup,storageName).done(_.bind(function(data){if(!data.data||!data.data.userData||!data.data.userData.scale){this.fire("model.ready",this.defaultData);return}this.fire("model.ready",data.data.userData)},this))},defaultData:{scale:"cycleTime",entities:["userstory","bug"],filter:"?EndDate > Today - 180(days)"},"bus configurator.ready:last > formData.changed":function(e,configurator,data){function prop(key){return function(d){return d[key]}}function fnProperty(key,label){return{map:prop(key),label:label}}function fnNothing(label){return{map:$.noop,label:label}}var settings={scale:data.time.key,filter:data.filter,entities:JSON.stringify(_.reduce(data.entities,function(memo,d){return memo.push(d.id),memo},[]))};configurator.getRestStorage().data(storageGroup,storageName,{scope:"Public",userData:settings}).done();var self=this;configurator.getAppStateStore().get({fields:["acid"],callback:function(r){var settings={strategy:"all",parameters:DefinitionBuilder.getWithLeadAndCycleTime(data,r.acid),mapping:{y:fnProperty(data.time.key,"% of all entities"),x:fnNothing(data.time.label),fill:fnProperty("type")}};self.fire("settings.changed",settings)}})}});return Model})