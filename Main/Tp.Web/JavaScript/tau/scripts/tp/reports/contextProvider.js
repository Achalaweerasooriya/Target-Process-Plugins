define(["Underscore","tau/core/termProcessor"],function(_,TermProcessor){function ContextProvider(context){this.context=context,this.context&&this.context.applicationContext&&this.context.getTerms?this.termProcessor=new TermProcessor(config.context.getTerms()):this.termProcessor=new TermProcessor}return ContextProvider.prototype={onReady:function(callback){callback()},_exceptNulls:function(arr){return _.filter(arr,function(value){return value!="null"})},getProjectIds:function(){return this._exceptNulls(this.context.selectedProjectIds)},getTeamIds:function(){return this._exceptNulls(this.context.selectedTeamIds)},getBugsTerm:function(){return this.termProcessor.getTerms("Bug").names.toLowerCase()},getIterationTerm:function(){return this.termProcessor.getTerms("Iteration").name},getReleaseTerm:function(){return this.termProcessor.getTerms("Release").name},setCurrentProject:function(id){},getTermProcessorForCurrentProject:function(){return this.termProcessor},getTerms:function(type){return this.termProcessor.getTerms(type)},getTerm:function(type,count){var terms=this.getTerms(type);return count==1?terms.name:terms.names},isPracticeAvailable:function(name){return _.any(this.context.processes,function(process){return _.any(process.practices,function(practice){return practice.name==name})})}},ContextProvider})