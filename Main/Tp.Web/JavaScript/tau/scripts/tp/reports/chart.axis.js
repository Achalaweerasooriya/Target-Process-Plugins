define(["libs/d3/d3"],function(d3){var axis=function(axisMargin){function call(target){call.d3axis.apply(this.d3axis,arguments),call.transform.apply(call.transform,arguments),call.axis.apply(call.axis,arguments),call.tick.apply(call.tick,arguments),call.label.apply(call.label,arguments),call.additionalAxis.apply(call.additionalAxis,arguments)}var xTickPadding=10;return call.d3axis=d3.svg.axis(),call.transform=function(){},call.axis=function(){},call.tick=function(d){d.selectAll("g").attr("class","axisLabel");var data=d.selectAll(".tick")[0].map(function(d1){var item=d3.select(d1);return{x2:item.attr("x2"),transform:item.attr("transform")}}).concat(d.selectAll("g.axisLabel")[0].map(function(d2){var item=d3.select(d2);return{x2:item.select("line.tick").attr("x2"),transform:item.attr("transform")}}));d.selectAll(".tick").attr("y1",-axisMargin).attr("y2",function(){return parseFloat(d3.select(this).attr("y2"))-axisMargin}),d.selectAll(".smallAxisTick").remove();var smallAxisTicks=d.selectAll(".smallAxisTick").data(data.filter(function(d){return d.transform}));smallAxisTicks.enter().append("line").attr("x2",function(d1){return d1.x2}).attr("y2",6).attr("transform",function(d1){return d1.transform}).attr("class","smallAxisTick")},call.label=function(){},call.scale=function(scale){return this.d3axis.scale(scale),call},call.additionalAxis=function(){},call.orient=function(options){switch(options.type){case"x-grid":var tickSize=options.margin-options.height;return call.d3axis.orient("bottom").tickSize(tickSize,options.margin-options.height,0).tickPadding(10),call.transform=function(d){d.attr("transform","translate(0,"+(options.height+axisMargin)+")")},call.axis=function(d){d.select("path").attr("d",function(){var d=d3.select(this).attr("d"),idx=/M\D*\d+\D*/.exec(d)[0].length-1,x=parseFloat(d.substr(1,idx-1));return"M"+(x-axisMargin)+d.substr(idx)})},call.label=function(d){var label=d3.select(d.selectAll(".axisLabel text")[0][0]);d.selectAll("text.axisLabel").attr("transform","translate("+(call.d3axis.scale().range()[1]+options.margin/4)+", "+0+")").attr("y",label.attr("y")).attr("dy",label.attr("dy")).text(options.label)},call.additionalAxis=function(d){d.selectAll("line.additionalAxis").attr("x1",call.d3axis.scale().range()[0]-axisMargin).attr("x2",call.d3axis.scale().range()[1]).attr("y1",options.margin-options.height-axisMargin).attr("y2",options.margin-options.height-axisMargin)},call;case"y-grid":var tickSize=-options.width+options.margin;return call.d3axis.orient("left").tickSize(tickSize,tickSize,0).tickPadding(xTickPadding),call.transform=function(d){d.attr("transform","translate("+(options.margin-axisMargin)+", 0)")},call.axis=function(d){d.select("path").attr("d",function(){var d=d3.select(this).attr("d"),indexOfV=d.indexOf("V"),indexOfH=d.indexOf("H",indexOfV),coord=parseFloat(d.substr(indexOfV+1,indexOfH-indexOfV-1))+axisMargin;return d.substr(0,indexOfV+1)+coord+d.substr(indexOfH)})},call.tick=function(d){d.selectAll("g").attr("class","axisLabel"),d.selectAll(".tick").attr("dx",options.margin*.5).attr("x1",axisMargin).attr("x2",function(){return parseFloat(d3.select(this).attr("x2"))+axisMargin});var data=d.selectAll(".tick")[0].map(function(d1){var item=d3.select(d1);return{y2:item.attr("y2"),transform:item.attr("transform")}}).concat(d.selectAll("g.axisLabel")[0].map(function(d2){var item=d3.select(d2);return{y2:item.select("line.tick").attr("y2"),transform:item.attr("transform")}}));d.selectAll(".smallAxisTick").remove();var smallAxisTicks=d.selectAll(".smallAxisTick").data(data.filter(function(d){return d.transform}));smallAxisTicks.enter().append("line").attr("y2",function(d1){return d1.y2}).attr("x2",-6).attr("transform",function(d1){return d1.transform}).attr("class","smallAxisTick")},call.label=function(d){d.selectAll("text.axisLabel").attr("transform","translate("+ -options.margin/2+","+(options.margin-axisMargin+xTickPadding)+")").text(options.label)},call.additionalAxis=function(d){d.selectAll("line.additionalAxis").attr("x1",options.width-options.margin+axisMargin).attr("x2",options.width-options.margin+axisMargin).attr("y1",call.d3axis.scale().range()[0]+axisMargin).attr("y2",call.d3axis.scale().range()[1])},call}},call.tickSubdivide=function(count){return call.d3axis.tickSubdivide(count),call},call.tickFormat=function(format){return call.d3axis.tickFormat(format),call},call};return axis})