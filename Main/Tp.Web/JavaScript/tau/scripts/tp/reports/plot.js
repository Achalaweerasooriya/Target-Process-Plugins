define(["jQuery","libs/d3/d3","app.path"],function($,d3,appPath){function Plot(config){this.height=config.height||600,this.margin=config.margin||30,this.mode=config.mode||"simple",this.detalization=config.detalization||"full",this.charts=config.charts||[],this.legend='<div class="legend-wrapper">\n    <div class="legend-element"><p><i class="img img-actual-progress" />Actual progress</p></div>\n    <div class="legend-element"><p><i class="img img-ideal-line" />Ideal line</p></div>\n    <div class="legend-element"><p><i class="img img-forecast" />Forecast</p></div>\n</div>',this.placeholder=config.placeholder}return Plot.prototype={_initialize:function(dataProvider){this.xAxis=dataProvider.getXAxis(),this.yAxis=dataProvider.getYAxis(),this.yCellSize=this._getYCellSize(this.yAxis.count),this.xCellSize=this._getXCellSize(this.placeholder.width(),this.xAxis.count,this.yCellSize),this.width=this.xAxis.count*this.xCellSize+this.margin*2,this.x=d3.scale.linear().domain([0,this.xAxis.max]).range([0+this.margin,this.width-this.margin]),this.y=d3.scale.linear().domain([0,this.yAxis.max]).range([this.height-this.margin-20,0+this.margin])},_getYCellSize:function(count){return(this.height-this.margin)/count},_getXCellSize:function(placeholderWidth,count,defaultValue){var xSize=defaultValue,width=count*xSize+this.margin*2;return width>placeholderWidth&&(width*.75<placeholderWidth?xSize=(placeholderWidth-this.margin*2)/count:xSize=.75*defaultValue),xSize},render:function(dataProvider){this._initialize(dataProvider),this.placeholder.html("");if(this.xAxis.count==0||dataProvider.filter==null){this.placeholder.html('<div class="_empty empty">\n    <div class="empty-text">\n        <div class="first-line">Not enough data to build this beautiful chart</div>\n        <div class="second-line">Add Release or Iteration and complete some user stories</div>\n    </div>\n</div>').find(".empty").height(this.height).width(1e3);return}this._renderPlot(dataProvider),this._renderCharts(dataProvider),this.placeholder.append(this.legend)},_renderPlot:function(dataProvider){this._createPlot(),this._renderAxes(),this._renderGrid(),this._renderLabels(dataProvider)},_renderAxes:function(){var group=this.createGroup("axes");group.append("line").attr("class","yAxis").attr("y1",this.y(this.yAxis.values[0])).attr("x1",this.x(this.xAxis.values[0])).attr("y2",this.y(this.yAxis.max)).attr("x2",this.x(this.xAxis.values[0])),group.append("line").attr("class","xAxis").attr("x1",this.x(this.xAxis.values[0])).attr("y1",this.y(this.xAxis.values[0])).attr("x2",this.x(this.xAxis.max)).attr("y2",this.y(this.yAxis.values[0]))},_renderGrid:function(){var group=this.createGroup("grid");group.selectAll(".yLine").data(this.y.ticks(this.yAxis.count+1)).enter().append("line").attr("class","yLine").attr("y1",this.y).attr("x1",this.x(this.xAxis.values[0])).attr("y2",this.y).attr("x2",this.x(this.xAxis.max)),group.selectAll(".xLine").data(this.x.ticks(this.xAxis.count)).enter().append("line").attr("class","xLine").attr("x1",this.x).attr("y1",this.y(this.yAxis.values[0])).attr("x2",this.x).attr("y2",this.y(this.yAxis.max))},_renderLabels:function(dataProvider){var group=this.createGroup("labels"),that=this;group.selectAll(".xLabel").data(this.x.ticks(this.xAxis.count)).enter().append("text").attr("class","xLabel").text(this.xAxis.label).attr("x",function(i){return that.x(i)+that.xCellSize/2}).attr("y",this.y(0)+this.margin*.9),group.selectAll(".yLabel").data(this.y.ticks(this.yAxis.count+1)).enter().append("text").attr("class","yLabel").text(this.yAxis.label).attr("x",this.margin-10).attr("y",this.y).attr("dy",4)},_createPlot:function(){this.placeholder.width()<this.width&&this.placeholder.width(this.width),this.plot=d3.select(this.placeholder[0]).append("div").attr("style","height:"+this.height+"px").append("svg").attr("width",this.width).attr("height",this.height)},createGroup:function(name){return this.plot.append("g").attr("class","_"+name)},_renderCharts:function(dataProvider){for(var i=0;i<this.charts.length;i++)this.charts[i].render(this,dataProvider)}},Plot})