define(["libs/d3/d3","tp/date.utils","tp/reports/dataRepository","jQuery"],function(d3,du,DataRepository,$){function DataProvider(){this.dataRepository=new DataRepository({url:"/reports/v1/burnDown"})}return DataProvider.prototype={yAxisPointsCount:10,yRoundTo:10,data:[],initialize:function(filter,callback){var that=this;that.filter=filter,filter?this.dataRepository.get(filter,function(data){that.forecast=data.forecastFinishDate,that.forecastDay=data.forecastDay,that.iterationEndDay=data.iterationEndDay,that.isTitlesProvided=data.isTitlesProvided,that.d3=d3,that.data=data.effort.map(function(d){return{date:{startDate:du.parseFromJSON(d.date.startDate),endDate:du.parseFromJSON(d.date.endDate)},total:that._getTotal(d),effort:d.effort,units:filter.units,forecast:that.forecast!=null?du.parseFromJSON(that.forecast):null,title:d.title,caption:d.caption}}),that.data.length&&that._adjustLastDay(),callback()}):callback()},getLastBurnDownPoint:function(){return $(this.d3.selectAll("line.lineChart")[0]).last()[0]},_getTotal:function(d){var effort=null;return d.effort&&(effort={remained:d3.sum(d.effort,function(d1){return d1.remained}),spent:d3.sum(d.effort,function(d1){return d1.spent}),added:d3.sum(d.effort,function(d1){return d1.added}),removed:d3.sum(d.effort,function(d1){return Math.abs(d1.removed)})},effort.remainedForNextDay=effort.remained+effort.added-effort.spent-effort.removed),effort},_adjustLastDay:function(){for(var i=this.data.length-2;i>0;i--){var nextDatum=this.data[i],datum=this.data[i-1];if(nextDatum.total==null&&datum.total!=null&&!du.between(du.getNow(),datum.date.startDate,datum.date.endDate)){datum.last=!0;return}}},getPlannable:function(d,callback){this.dataRepository.getPlannable(d,callback,$.proxy(function(e){$(this).trigger("data-error",JSON.parse(e.responseText))},this))},getDetails:function(d,callback){var getEffort=function(effort,d,selector){var children=effort.filter(function(item){return item.item.parentId==d.id});d.children=children.map(function(child){var item=child.item;return{id:item.id,name:item.name,effort:selector(child),isDeleted:item.isDeleted,entityType:item.entityType}});var parentEffort=effort.filter(function(item){return item.item.id==d.id})[0];return d.total=d3.sum(d.children.map(function(child){return child.effort}))+(parentEffort?selector(parentEffort):0),d},dataToPost={date:d.date,remained:this._getParentIds(d,function(d){return d.remained}),added:this._getParentIds(d,function(d){return d.added}),removed:this._getParentIds(d,function(d){return d.removed}),spent:this._getParentIds(d,function(d){return d.spent})};this.dataRepository.getDetails(dataToPost,$.proxy(function(data){var processedData={date:d.date,effort:{remained:data.remained.map(function(datum){return getEffort(d.effort,datum,function(d1){return d1.remained})}),added:data.added.map(function(datum){return getEffort(d.effort,datum,function(d1){return d1.added})}),removed:data.removed.map(function(datum){return getEffort(d.effort,datum,function(d1){return d1.removed})}),spent:data.spent.map(function(datum){return getEffort(d.effort,datum,function(d1){return d1.spent})})},total:d.total,units:d.units,forecast:d.forecast,title:d.title,today:data.today};callback(processedData)},this))},_getParentIds:function(d,selector){var ids=d.effort.filter(function(item){return selector(item)}).map(function(item){var parentId=item.item.parentId;return parentId!=null&&parentId>0?parentId:item.item.id}),uniqueParents=[];for(var i=0;i<ids.length;i++){var parentId=ids[i];$.grep(uniqueParents,function(parent){return parent==parentId}).length==0&&uniqueParents.push(parentId)}return uniqueParents},_getYUpperBound:function(){var actualData=this.data.filter(function(d){return d.total});if(actualData.length==0)return 10;var max=d3.max(actualData,function(d){return d.total.remained+d.total.added})||10,order=Math.floor(Math.log(max)/Math.log(this.yRoundTo));order>1&&order--;var order=Math.pow(this.yRoundTo,order),maxValue=Math.ceil(max/order)*order;return maxValue},_getYAxisValues:function(){var max=this._getYUpperBound(),that=this;return d3.range(this.yAxisPointsCount+1).map(function(d){return max/that.yAxisPointsCount*d})},getYAxis:function(){return{label:function(d){return d},values:this._getYAxisValues(),count:this.yAxisPointsCount,max:this._getYUpperBound()}},_getXAxisValuesCount:function(){return this.data.length},getXAxis:function(){var count=this._getXAxisValuesCount();count<0&&(count=0);var that=this;return{label:function(d){if(d<count){var curr=that.data[d];return curr.caption!=null?curr.caption:curr.date.startDate.toString("d MMM")}},count:count,max:count,values:d3.range(count)}},getXValue:function(d){return this.data.indexOf(d)},getYValue:function(d){return d.total?d.total.remained:null},hasTitles:function(){return this.data.length>0&&this.data[0].caption!=null},getTitle:function(d){return this.data.length>d?this.data[d].title:""}},DataProvider})