define(["Underscore","tau/core/extension.base","tp/date.utils","tp/reports/settings/definitionBuilder"],function(_,BaseModel,du,DefinitionBuilder){var storageGroup="settings",storageName="processControlChart",Model=BaseModel.extend({"bus beforeInit":function(e,data){var configurator=data.config.context.configurator;this.fire("configurator.ready",configurator),configurator.getRestStorage().data(storageGroup,storageName).done(_.bind(function(data){if(!data.data||!data.data.userData||!data.data.userData.scale){this.fire("model.ready",this.defaultData);return}this.fire("model.ready",data.data.userData)},this))},defaultData:{scale:"cycleTime",entities:["userstory","bug"],filter:"?EndDate > Today - 180(days)"},"bus configurator.ready:last > formData.changed":function(e,configurator,data){function prop(key,defaultValue){return function(d){var result=d[key];return typeof defaultValue!="undefined"&&(typeof result=="undefined"||result==null)&&(result=defaultValue),result}}function fnProperty(key,label,defaultValue){return{map:prop(key,defaultValue),label:label}}function date(key,label){return{map:function(d){if(prop(key)(d))return du.parseFromJSON(prop(key)(d))[0]},label:label}}function fnStatic(value){return{map:function(d){return value}}}var settings={scale:data.time.key,filter:data.filter,entities:JSON.stringify(_.reduce(data.entities,function(memo,d){return memo.push(d.id),memo},[]))};configurator.getRestStorage().data(storageGroup,storageName,{scope:"Public",userData:settings}).done();var self=this,acidStore=configurator.getAppStateStore();acidStore.get({fields:["acid"],callback:function(r){var settings={strategy:"page",parameters:DefinitionBuilder.getWithLeadAndCycleTime(data,r.acid),mapping:{x:date("endDate","End Date"),y:fnProperty(data.time.key,data.time.label,0),r:fnStatic(4),stroke:fnProperty("type","Entity Type")}};self.fire("settings.changed",settings)}})}});return Model})