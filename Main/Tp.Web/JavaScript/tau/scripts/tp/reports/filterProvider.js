define(["jQuery","app.path","tp/date.utils","tau/utils/utils.date","tp/reports/burndown/filterStorage","tp/reports/burndown/burnDownTypeProvider","tp/dropdown"],function($,appPath,du,dateUtils,storage,burnDownTypeProvider){function Filter(){this.currentIterations=[],this.storage=new storage({groupName:"burnDownVer2Filter"}),this.burnDownTypeProvider=new burnDownTypeProvider}return Filter.prototype={initialize:function(config){this.dataProvider=config.dataProvider,this.placeholder=config.placeholder,this.template=config.template,this.contextProvider=config.contextProvider,this.plannablesRetrieved=!1;var that=this;this.update=function(){that._saveFilter(),config.update()},this._getSavedFilter(function(filter){that.savedFilter=filter,that.burnDownTypeProvider.initialize({placeholder:config.placeholder,contextProvider:config.contextProvider,updatePlannable:$.proxy(this._drawChart,this),savedFilter:that.savedFilter,filterProvider:this});var bdType=that.burnDownTypeProvider.getType();that._drawChart(bdType,$.proxy(that._render,that))})},_drawChart:function(bdType,success){this.plannableRetrieve=$.proxy(this.dataProvider.getPlannable,this.dataProvider),this._getIterations(success)},_getIterations:function(success){if(this.plannablesRetrieved){this.iterations=this._getForType(this.allIterations),this.currentIterations=this._getForType(this.allCurrentIterations),success();return}var that=this;this._retrieveIterations(this.contextProvider.getProjectIds(),this.contextProvider.getTeamIds(),function(data){var now=du.getNow();that.allIterations=$.map(data,function(item){var startDate=du.parseFromJSON(item.startDate),endDate=du.parseFromJSON(item.endDate);return{startDate:startDate,endDate:endDate,id:item.id,name:item.name,entityType:item.entityType,current:du.between(now,startDate,endDate),isBugsAvailable:item.isBugsAvailable,isPointsAvailable:item.isPointsAvailable,isTimeTrackingAvailable:item.isTimeTrackingAvailable,parent:{id:item.parentId,name:item.parentName}}}),that.allCurrentIterations=that.allIterations.filter(function(item){return item.current}),that.iterations=that._getForType(that.allIterations),that.currentIterations=that._getForType(that.allCurrentIterations),that.plannablesRetrieved=!0,success()})},_getForType:function(items){var type=this.burnDownTypeProvider.getType();return items.filter(function(item){return item.entityType.toLowerCase()==type.toLowerCase()})},_retrieveIterations:function(projectIds,teamIds,success){this.plannableRetrieve({projectIds:projectIds,teamIds:teamIds},success)},_render:function(){var bugsTerm=this.contextProvider.getBugsTerm();this.template=this.template.replace("{1}",bugsTerm),this.placeholder.html(this.template),this.allIterations.length==0&&this.placeholder.hide(),$.datepicker.parseDate=function(format,value,settings){return dateUtils.parse(value)},$.datepicker.formatDate=function(format,date,settings){return dateUtils.formatAs(date,format)},this.placeholder.find("._startDate").datepicker({buttonImageOnly:!1,showOn:"both",buttonText:"Choose",onSelect:this.update,dateFormat:"MM/dd/yyyy"}),this.placeholder.find("._weekends").click(this.update),this._pointsButton().click($.proxy(this._onUnitsClick,this)),this._hoursButton().click($.proxy(this._onUnitsClick,this)),this.placeholder.find("._include-bugs").click(this.update);var currentIteration=this._getDefaultIteration();typeof currentIteration!="undefined"&&this.processFilterOptionsVisibility(currentIteration);var that=this,callback=function(filter){that.burnDownTypeProvider.render(filter)};this._applySavedFilter(callback),$(this).trigger("afterRender")},_saveFilter:function(){var filter=this._getFilterData();if(filter!=null){if(filter.burnDownType=="")return;this._bugsSection().is(":visible")||delete filter.showBugs,this._unitsSection().is(":visible")||delete filter.isInPoints}this.storage.savePlannableFilter(filter)},_getSavedFilter:function(success){this.storage.findPlannableFilter($.proxy(success,this))},_applySavedFilter:function(callback){this.savedFilter!=null&&(this._bugsSection().is(":visible")&&this._setShowBugs(this.savedFilter.showBugs),this._unitsSection().is(":visible")&&this._selectUnit(this.savedFilter.isInPoints),this._setIncludeWeekends(this.savedFilter.includeWeekends)),callback(this.savedFilter)},_onUnitsClick:function(target){var isPointsClicked=$(target.currentTarget).text()==this._pointsButton().text();this._selectUnit(isPointsClicked);var selectedIteration=this._getSelectedPlannable();selectedIteration&&this._showBugs(selectedIteration)?this._bugsSection().removeClass("invisible"):this._bugsSection().addClass("invisible"),this.update()},_selectUnit:function(isPointsClicked){isPointsClicked?(this._pointsButton().addClass("selected"),this._hoursButton().removeClass("selected")):(this._pointsButton().removeClass("selected"),this._hoursButton().addClass("selected"))},_showBugs:function(iteration){return iteration.isBugsAvailable&&!(iteration.isPointsAvailable&&!iteration.isTimeTrackingAvailable&&this._hoursButton().hasClass("selected")&&this._unitsSection().is(":visible"))},processFilterOptionsVisibility:function(iteration){var units=this._unitsSection(),bugs=this._bugsSection();iteration.isPointsAvailable?units.show():units.hide(),this._showBugs(iteration)?bugs.removeClass("invisible"):bugs.addClass("invisible")},_getDefaultIteration:function(){var currentIteration=this.iterations[0];return this.currentIterations.length&&(currentIteration=this.currentIterations.map(function(i){return i})[0]),currentIteration},getIterationsDropDownDataSource:function(iterations){var projects=$.map(iterations,function(iteration){return iteration.parent}),uniqueProjects=[];for(var i=0;i<projects.length;i++){var project=projects[i];$.grep(uniqueProjects,function(uniqueProject){return uniqueProject.id==project.id}).length==0&&uniqueProjects.push({id:project.id,name:project.name})}for(var i=0;i<uniqueProjects.length;i++)uniqueProjects[i].items=$.grep(iterations,function(iteration){return iteration.parent.id==uniqueProjects[i].id}).map(function(d){return{id:d.id,name:d.current?d.name+" (current)":d.name}});return uniqueProjects.sort(function(a,b){return a.name==b.name?0:a.name.toLowerCase()<b.name.toLowerCase()?-1:1}),uniqueProjects},_getUrl:function(relativeUrl){return(new appPath.tp.WebServiceURL(relativeUrl)).url},_getFilterData:function(){var plannable=this._getSelectedPlannable(),startDate=this._getStartDate();return plannable?{burnDownType:this.burnDownTypeProvider.getType(),plannableId:plannable.id,startDate:startDate?startDate:null,includeWeekends:this._getIncludeWeekends(),isInPoints:this.isInPoints(),showBugs:this.isShowBugs(),units:plannable.isPointsAvailable&&this.isInPoints()?"p":"h"}:null},_getPlannableId:function(){return this.burnDownTypeProvider.getPlannableId()},_getStartDate:function(){var dateFromPicker=this._getRawStartDate();return dateUtils.format.date.short(dateFromPicker)},_getRawStartDate:function(){var dateFromPicker=this.placeholder.find("._startDate").datepicker().datepicker("getDate");return dateFromPicker},setStartDate:function(value){this.placeholder.find("._startDate").datepicker("setDate",value)},_getIncludeWeekends:function(){return this._isChecked("_weekends")},_setIncludeWeekends:function(isChecked){return this.placeholder.find("._weekends").attr("checked",isChecked)},isInPoints:function(){return this._unitsSection().is(":visible")?this._pointsButton().hasClass("selected"):this._getSelectedPlannable().isPointsAvailable},isShowBugs:function(){return this._bugsSection().is(":visible")?this._isChecked("_include-bugs"):!1},_isChecked:function(className){return this.placeholder.find("."+className+":visible")&&this.placeholder.find("."+className+":checked").val()=="on"},_unitsSection:function(){return this.placeholder.find("._unitsOption")},_pointsButton:function(){return this.placeholder.find("._inPoints")},_hoursButton:function(){return this.placeholder.find("._inHours")},_bugsSection:function(){return this.placeholder.find("._bugsOption")},_setShowBugs:function(isShowBugs){this.placeholder.find("._include-bugs").attr("checked",isShowBugs)},_getSelectedPlannable:function(){var id=this._getPlannableId(),iterations=$.grep(this.allIterations,function(item){return item.id==id});if(iterations.length>0){var result=iterations[0];return result.typeName=this.burnDownTypeProvider.getType(),result}return null}},Filter})