define(["tp/codemirror/lib/codemirror"],function(CodeMirror){CodeMirror.defineMode("scheme",function(config,mode){function makeKeywords(str){var obj={},words=str.split(" ");for(var i=0;i<words.length;++i)obj[words[i]]=!0;return obj}function stateStack(indent,type,prev){this.indent=indent,this.type=type,this.prev=prev}function pushStack(state,indent,type){state.indentStack=new stateStack(indent,type,state.indentStack)}function popStack(state){state.indentStack=state.indentStack.prev}function isNumber(ch,stream){if(/[0-9]/.exec(ch)!=null){stream.eatWhile(/[0-9]/),stream.eat(/\//),stream.eatWhile(/[0-9]/);if(stream.eol()||!/[a-zA-Z\-\_\/]/.exec(stream.peek()))return!0;stream.backUp(stream.current().length-1)}return!1}var BUILTIN="builtin",COMMENT="comment",STRING="string",ATOM="atom",NUMBER="number",BRACKET="bracket",KEYWORD="keyword",INDENT_WORD_SKIP=2,KEYWORDS_SKIP=1,keywords=makeKeywords("Î» case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt #f floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? #t tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"),indentKeys=makeKeywords("define let letrec let* lambda");return{startState:function(){return{indentStack:null,indentation:0,mode:!1,sExprComment:!1}},token:function(stream,state){state.indentStack==null&&stream.sol()&&(state.indentation=stream.indentation());if(stream.eatSpace())return null;var returnType=null;switch(state.mode){case"string":var next,escaped=!1;while((next=stream.next())!=null){if(next=='"'&&!escaped){state.mode=!1;break}escaped=!escaped&&next=="\\"}returnType=STRING;break;case"comment":var next,maybeEnd=!1;while((next=stream.next())!=null){if(next=="#"&&maybeEnd){state.mode=!1;break}maybeEnd=next=="|"}returnType=COMMENT;break;case"s-expr-comment":state.mode=!1;if(stream.peek()!="("&&stream.peek()!="["){stream.eatWhile(/[^/s]/),returnType=COMMENT;break}state.sExprComment=0;default:var ch=stream.next();if(ch=='"')state.mode="string",returnType=STRING;else if(ch=="'")returnType=ATOM;else if(ch=="#")stream.eat("|")?(state.mode="comment",returnType=COMMENT):stream.eat(/[tf]/)?returnType=ATOM:stream.eat(";")&&(state.mode="s-expr-comment",returnType=COMMENT);else if(ch==";")stream.skipToEnd(),returnType=COMMENT;else if(ch=="-")isNaN(parseInt(stream.peek()))?returnType=null:(stream.eatWhile(/[\/0-9]/),returnType=NUMBER);else if(isNumber(ch,stream))returnType=NUMBER;else if(ch=="("||ch=="["){var keyWord="",indentTemp=stream.column();while((letter=stream.eat(/[^\s\(\[\;\)\]]/))!=null)keyWord+=letter;keyWord.length>0&&indentKeys.propertyIsEnumerable(keyWord)?pushStack(state,indentTemp+INDENT_WORD_SKIP,ch):(stream.eatSpace(),stream.eol()||stream.peek()==";"?pushStack(state,indentTemp+1,ch):pushStack(state,indentTemp+stream.current().length,ch)),stream.backUp(stream.current().length-1),typeof state.sExprComment=="number"&&state.sExprComment++,returnType=BRACKET}else ch==")"||ch=="]"?(returnType=BRACKET,state.indentStack!=null&&state.indentStack.type==(ch==")"?"(":"[")&&(popStack(state),typeof state.sExprComment=="number"&&--state.sExprComment==0&&(returnType=COMMENT,state.sExprComment=!1))):(stream.eatWhile(/[\w\$_\-]/),keywords&&keywords.propertyIsEnumerable(stream.current())?returnType=BUILTIN:returnType=null)}return typeof state.sExprComment=="number"?COMMENT:returnType},indent:function(state,textAfter){return state.indentStack==null?state.indentation:state.indentStack.indent}}}),CodeMirror.defineMIME("text/x-scheme","scheme")})