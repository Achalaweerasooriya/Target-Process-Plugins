define(["tp/codemirror/lib/codemirror"],function(CodeMirror){CodeMirror.defineMode("coffeescript",function(conf){function wordRegexp(words){return new RegExp("^(("+words.join(")|(")+"))\\b")}function tokenBase(stream,state){if(stream.sol()){var scopeOffset=state.scopes[0].offset;if(stream.eatSpace()){var lineOffset=stream.indentation();return lineOffset>scopeOffset?"indent":lineOffset<scopeOffset?"dedent":null}scopeOffset>0&&dedent(stream,state)}if(stream.eatSpace())return null;var ch=stream.peek();if(ch==="#")return stream.skipToEnd(),"comment";if(stream.match(/^-?[0-9\.]/,!1)){var floatLiteral=!1;stream.match(/^-?\d*\.\d+(e[\+\-]?\d+)?/i)&&(floatLiteral=!0),stream.match(/^-?\d+\.\d*/)&&(floatLiteral=!0),stream.match(/^-?\.\d+/)&&(floatLiteral=!0);if(floatLiteral)return"number";var intLiteral=!1;stream.match(/^-?0x[0-9a-f]+/i)&&(intLiteral=!0),stream.match(/^-?[1-9]\d*(e[\+\-]?\d+)?/)&&(intLiteral=!0),stream.match(/^-?0(?![\dx])/i)&&(intLiteral=!0);if(intLiteral)return"number"}if(stream.match(stringPrefixes))return state.tokenize=tokenFactory(stream.current(),"string"),state.tokenize(stream,state);if(stream.match(regexPrefixes)){if(stream.current()!="/"||stream.match(/^.*\//,!1))return state.tokenize=tokenFactory(stream.current(),"string-2"),state.tokenize(stream,state);stream.backUp(1)}return stream.match(tripleDelimiters)||stream.match(doubleDelimiters)?"punctuation":stream.match(doubleOperators)||stream.match(singleOperators)||stream.match(wordOperators)?"operator":stream.match(singleDelimiters)?"punctuation":stream.match(constants)?"atom":stream.match(keywords)?"keyword":stream.match(identifiers)?"variable":(stream.next(),ERRORCLASS)}function tokenFactory(delimiter,outclass){var delim_re=new RegExp(delimiter),singleline=delimiter.length==1;return function(stream,state){while(!stream.eol()){stream.eatWhile(/[^'"\/\\]/);if(stream.eat("\\")){stream.next();if(singleline&&stream.eol())return outclass}else{if(stream.match(delim_re))return state.tokenize=tokenBase,outclass;stream.eat(/['"\/]/)}}return singleline&&(conf.mode.singleLineStringErrors?outclass=ERRORCLASS:state.tokenize=tokenBase),outclass}}function indent(stream,state,type){type=type||"coffee";var indentUnit=0;if(type==="coffee"){for(var i=0;i<state.scopes.length;i++)if(state.scopes[i].type==="coffee"){indentUnit=state.scopes[i].offset+conf.indentUnit;break}}else indentUnit=stream.column()+stream.current().length;state.scopes.unshift({offset:indentUnit,type:type})}function dedent(stream,state){if(state.scopes.length==1)return;if(state.scopes[0].type==="coffee"){var _indent=stream.indentation(),_indent_index=-1;for(var i=0;i<state.scopes.length;++i)if(_indent===state.scopes[i].offset){_indent_index=i;break}if(_indent_index===-1)return!0;while(state.scopes[0].offset!==_indent)state.scopes.shift();return!1}return state.scopes.shift(),!1}function tokenLexer(stream,state){var style=state.tokenize(stream,state),current=stream.current();if(current===".")return style=state.tokenize(stream,state),current=stream.current(),style==="variable"?"variable":ERRORCLASS;if(current==="@")return style=state.tokenize(stream,state),current=stream.current(),style==="variable"?"variable-2":ERRORCLASS;current==="return"&&(state.dedent+=1),((current==="->"||current==="=>")&&!state.lambda&&state.scopes[0].type=="coffee"&&stream.peek()===""||style==="indent")&&indent(stream,state);var delimiter_index="[({".indexOf(current);return delimiter_index!==-1&&indent(stream,state,"])}".slice(delimiter_index,delimiter_index+1)),indentKeywords.exec(current)&&indent(stream,state),current=="then"&&dedent(stream,state),style==="dedent"&&dedent(stream,state)?ERRORCLASS:(delimiter_index="])}".indexOf(current),delimiter_index!==-1&&dedent(stream,state)?ERRORCLASS:(state.dedent>0&&stream.eol()&&state.scopes[0].type=="coffee"&&(state.scopes.length>1&&state.scopes.shift(),state.dedent-=1),style))}var ERRORCLASS="error",singleOperators=new RegExp("^[\\+\\-\\*/%&|\\^~<>!?]"),singleDelimiters=new RegExp("^[\\(\\)\\[\\]\\{\\}@,:`=;\\.]"),doubleOperators=new RegExp("^((->)|(=>)|(\\+\\+)|(\\+\\=)|(\\-\\-)|(\\-\\=)|(\\*\\*)|(\\*\\=)|(\\/\\/)|(\\/\\=)|(==)|(!=)|(<=)|(>=)|(<>)|(<<)|(>>)|(//))"),doubleDelimiters=new RegExp("^((\\.\\.)|(\\+=)|(\\-=)|(\\*=)|(%=)|(/=)|(&=)|(\\|=)|(\\^=))"),tripleDelimiters=new RegExp("^((\\.\\.\\.)|(//=)|(>>=)|(<<=)|(\\*\\*=))"),identifiers=new RegExp("^[_A-Za-z][_A-Za-z0-9]*"),wordOperators=wordRegexp(["and","or","not","is","isnt","in","instanceof","typeof"]),indentKeywords=["for","while","loop","if","unless","else","switch","try","catch","finally","class"],commonKeywords=["break","by","continue","debugger","delete","do","in","of","new","return","then","this","throw","when","until"],keywords=wordRegexp(indentKeywords.concat(commonKeywords));indentKeywords=wordRegexp(indentKeywords);var stringPrefixes=new RegExp("^('{3}|\"{3}|['\"])"),regexPrefixes=new RegExp("^(/{3}|/)"),commonConstants=["Infinity","NaN","undefined","null","true","false","on","off","yes","no"],constants=wordRegexp(commonConstants),external={startState:function(basecolumn){return{tokenize:tokenBase,scopes:[{offset:basecolumn||0,type:"coffee"}],lastToken:null,lambda:!1,dedent:0}},token:function(stream,state){var style=tokenLexer(stream,state);return state.lastToken={style:style,content:stream.current()},stream.eol()&&stream.lambda&&(state.lambda=!1),style},indent:function(state,textAfter){return state.tokenize!=tokenBase?0:state.scopes[0].offset}};return external}),CodeMirror.defineMIME("text/x-coffeescript","coffeescript")})