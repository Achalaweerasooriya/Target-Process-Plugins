define(["tp/codemirror/lib/codemirror"],function(CodeMirror){CodeMirror.defineMode("velocity",function(config){function parseWords(str){var obj={},words=str.split(" ");for(var i=0;i<words.length;++i)obj[words[i]]=!0;return obj}function chain(stream,state,f){return state.tokenize=f,f(stream,state)}function tokenBase(stream,state){var beforeParams=state.beforeParams;state.beforeParams=!1;var ch=stream.next();if(ch!='"'&&ch!="'"||!state.inParams){if(/[\[\]{}\(\),;\.]/.test(ch))return ch=="("&&beforeParams?state.inParams=!0:ch==")"&&(state.inParams=!1),null;if(/\d/.test(ch))return stream.eatWhile(/[\w\.]/),"number";if(ch=="#"&&stream.eat("*"))return chain(stream,state,tokenComment);if(ch=="#"&&stream.match(/ *\[ *\[/))return chain(stream,state,tokenUnparsed);if(ch=="#"&&stream.eat("#"))return stream.skipToEnd(),"comment";if(ch=="$")return stream.eatWhile(/[\w\d\$_\.{}]/),specials&&specials.propertyIsEnumerable(stream.current().toLowerCase())?"keyword":(state.beforeParams=!0,"builtin");if(isOperatorChar.test(ch))return stream.eatWhile(isOperatorChar),"operator";stream.eatWhile(/[\w\$_{}]/);var word=stream.current().toLowerCase();return keywords&&keywords.propertyIsEnumerable(word)?"keyword":functions&&functions.propertyIsEnumerable(word)||stream.current().match(/^#[a-z0-9_]+ *$/i)&&stream.peek()=="("?(state.beforeParams=!0,"keyword"):null}return chain(stream,state,tokenString(ch))}function tokenString(quote){return function(stream,state){var escaped=!1,next,end=!1;while((next=stream.next())!=null){if(next==quote&&!escaped){end=!0;break}escaped=!escaped&&next=="\\"}return end&&(state.tokenize=tokenBase),"string"}}function tokenComment(stream,state){var maybeEnd=!1,ch;while(ch=stream.next()){if(ch=="#"&&maybeEnd){state.tokenize=tokenBase;break}maybeEnd=ch=="*"}return"comment"}function tokenUnparsed(stream,state){var maybeEnd=0,ch;while(ch=stream.next()){if(ch=="#"&&maybeEnd==2){state.tokenize=tokenBase;break}ch=="]"?maybeEnd++:ch!=" "&&(maybeEnd=0)}return"meta"}var indentUnit=config.indentUnit,keywords=parseWords("#end #else #break #stop #[[ #]] #{end} #{else} #{break} #{stop}"),functions=parseWords("#if #elseif #foreach #set #include #parse #macro #define #evaluate #{if} #{elseif} #{foreach} #{set} #{include} #{parse} #{macro} #{define} #{evaluate}"),specials=parseWords("$foreach.count $foreach.hasNext $foreach.first $foreach.last $foreach.topmost $foreach.parent $velocityCount"),isOperatorChar=/[+\-*&%=<>!?:\/|]/,multiLineStrings=!0;return{startState:function(basecolumn){return{tokenize:tokenBase,beforeParams:!1,inParams:!1}},token:function(stream,state){return stream.eatSpace()?null:state.tokenize(stream,state)}}}),CodeMirror.defineMIME("text/velocity","velocity")})