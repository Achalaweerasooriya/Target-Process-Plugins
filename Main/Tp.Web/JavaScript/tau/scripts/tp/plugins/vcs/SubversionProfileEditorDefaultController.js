define(["tp/bus"],function(o){function e(o){this._create(o)}return e.prototype={_create:function(e){this.repository=e.profileRepository,this.commandGateway=e.commandGateway,this._tpUsers=this.convertToUserMappingInfo(e.tpUsers),o.subscribe("SubversionProfileEditorDefaultController",{onCheckConnectionCommand:$.proxy(this.onCheckConnectionCommand,this),onAutomapPeopleCommand:$.proxy(this.onAutomapPeopleCommand,this),onRescanRepositoryCommand:$.proxy(this.onRescanRepositoryCommand,this)},!0)},onRescanRepositoryCommand:function(){this.commandGateway.executeForProfile("RescanRepository")},onAutomapPeopleCommand:function(e){function n(e){o.publish("AutomapPeopleCommandCompleted",[e])}o.publish("AutomapPeopleCommandInitiated");var t={Connection:e,TpUsers:this._tpUsers};this.commandGateway.execute("Automap%20People",t,n)},convertToUserMappingInfo:function(o){var e=[];return $.each(o||[],$.proxy(function(o,n){e.push(n)},this)),e},save:function(o,e){this.isEditMode()?this.repository.update(e):this.repository.create(e)},onCheckConnectionCommand:function(e){function n(n){0==$(n).length?o.publish("CheckConnectionSuccessful",[e]):o.publish("CheckConnectionFailed",[n])}function t(e){o.publish("CheckConnectionError",[e])}o.publish("CheckConnectionInitiated"),this.commandGateway.execute("CheckConnection",e,n,t,t)},isEditMode:function(){return null!=this.repository.getCurrentProfileName()}},e});