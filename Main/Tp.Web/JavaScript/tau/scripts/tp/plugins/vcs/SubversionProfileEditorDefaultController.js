define(["tp/bus"],function(Bus){function SubversionProfileEditorDefaultController(config){this._create(config)}return SubversionProfileEditorDefaultController.prototype={_create:function(config){this.repository=config.profileRepository,this.commandGateway=config.commandGateway,this._tpUsers=this.convertToUserMappingInfo(config.tpUsers),Bus.subscribe("SubversionProfileEditorDefaultController",{onCheckConnectionCommand:$.proxy(this.onCheckConnectionCommand,this),onAutomapPeopleCommand:$.proxy(this.onAutomapPeopleCommand,this)},!0)},onAutomapPeopleCommand:function(svnConnectionSettings){function automapPeopleCompleted(automapResults){Bus.publish("AutomapPeopleCommandCompleted",[automapResults])}Bus.publish("AutomapPeopleCommandInitiated");var args={Connection:svnConnectionSettings,TpUsers:this._tpUsers};this.commandGateway.execute("Automap%20People",args,automapPeopleCompleted)},convertToUserMappingInfo:function(tpUsers){var result=[];return $.each(tpUsers||[],$.proxy(function(index,value){result.push(value)},this)),result},save:function(ui,profile){this.isEditMode()?this.repository.update(profile):this.repository.create(profile)},onCheckConnectionCommand:function(args){function checkCompleted(errors){$(errors).length==0?Bus.publish("CheckConnectionSuccessful",[args]):Bus.publish("CheckConnectionFailed",[errors])}function errorsOccured(responseText){Bus.publish("CheckConnectionError",[responseText])}Bus.publish("CheckConnectionInitiated"),this.commandGateway.execute("CheckConnection",args,checkCompleted,errorsOccured,errorsOccured)},isEditMode:function(){return this.repository.getCurrentProfileName()!=null}},SubversionProfileEditorDefaultController})