define(["tp/bus"],function(a){function b(a){this._create(a)}return b.prototype={_create:function(b){this.repository=b.profileRepository,this.commandGateway=b.commandGateway,this._tpUsers=this.convertToUserMappingInfo(b.tpUsers),a.subscribe("SubversionProfileEditorDefaultController",{onCheckConnectionCommand:$.proxy(this.onCheckConnectionCommand,this),onAutomapPeopleCommand:$.proxy(this.onAutomapPeopleCommand,this)},!0)},onAutomapPeopleCommand:function(b){function c(b){a.publish("AutomapPeopleCommandCompleted",[b])}a.publish("AutomapPeopleCommandInitiated");var d={Connection:b,TpUsers:this._tpUsers};this.commandGateway.execute("Automap%20People",d,c)},convertToUserMappingInfo:function(a){var b=[];return $.each(a||[],$.proxy(function(a,c){b.push(c)},this)),b},save:function(a,b){this.isEditMode()?this.repository.update(b):this.repository.create(b)},onCheckConnectionCommand:function(b){function c(c){$(c).length==0?a.publish("CheckConnectionSuccessful",[b]):a.publish("CheckConnectionFailed",[c])}function d(b){a.publish("CheckConnectionError",[b])}a.publish("CheckConnectionInitiated"),this.commandGateway.execute("CheckConnection",b,c,d,d)},isEditMode:function(){return this.repository.getCurrentProfileName()!=null}},b})