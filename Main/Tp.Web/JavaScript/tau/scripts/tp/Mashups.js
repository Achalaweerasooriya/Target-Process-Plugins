define("tp/mashups",["jQuery","Underscore","tau/core/class","tp/mashup.view.types","tp/views.definer","libs/parseUri"],function(e,t,i,s,n,r){var o=function(e,t){window.console&&window.console.error?(window.console.error(e),window.console.error(t)):window.alert(e+":\n"+t)};e(window).one({beforeunload:function(){o=e.noop}});var a={initPoint:"beforeAppInit"},d=r(location.href).hasQueryKey("nomashups"),h=i.extend({controls:{view:{}},subscriptions:{view:{}},mashupDeferreds:[],mashupKeySeparator:"#:#",$globalTrigger:e({}),registeredFoldersData:{},init:function(){this.dependencies=[],this.filePath=null,this.options=null,this.protectedOptions={},this.folderData=null,d&&(this.setPlaceholder=e.noop,this.addMashup=e.noop,this.addModule=e.noop,this.addCSS=function(){return this})},setPlaceholder:function(e,i,s,n){this.protectedOptions={placeholderId:e,basePath:i,mashupPath:s},this.filePath=n,this.mashupPath=s,this.options=t.extend({},a,this.protectedOptions),s&&this._registerFolder({folderPath:s,placeholder:e,options:this.options,filePath:n})},_registerFolder:function(t){var i=t.folderPath,s=t.filePath,n=t.placeholder,r=this._getFolderKey(i,n);if(!this.registeredFoldersData[r]){var o=this.getMashupNameFromFolderPath(i);this.registeredFoldersData[r]={initDeferred:e.Deferred(),ctx:this,name:o,folderPath:i,modules:[],mashups:[],files:[s],options:t.options}}this.folderData=this.registeredFoldersData[r],this._addToCollectionIfMissing(this.folderData.files,s)},_addToCollectionIfMissing:function(e,t){e.indexOf(t)<0&&e.push(t)},_getFolderKey:function(e,t){return e.toLowerCase()+this.mashupKeySeparator+t},getFolderPathFromKey:function(e){return e.split(this.mashupKeySeparator)[0]},getMashupNameFromFolderPath:function(e){var t=e.split("/"),i="";return t.length>=2&&(i=t[t.length-2].toLowerCase()),i},_registerModule:function(e){this.folderData.modules.push(e)},_registerMashup:function(i){var s={initDeferred:e.Deferred()},n=t.extend(s,i);this.folderData.mashups.push(n)},getRegisteredMashups:function(){return this.registeredFoldersData
},onAddMashup:function(e){this.$globalTrigger.on("addMashup",e)},setOptions:function(e){return this.options=t.extend({},this.options,e,this.protectedOptions),this},addMashup:function(e){var t=this.dependencies;this.dependencies=[],this._registerMashup({func:e,dependencies:t,filePath:this.filePath,options:this.options}),this.initializeMashupFolder()},initializeMashupFolder:function(){var e=this.folderData.mashups;t.each(e,function(e){if(!e.isInitCalled){var t=this._initializeMashup(e);t.always(this._conditionallyResolveMashupFolderDeferred.bind(this)),e.isInitCalled=!0}},this);var i=this.folderData.initDeferred.done(function(){t.each(e,this._cleanupMashupData,this),this._cleanupFolderData(this.folderData)}.bind(this));return i},_conditionallyResolveMashupFolderDeferred:function(){var e=t.all(this.folderData.mashups,function(e){return"pending"!=e.initDeferred.state()},this);e&&this.folderData.initDeferred.resolve()},_initializeMashup:function(e){var i=e.initDeferred;i.mashup={path:this.folderData.folderPath,dependencies:t.clone(e.dependencies)},this.mashupDeferreds.push(i);var s=this._resolveMashupDependencies(e);return s.done(function(t){this._executeMashup(e,t),i.resolve(),this.$globalTrigger.trigger("addMashup",[])}.bind(this)),i},_resolveMashupDependencies:function(t){var i=this.folderData.folderPath,s=t.dependencies,n=e.Deferred(),r=e.Deferred(),a=e.Deferred();return require(s,function(){r.resolve(arguments)},function(e){o('Error loading dependencies for mashup "'+i+'"',e),n.resolve()}),e(a.resolve),e.when(r,a).done(function(e){n.resolve(e)}.bind(this)),n},_executeMashup:function(e,i){var s=t.toArray(i);s.push(e.options);try{e.func.apply(null,s)}catch(n){o('Error in mashup "'+this.protectedOptions.mashupPath+'"',n)}},_cleanupMashupData:function(e){delete e.func,delete e.ctx,delete e.initDeferred,delete e.isInitCalled,delete e.options},_cleanupFolderData:function(e){delete e.initDeferred,delete e.ctx},findMashupDeferreds:function(e){var i=[];return t.each(this.mashupDeferreds,function(t){e(t.mashup)&&i.push(t)
}),i},onMashupsLoaded:function(t){return e.whenList(this.findMashupDeferreds(t))},addDependency:function(e){return this.dependencies.push(e),this},addText:function(e){return this.dependencies.push("text!"+this.protectedOptions.mashupPath+e),this},addHtml:function(e){return this.addText(e+"!strip")},addModule:function(e,t){var i=this.dependencies;if(this.dependencies=[],!e)throw new Error("tau.mashups.addModule: name should be specified");this._registerModule({name:e,dependencies:i,filePath:this.filePath}),define(e,i,function(){return"function"!=typeof t?t:t.apply(null,arguments)})},addCSS:function(e){var i=this.protectedOptions.mashupPath+e,s=document.createElement("link");s.setAttribute("rel","stylesheet"),s.setAttribute("type","text/css"),s.setAttribute("href",i);var n=(s.href||"").toLowerCase(),r=document.styleSheets,o=t.any(r,function(e){var t=(e.href||"").toLowerCase();return t===n});return o||document.getElementsByTagName("head")[0].appendChild(s),this}});return h.viewTypes=s,n.init({Mashups:h}),h});