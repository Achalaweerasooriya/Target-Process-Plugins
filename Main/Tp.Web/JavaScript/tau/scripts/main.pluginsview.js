require(["all.components"],function(all){require(["jQuery","app.path","tau/configurator","tau/components/component.container","tau/components/extensions/print.convert.extension","tau/utils/utils.redirect","tau/store/types.targetprocess"],function($,appPath,configurator,container,ExtensionPrint,Redirect){var PluginRepository=function(){this.restUrl=configurator.getRestPath()};PluginRepository.prototype={getPlugins:function(fnSuccess){var url=new appPath.tp.AcidURL([this.restUrl,"/Plugins.asmx"].join(""));$.getJSON(url.toString(),fnSuccess)},deleteProfile:function(pluginName,profileName,fnSuccess){var url=[this.restUrl,"/Plugins.asmx","/",pluginName,"/Profiles","/",profileName].join("");$.ajax({url:url,type:"DELETE",success:fnSuccess,error:fnSuccess})},getProfilesErrors:function(pluginName,fnSuccess){var url=[this.restUrl,"/Plugins.asmx","/",pluginName,"/Commands","/","CheckActivityLogForErrors"].join("");$.getJSON(url,fnSuccess)}};var redirect=configurator.getRedirect(),config={context:{applicationContext:{processes:[{terms:[]}]},pluginRepository:new PluginRepository},children:[{type:"pluginsList"}]},containerInstance=container.create(config);containerInstance.on("afterRender",function(evt){var $el=evt.data.element;$(function(){$el.appendTo($("#plugins-container")),$("#old-plugins-container").show()})}),containerInstance.initialize()})})