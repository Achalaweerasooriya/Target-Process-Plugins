require(["all.components"],function(){require(["jQuery","app.path","tau/configurator","tau/components/component.container","tau/components/component.pluginsList","tracking/tracking.headers"],function(t,e,n,r,i,o){var s=function(){this.restUrl=n.getRestPath()};s.prototype={getPlugins:function(n){var r=new e.tp.AcidURL([this.restUrl,"/Plugins.asmx"].join(""));t.getJSON(r.toString(),n)},getPluginPath:function(t){return this.restUrl+"/Plugins.asmx/"+t},deleteProfile:function(e,n,r){var i=this.getPluginPath(e)+"/Profiles/"+n,s={url:i,type:"POST",success:r,error:r,beforeSend:function(t,e){o.track(t,e),t.setRequestHeader("X-HTTP-Method-Override","DELETE")}};t.ajax(s)},getProfilesErrors:function(e,n){var r=this.getPluginPath(e)+"/Commands/CheckActivityLogForErrors";t.getJSON(r,n)}};var a={context:{applicationContext:{processes:[{terms:[]}]},pluginRepository:new s},children:[{type:"pluginsList"}]},c=r.create(a);c.on("afterRender",function(e){var n=e.data.element;t(function(){n.appendTo(t("#plugins-container")),t("#old-plugins-container").show()})}),c.initialize()})});