require(["tp/plugins/activitylogging/activityViewer"],function(a){(function(){module("activity log test",{setup:function(){this._placeHolder=$('<div><div class="additional-controls" /><div class="controls-widgets" /></div>');var b=this;this._createViewer=function(){var c=new a({placeHolder:b._placeHolder});return c.profileNameSource=new ActivityNameSourceMock,c.repository=new ActivityRepositoryMock,c}},teardown:function(){}}),test("activity log should not be visible during profile creation",function(){var a=this._createViewer();a.profileNameSource.setProfileName(null),a.render(),equal(this._placeHolder.find(".activityLog").length,0,"activity log is invisible during profile creation")}),test("activity log should be visible during profile editing",function(){var a=this._createViewer();a.render(),notEqual(this._placeHolder.find(".log").html(),"","activity log is visible during profile editing")}),test("activity log should contain first page of log records after it is loaded",function(){var a=this._createViewer();a.render(),equal(this._placeHolder.find(".log>div").length,10,"activity log contains first page of log records")}),test('after "Show More" is clicked records from log\'s next page should be added',function(){var a=this._createViewer();a.render(),this._placeHolder.find("#linkMoreActivity").click(),equal(this._placeHolder.find(".log>div").length,20,"records from next page added")}),test('activity log should be empty after "Clear log" is clicked',function(){var a=this._createViewer();a.render(),this._placeHolder.find("#linkClear").click(),equal(this._placeHolder.find(".log").children().length,0,"log is cleared")}),test("activity log should contain 11 items after auto-refresh",function(){var a=this._createViewer();a.render(),a._getLatestActivityLog(),equal(this._placeHolder.find(".log>div").length,11,"new records added after auto-refresh")}),test('error log should be displayed after "Show errors" is clicked',function(){var a=this._createViewer();a.render(),this._placeHolder.find("#linkShowErrors").click(),equal(this._placeHolder.find(".log>div").length,1,"error log records are displayed"),equal(this._placeHolder.find("#linkShowErrors").css("display"),"none","link 'Show Errors' is hidden"),notEqual(this._placeHolder.find("#linkShowAll").css("display"),"none","link 'Show All' is visible")}),test('activity log should be displayed after "Show all" is clicked',function(){var a=this._createViewer();a.render(),this._placeHolder.find("#linkShowErrors").click(),this._placeHolder.find("#linkShowAll").click(),equal(this._placeHolder.find(".log>div").length,10,"activity log records are displayed"),notEqual(this._placeHolder.find("#linkShowErrors").css("display"),"none","link 'Show Errors' is visible"),equal(this._placeHolder.find("#linkShowAll").css("display"),"none","link 'Show All' is hidden")}),test("last sync date should be visible and have value after successful synchronization",function(){var a=this._createViewer();a.render(),notEqual(this._placeHolder.find(".lastSyncDate").parent().css("display"),"none","'Last Updated' is visible"),notEqual(this._placeHolder.find(".lastSyncDate").text(),"","Last Updated time is shown")}),test("last sync date should not be updated if synchronization failed",function(){var a=this._createViewer();a.render();var b=this._placeHolder.find(".lastSyncDate").text();a.repository.getActivityLog=function(a,b,c,d){d({})},a._getLatestActivityLog(),equal(b,this._placeHolder.find(".lastSyncDate").text(),"last sync date has not changed if synchronization failed")}),test("should roll log over size",function(){var a=this._createViewer();a.capacity=10,a.render(),equal(this._placeHolder.find(".log>div").length,10,"activity log contains first page of log records"),a._getLatestActivityLog(),equal(this._placeHolder.find(".log>div").length,10,"activity log was rolled over size")})})()})