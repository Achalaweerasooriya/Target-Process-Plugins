require(["tp/plugins/errorMessageContainer","tp/jquery.utils"],function(errorMessageContainer){(function(){module("error message container tests",{setup:function(){this.placeholder=$('<div><input type="text" name="Name" /><span name="NameErrorLabel"></span><input type="text" name="Login" /><span name="LoginErrorLabel"></span><span class="errorMessageContainer"></span></div>'),this.errorMessageContainer=new errorMessageContainer({placeholder:this.placeholder,generalErrorContainer:".errorMessageContainer",generalErrorMessage:"error message"}),this.errorMessageContainer.setOnFocusEvent()},teardown:function(){}}),test("should display errors",function(){var error={FieldName:"Name",Message:"Name should not be empty"};this.errorMessageContainer.add(error),this.errorMessageContainer.render(),ok(this.placeholder.find('input:text[name="Name"]').hasClass("error"),"error marker added to field"),equal(this.placeholder.find('span[name="NameErrorLabel"]').text(),error.Message,"error message displayed")}),test("should clear errors",function(){var error={FieldName:"Name",Message:"Name should not be empty"};this.errorMessageContainer.add(error),this.errorMessageContainer.render(),this.errorMessageContainer.clearErrors(),ok(this.placeholder.find('input.error:text[name="Name"]').length==0,"all error markers are removed from fields"),ok($.grep(this.placeholder.find('span[name="NameErrorLabel"]'),function(item){return $(item).text()}).length==0,"all error messages are hidden")}),test("should display general error message",function(){var error={FieldName:"Name",Message:"Name should not be empty"};this.errorMessageContainer.add(error),this.errorMessageContainer.render(),equal(this.placeholder.find(".errorMessageContainer").text(),"error message","default error message displayed"),this.errorMessageContainer.clearErrors(),this.errorMessageContainer.add({FieldName:null,Message:"test"}),this.errorMessageContainer.render(),equal(this.placeholder.find(".errorMessageContainer").text(),"test","custom error message displayed")})})()})