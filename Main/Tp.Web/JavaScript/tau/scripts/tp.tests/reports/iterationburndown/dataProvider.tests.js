require(["tp/reports/iterationburndown/dataProvider"],function(a){(function(){module("data provider tests",{setup:function(){this.dataProvider=new a,this.dataProvider.dataRepository=new DataRepositoryMock},teardown:function(){}}),test("should map data",function(){var a=this;this.dataProvider.initialize(null,function(){equals(a.dataProvider.data[0].total.remained,19,"first day remained is correct"),equals(a.dataProvider.data[0].total.added,2,"first day added is correct"),equals(a.dataProvider.data[0].total.spent,1,"first day spent is correct"),equals(a.dataProvider.data[0].total.removed,0,"first day removed is correct"),equals(a.dataProvider.data[0].total.remainedForNextDay,20,"first day removed for next day is correct"),equals(a.dataProvider.data[0].effort.length,3,"first day effort is correct"),equals(a.dataProvider.data[1].total.remained,20,"second day remained is correct"),equals(a.dataProvider.data[1].total.added,5,"second day added is correct"),equals(a.dataProvider.data[1].total.spent,5,"second day spent is correct"),equals(a.dataProvider.data[1].total.removed,2,"second day removed is correct"),equals(a.dataProvider.data[1].total.remainedForNextDay,18,"second day removed for next day is correct"),equals(a.dataProvider.data[1].effort.length,3,"second day effort is correct"),equals(a.dataProvider.data[2].total.remained,18,"third day remained is correct"),equals(a.dataProvider.data[2].total.added,5,"third day added is correct"),equals(a.dataProvider.data[2].total.spent,0,"third day spent is correct"),equals(a.dataProvider.data[2].total.removed,13,"third day removed is correct"),equals(a.dataProvider.data[2].total.remainedForNextDay,10,"third day removed for next day is correct"),equals(a.dataProvider.data[2].effort.length,2,"third day effort is correct"),equals(a.dataProvider.data[3].total.remained,10,"last day remained is correct"),equals(a.dataProvider.data[3].total.added,0,"last day added is correct"),equals(a.dataProvider.data[3].total.spent,0,"last day spent is correct"),equals(a.dataProvider.data[3].total.removed,0,"last day removed is correct"),equals(a.dataProvider.data[3].total.remainedForNextDay,10,"last day removed for next day is correct"),ok(a.dataProvider.data[3].effort==null,"last day effort is null")})}),test("should calculate y upper bound",function(){var a=this;this.dataProvider.initialize(this.filter,function(){equals(a.dataProvider._getYUpperBound(),20,"y upper bound calculated correctly")})}),test("should calculate y axis values",function(){var a=this;this.dataProvider.initialize(this.filter,function(){var b=a.dataProvider._getYAxisValues();for(var c=0;c<b.length;c++)equals(b[c],c*2,c+" value is correct")})}),test("should get y axis",function(){var a=this;this.dataProvider.initialize(this.filter,function(){var b=a.dataProvider.getYAxis();equals(b.label(5),5,"label returns correct result"),equals(b.max,20,"max is correct"),equals(b.count,10,"count is correct");for(var c=0;c<b.values.length;c++)equals(b.values[c],c*2,c+" value is correct")})}),test("should get x axis values count",function(){var a=this;this.dataProvider.initialize(this.filter,function(){var b=a.dataProvider._getXAxisValuesCount();equals(b,4,"x axis values count is correct")})}),test("should get x axis",function(){var a=this;this.dataProvider.initialize(this.filter,function(){var b=a.dataProvider.getXAxis();equals(b.label(1),"28 Mar","label is correct"),equals(b.count,3,"count is correct"),equals(b.max,3,"max is correct");for(var c=0;c<b.values.length;c++)equals(b.values[c],c,c+" value is correct")})}),test("should get x value",function(){var a=this;this.dataProvider.initialize(this.filter,function(){equals(a.dataProvider.getXValue(a.dataProvider.data[1]),1,"x value is correct")})}),test("should get y value",function(){var a={total:{remained:4}},b=this;this.dataProvider.initialize(this.filter,function(){equals(b.dataProvider.getYValue(a),4,"y value is correct")})})})()})