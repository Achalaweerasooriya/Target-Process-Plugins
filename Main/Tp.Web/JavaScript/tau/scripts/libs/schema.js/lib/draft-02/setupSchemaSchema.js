define(["require","exports","module"],function(e,t,i){i.exports=function(){var e=this.Schema,t=this.Validation,i={id:"jsonSchemaCore",title:"JSON Schema Core Schema",description:"This is the JSON Schema for JSON Schemas.",type:"object",properties:{type:{type:["string","array"],items:{type:"string","enum":{$ref:"#.properties.type.enum"}},uniqueItems:!0,description:"This is a type definition value. This can be a simple type, or a union type","enum":["string","object","array","boolean","number","integer","null","any"],minItems:2,optional:!0,"default":"any",pre:"addToRefs",labels:{de:{string:"Text",object:"Objekt",array:"Liste","boolean":"wahr/falsch",number:"Zahl",integer:"ganze Zahl","null":"undefiniert"},en:{}}},id:{type:"string",optional:!0,minLength:1,pattern:"[^\\.#]",description:"A globally unique ID for this schema. It can be used to reference the schema from another one."},optional:{type:"boolean",description:"This indicates that the instance property in the instance object is not required.",optional:!0,"default":!1,pre:"addToRefs"},empty:{type:"boolean",description:"This indicates that the instance property in the instance object can be empty.",optional:!0,"default":!1,pre:"addToRefs"},"enum":{type:"array",optional:!0,description:"This provides an enumeration of possible values that are valid for the instance property. It goes only for the first type, if type is an array of types.",minItems:1,uniqueItems:!0},description:{type:"string",optional:!0,description:"This provides a description of the purpose the instance property. The value can be a string or it can be an object with properties corresponding to various different instance languages (with an optional default property indicating the default description).",pre:"addToRefs"},title:{type:"string",optional:!0,description:"This provides the title of the property",pre:"addToRefs"},"default":{type:"any",optional:!0,description:"This indicates the default for the instance property.",pre:"addToRefs"},options:{type:"array",optional:!0,items:{type:"object",properties:{label:{type:"string",optional:!0},value:{type:"any"}}},pre:"addToRefs"},"extends":{type:"object",optional:!0,pre:"addToRefs"},requires:{type:["string","object"],additionalProperties:{$ref:"#"},optional:!0,description:"indicates a required property or a schema that must be validated if this property is present",pre:"addToRefs"},nonStandard:{type:"boolean",optional:!0,"default":!1,nonStandard:!0},pre:{type:["string","array","any"],items:{type:["string","any"]},optional:!0,description:"One or several prefix adapters identified by plugin IDs",nonStandard:!0,pre:"addToRefs"},post:{type:["string","array","any"],items:{type:["string","any"]},optional:!0,description:"One or several postfix adapters identified by plugin IDs",nonStandard:!0,pre:"addToRefs"},fallbacks:{type:"object",additionalProperties:{type:["string","object"],description:"Identifier for a adapter function that will be executed if a constraint is violated"},description:"Fallback object, with property names = schema property names",nonStandard:!0,pre:"addToRefs"},properties:{type:"object",additionalProperties:{$ref:"#"},description:"This is a definition for the properties of an object value",optional:!0,"default":{},pre:"addToRefs"},items:{type:["object","array"],properties:{$ref:"#.properties"},items:{$ref:"#"},description:"When the value is an array, this indicates the schema to use to validate each item in an array",optional:!0,pre:["instantiateSchema","addToRefs"]},maxItems:{type:"integer",optional:!0,description:"When the instance value is an array, this indicates maximum number of items.",minimum:0,pre:"addToRefs"},minItems:{type:"integer",optional:!0,description:"When the instance value is an array, this indicates minimum number of items.",minimum:0,pre:"addToRefs"},additionalProperties:{type:["boolean","object"],properties:{$ref:"#.properties"},description:"This provides a default property definition for all properties that are not explicitly defined in an object type definition.",optional:!0,"default":!0,pre:["instantiateSchema","addToRefs"]},minimum:{type:"number",optional:!0,description:"This indicates the minimum value for the instance property when the type of the instance value is a number.",pre:"addToRefs"},minimumCanEqual:{type:"boolean",optional:!0,description:"If the minimum is defined, this indicates whether or not the instance property value can equal the minimum.","default":!0,pre:"addToRefs"},maximum:{type:"number",optional:!0,description:"This indicates the maximum value for the instance property when the type of the instance value is a number.",pre:"addToRefs"},maximumCanEqual:{type:"boolean",optional:!0,description:"If the maximum is defined, this indicates whether or not the instance property value can equal the maximum.","default":!0,pre:"addToRefs"},maxDecimal:{type:"integer",optional:!0,description:"This indicates the maximum number of decimal places in a floating point number.",pre:"addToRefs"},pattern:{type:["string","object"],format:"regex",description:"When the instance value is a string, this provides a regular expression that a instance string value should match in order to be valid.",optional:!0,pre:["addToRefs",function(e){return e instanceof RegExp?e:"string"==typeof e?new RegExp(e):e
}]},maxLength:{type:"number",optional:!0,description:"When the instance value is a string, this indicates maximum length of the string.",pre:"addToRefs"},minLength:{type:"number",optional:!0,description:"When the instance value is a string, this indicates minimum length of the string.",pre:"addToRefs"},format:{type:"string",optional:!0,description:"This indicates what format the data is among some predefined formats which may include:\n\ndate - a string following the ISO format \naddress \nschema - a schema definition object \nperson \npage \nhtml - a string representing HTML",pre:"addToRefs"}},pre:["instantiateSchema","addToRefs"]};(jsonSchemaCore=new e(i)).setFallbacks(t.STRICT_FALLBACKS);for(var a in jsonSchemaCore.properties)(jsonSchemaCore.properties[a]=new e(jsonSchemaCore.properties[a])).setFallbacks(t.STRICT_FALLBACKS);(jsonSchemaCore.properties.type.items=new e(jsonSchemaCore.properties.type.items)).setFallbacks(t.STRICT_FALLBACKS),jsonSchemaCore.properties.type.items["enum"]=jsonSchemaCore.properties.type["enum"],jsonSchemaCore.properties.id.pattern=new RegExp(jsonSchemaCore.properties.id.pattern),(jsonSchemaCore.properties.options.items=new e(jsonSchemaCore.properties.options.items)).setFallbacks(t.STRICT_FALLBACKS),jsonSchemaCore.properties.requires.additionalProperties=jsonSchemaCore,(jsonSchemaCore.properties.pre.items=new e(jsonSchemaCore.properties.pre.items)).setFallbacks(t.STRICT_FALLBACKS),(jsonSchemaCore.properties.post.items=new e(jsonSchemaCore.properties.post.items)).setFallbacks(t.STRICT_FALLBACKS),(jsonSchemaCore.properties.fallbacks.additionalProperties=new e(jsonSchemaCore.properties.fallbacks.additionalProperties)).setFallbacks(t.STRICT_FALLBACKS),jsonSchemaCore.properties.properties.additionalProperties=jsonSchemaCore,jsonSchemaCore.properties.items.properties=jsonSchemaCore.properties,jsonSchemaCore.properties.items.items=jsonSchemaCore,jsonSchemaCore.properties.additionalProperties.properties=jsonSchemaCore.properties,this.schemaSchema=jsonSchemaCore
}});