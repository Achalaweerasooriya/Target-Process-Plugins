/*!!
 * JS Signals <http://millermedeiros.github.com/js-signals/>
 * Released under the MIT license <http://www.opensource.org/licenses/mit-license.php>
 * @author Miller Medeiros <http://millermedeiros.com/>
 * @version 0.6
 * @build 174 (04/09/2011 05:27 PM)
 */

(function(global){function SignalBinding(signal,listener,isOnce,listenerContext,priority){this._listener=listener,this._isOnce=isOnce,this.context=listenerContext,this._signal=signal,this._priority=priority||0}var signals={VERSION:"0.6"};SignalBinding.prototype={active:!0,execute:function(paramsArr){var r;return this.active&&(r=this._listener.apply(this.context,paramsArr),this._isOnce&&this.detach()),r},detach:function(){return this._signal.remove(this._listener)},getListener:function(){return this._listener},dispose:function(){this.detach(),this._destroy()},_destroy:function(){delete this._signal,delete this._isOnce,delete this._listener,delete this.context},isOnce:function(){return this._isOnce},toString:function(){return"[SignalBinding isOnce: "+this._isOnce+", active: "+this.active+"]"}},signals.Signal=function(){this._bindings=[]},signals.Signal.prototype={_shouldPropagate:!0,active:!0,_registerListener:function(listener,isOnce,scope,priority){if(typeof listener!="function")throw new Error("listener is a required param of add() and addOnce() and should be a Function.");var prevIndex=this._indexOfListener(listener),binding;if(prevIndex!==-1){binding=this._bindings[prevIndex];if(binding.isOnce()!==isOnce)throw new Error("You cannot add"+(isOnce?"":"Once")+"() then add"+(isOnce?"Once":"")+"() the same listener without removing the relationship first.")}else binding=new SignalBinding(this,listener,isOnce,scope,priority),this._addBinding(binding);return binding},_addBinding:function(binding){var n=this._bindings.length;do--n;while(this._bindings[n]&&binding._priority<=this._bindings[n]._priority);this._bindings.splice(n+1,0,binding)},_indexOfListener:function(listener){var n=this._bindings.length;while(n--)if(this._bindings[n]._listener===listener)return n;return-1},add:function(listener,scope,priority){return this._registerListener(listener,!1,scope,priority)},addOnce:function(listener,scope,priority){return this._registerListener(listener,!0,scope,priority)},remove:function(listener){if(typeof listener!="function")throw new Error("listener is a required param of remove() and should be a Function.");var i=this._indexOfListener(listener);return i!==-1&&(this._bindings[i]._destroy(),this._bindings.splice(i,1)),listener},removeAll:function(){var n=this._bindings.length;while(n--)this._bindings[n]._destroy();this._bindings.length=0},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(params){if(!this.active)return;var paramsArr=Array.prototype.slice.call(arguments),bindings=this._bindings.slice(),n=this._bindings.length;this._shouldPropagate=!0;do n--;while(bindings[n]&&this._shouldPropagate&&bindings[n].execute(paramsArr)!==!1)},dispose:function(){this.removeAll(),delete this._bindings},toString:function(){return"[Signal active: "+this.active+" numListeners: "+this.getNumListeners()+"]"}},global.signals=signals})(window||global||this)