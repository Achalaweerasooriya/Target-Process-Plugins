define(["require","react","jQuery"],function(e){var t=e("react"),r=e("jQuery");if(t.addons=t.addons||{},t.addons.InfiniteScroll)return t.addons.InfiniteScroll;var n=t.addons.InfiniteScroll=t.createClass({statics:{setDefaultLoader:function(e){n._defaultLoader=e}},getDefaultProps:function(){return{pageStart:0,hasMore:!1,loadMore:function(){},threshold:250}},reset:function(){this.pageLoaded=0},componentDidMount:function(){this.pageLoaded=this.props.pageStart,this.attachScrollListener()},componentDidUpdate:function(){this.attachScrollListener()},render:function(){var e=this.props;return t.DOM.div(null,e.children,e.hasMore&&(e.loader||n._defaultLoader))},getScrollParent:function(){return r(this.getDOMNode()).scrollParent()[0]},scrollListener:function(){var e=this.getScrollParent();e.scrollHeight-r(e).scrollTop()-r(e).height()<Number(this.props.threshold)&&(this.detachScrollListener(),this.props.loadMore(this.pageLoaded+=1))},attachScrollListener:function(){if(this.props.hasMore){var e=this.getScrollParent();e.addEventListener("scroll",this.scrollListener),e.addEventListener("resize",this.scrollListener),this.scrollListener()}},detachScrollListener:function(){var e=this.getScrollParent();e.removeEventListener("scroll",this.scrollListener),e.removeEventListener("resize",this.scrollListener)},componentWillUnmount:function(){this.detachScrollListener()}});return n});