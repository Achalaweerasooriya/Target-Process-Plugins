require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("selection.each");suite.addBatch({"select(body)":{topic:function(){return d3.select("body").html("")},"calls the function once per element":function(a){var b=0;a.each(function(){++b}),assert.equal(b,1)},"passes the data and index to the function":function(a){var b=new Object,c,d;a.data([b]).each(function(a,b){c=a,d=b}),assert.isTrue(c===b),assert.isTrue(d===0)},"uses the node as the context":function(a){var b;a.each(function(){b=this}),assert.isTrue(b===document.body)},"returns the same selection":function(a){assert.isTrue(a.each(function(){})===a)},"ignores null nodes":function(){var a=0,b=d3.select("body");b[0][0]=null,b.each(function(){++a}),assert.equal(a,0)},"returns the current selection":function(a){assert.isTrue(a.each(function(){})===a)}}}),suite.addBatch({"selectAll(div)":{topic:function(){return d3.select("body").html("").selectAll("div").data(d3.range(2)).enter().append("div")},"calls the function once per element":function(a){var b=0;a.each(function(){++b}),assert.equal(b,2)},"passes the data and index to the function":function(a){var b=[new Object,new Object],c=[],d=[];a.data(b).each(function(a,b){c.push(a),d.push(b)}),assert.deepEqual(c,b),assert.deepEqual(d,[0,1])},"uses the node as the context":function(a){var b=[];a.each(function(){b.push(this)}),assert.equal(b.length,2),assert.isTrue(a[0][0]==b[0]),assert.isTrue(a[0][1]==b[1])},"returns the same selection":function(a){assert.isTrue(a.each(function(){})===a)},"ignores null nodes":function(a){var b=0,c=d3.selectAll("div");c[0][0]=null,c.each(function(){++b}),assert.equal(b,1)},"returns the current selection":function(a){assert.isTrue(a.each(function(){})===a)}}}),suite.export(module)