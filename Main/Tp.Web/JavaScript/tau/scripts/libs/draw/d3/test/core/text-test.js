require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.text");suite.addBatch({text:{topic:function(){var a=this.callback;return d3.text("examples/data/sample.txt",function(b){a(null,b)})},"invokes the callback with the loaded text":function(a){assert.equal(a,"Hello, world!\n")},"does not override the mime type by default":function(a){assert.isUndefined(XMLHttpRequest._last._info.mimeType)},"":{topic:function(){var a=this.callback;return d3.text("examples/data/sample.txt","text/plain+sample",function(b){a(null,b)})},"observes the optional mime type":function(a){assert.equal(XMLHttpRequest._last._info.mimeType,"text/plain+sample")}}," ":{topic:function(){var a=this.callback;return d3.text("//does/not/exist.txt",function(b){a(null,b)})},"invokes the callback with null when an error occurs":function(a){assert.isNull(a)}}}}),suite.export(module)