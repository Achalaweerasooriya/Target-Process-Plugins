require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.scale.sqrt");suite.addBatch({sqrt:{topic:function(){return d3.scale.sqrt},domain:{"defaults to [0, 1]":function(a){var b=a();assert.deepEqual(b.domain(),[0,1]),assert.inDelta(b(.5),.7071068,1e-6)},"coerces domain to numbers":function(a){var b=a().domain([new Date(1990,0,1),new Date(1991,0,1)]);assert.equal(typeof b.domain()[0],"number"),assert.equal(typeof b.domain()[1],"number"),assert.inDelta(b(new Date(1989,9,20)),-0.2,.01),assert.inDelta(b(new Date(1990,0,1)),0,.01),assert.inDelta(b(new Date(1990,2,15)),.2,.01),assert.inDelta(b(new Date(1990,4,27)),.4,.01),assert.inDelta(b(new Date(1991,0,1)),1,.01),assert.inDelta(b(new Date(1991,2,15)),1.2,.01);var b=a().domain(["0","1"]);assert.equal(typeof b.domain()[0],"number"),assert.equal(typeof b.domain()[1],"number"),assert.inDelta(b(.5),.7071068,1e-6);var b=a().domain([new Number(0),new Number(1)]);assert.equal(typeof b.domain()[0],"number"),assert.equal(typeof b.domain()[1],"number"),assert.inDelta(b(.5),.7071068,1e-6)},"can specify a polypower domain and range":function(a){var b=a().domain([-10,0,100]).range(["red","white","green"]);assert.equal(b(-5),"#ff4b4b"),assert.equal(b(50),"#4ba54b"),assert.equal(b(75),"#229122")}},range:{"defaults to [0, 1]":function(a){var b=a();assert.deepEqual(b.range(),[0,1]),assert.inDelta(b.invert(.5),.25,1e-6)},"does not coerce range to numbers":function(a){var b=a().range(["0","2"]);assert.equal(typeof b.range()[0],"string"),assert.equal(typeof b.range()[1],"string")},"coerces range value to number on invert":function(a){var b=a().range(["0","2"]);assert.inDelta(b.invert("1"),.25,1e-6);var b=a().range([new Date(1990,0,1),new Date(1991,0,1)]);assert.inDelta(b.invert(new Date(1990,6,2,13)),.25,1e-6);var b=a().range(["#000","#fff"]);assert.isNaN(b.invert("#999"))},"can specify range values as colors":function(a){var b=a().range(["red","blue"]);assert.equal(b(.25),"#800080");var b=a().range(["#ff0000","#0000ff"]);assert.equal(b(.25),"#800080");var b=a().range(["#f00","#00f"]);assert.equal(b(.25),"#800080");var b=a().range([d3.rgb(255,0,0),d3.hsl(240,1,.5)]);assert.equal(b(.25),"#800080");var b=a().range(["hsl(0,100%,50%)","hsl(240,100%,50%)"]);assert.equal(b(.25),"#800080")},"can specify range values as arrays or objects":function(a){var b=a().range([{color:"red"},{color:"blue"}]);assert.deepEqual(b(.25),{color:"#800080"});var b=a().range([["red"],["blue"]]);assert.deepEqual(b(.25),["#800080"])}},exponent:{"defaults to .5":function(a){var b=a();assert.equal(b.exponent(),.5)},"observes the specified exponent":function(a){var b=a().exponent(.5).domain([1,2]);assert.inDelta(b(1),0,1e-6),assert.inDelta(b(1.5),.5425821,1e-6),assert.inDelta(b(2),1,1e-6);var b=a().exponent(2).domain([1,2]);assert.inDelta(b(1),0,1e-6),assert.inDelta(b(1.5),.41666667,1e-6),assert.inDelta(b(2),1,1e-6);var b=a().exponent(-1).domain([1,2]);assert.inDelta(b(1),0,1e-6),assert.inDelta(b(1.5),.6666667,1e-6),assert.inDelta(b(2),1,1e-6)},"changing the exponent does not change the domain or range":function(a){var b=a().domain([1,2]).range([3,4]),c=d3.format(".6f");b.exponent(.5),assert.deepEqual(b.domain().map(c),[1,2]),assert.deepEqual(b.range(),[3,4]),b.exponent(2),assert.deepEqual(b.domain().map(c),[1,2]),assert.deepEqual(b.range(),[3,4]),b.exponent(-1),assert.deepEqual(b.domain().map(c),[1,2]),assert.deepEqual(b.range(),[3,4])}},interpolate:{"defaults to d3.interpolate":function(a){var b=a().range(["red","blue"]);assert.equal(b.interpolate(),d3.interpolate),assert.equal(b(.5),"#4b00b4")},"can specify a custom interpolator":function(a){var b=a().range(["red","blue"]).interpolate(d3.interpolateHsl);assert.equal(b(.25),"#00ff00")}},clamp:{"defaults to false":function(a){var b=a();assert.isFalse(b.clamp()),assert.inDelta(b(-0.5),-0.7071068,1e-6),assert.inDelta(b(1.5),1.22474487,1e-6)},"can clamp to the domain":function(a){var b=a().clamp(!0);assert.inDelta(b(-0.5),0,1e-6),assert.inDelta(b(.25),.5,1e-6),assert.inDelta(b(1.5),1,1e-6);var b=a().domain([1,0]).clamp(!0);assert.inDelta(b(-0.5),1,1e-6),assert.inDelta(b(.25),.5,1e-6),assert.inDelta(b(1.5),0,1e-6)}},"maps a number to a number":function(a){var b=a().domain([1,2]);assert.inDelta(b(.5),-0.7071068,1e-6),assert.inDelta(b(1),0,1e-6),assert.inDelta(b(1.5),.5425821,1e-6),assert.inDelta(b(2),1,1e-6),assert.inDelta(b(2.5),1.4029932,1e-6)},ticks:{"can generate ticks of varying degree":function(a){var b=a();assert.deepEqual(b.ticks(1).map(b.tickFormat(1)),[0,1]),assert.deepEqual(b.ticks(2).map(b.tickFormat(2)),[0,.5,1]),assert.deepEqual(b.ticks(5).map(b.tickFormat(5)),[0,.2,.4,.6,.8,1]),assert.deepEqual(b.ticks(10).map(b.tickFormat(10)),[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1]);var b=a().domain([1,0]);assert.deepEqual(b.ticks(1).map(b.tickFormat(1)),[0,1]),assert.deepEqual(b.ticks(2).map(b.tickFormat(2)),[0,.5,1]),assert.deepEqual(b.ticks(5).map(b.tickFormat(5)),[0,.2,.4,.6,.8,1]),assert.deepEqual(b.ticks(10).map(b.tickFormat(10)),[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1])}},nice:{"can nice the domain, extending it to round numbers":function(a){var b=a().domain([1.1,10.9]).nice(),c=d3.format(".6f");assert.deepEqual(b.domain().map(c),[1,11]);var b=a().domain([10.9,1.1]).nice();assert.deepEqual(b.domain().map(c),[11,1]);var b=a().domain([.7,11.001]).nice();assert.deepEqual(b.domain().map(c),[0,12]);var b=a().domain([123.1,6.7]).nice();assert.deepEqual(b.domain().map(c),[130,0]);var b=a().domain([0,.49]).nice();assert.deepEqual(b.domain().map(c),[0,.5])},"nicing a polypower domain only affects the extent":function(a){var b=a().domain([1.1,1,2,3,10.9]).nice(),c=d3.format(".6f");assert.deepEqual(b.domain().map(c),[1,1,2,3,11]);var b=a().domain([123.1,1,2,3,-0.9]).nice();assert.deepEqual(b.domain().map(c),[130,1,2,3,"âˆ’10.000000"])}},copy:{"changes to the domain are isolated":function(a){var b=a(),c=b.copy();b.domain([1,2]),assert.deepEqual(c.domain(),[0,1]),assert.equal(b(1),0),assert.equal(c(1),1),c.domain([2,3]),assert.equal(b(2),1),assert.equal(c(2),0),assert.inDelta(b.domain(),[1,2],1e-6),assert.inDelta(c.domain(),[2,3],1e-6)},"changes to the range are isolated":function(a){var b=a(),c=b.copy();b.range([1,2]),assert.equal(b.invert(1),0),assert.equal(c.invert(1),1),assert.deepEqual(c.range(),[0,1]),c.range([2,3]),assert.equal(b.invert(2),1),assert.equal(c.invert(2),0),assert.deepEqual(b.range(),[1,2]),assert.deepEqual(c.range(),[2,3])},"changes to the exponent are isolated":function(a){var b=a().exponent(2),c=b.copy();b.exponent(.5),assert.inDelta(b(.5),Math.SQRT1_2,1e-6),assert.inDelta(c(.5),.25,1e-6),assert.equal(b.exponent(),.5),assert.equal(c.exponent(),2),c.exponent(3),assert.inDelta(b(.5),Math.SQRT1_2,1e-6),assert.inDelta(c(.5),.125,1e-6),assert.equal(b.exponent(),.5),assert.equal(c.exponent(),3)},"changes to the interpolator are isolated":function(a){var b=a().range(["red","blue"]),c=b.copy();b.interpolate(d3.interpolateHsl),assert.equal(b(.5),"#00ffd3"),assert.equal(c(.5),"#4b00b4"),assert.equal(c.interpolate(),d3.interpolate)},"changes to clamping are isolated":function(a){var b=a().clamp(!0),c=b.copy();b.clamp(!1),assert.equal(b(2),Math.SQRT2),assert.equal(c(2),1),assert.isTrue(c.clamp()),c.clamp(!1),assert.equal(b(2),Math.SQRT2),assert.equal(c(2),Math.SQRT2),assert.isFalse(b.clamp())}}}}),suite.export(module)