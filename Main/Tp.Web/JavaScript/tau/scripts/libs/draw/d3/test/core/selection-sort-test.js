function data(a){return a.__data__}require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("selection.sort");suite.addBatch({"selectAll(div).selectAll(span)":{topic:function(){return d3.select("body").html("").selectAll("div").data([1,2,10,20]).enter().append("div").selectAll("span").data(function(a){return[20+a,2+a,10,1]}).enter().append("span")},"sorts elements by natural order":function(a){a.sort(),assert.domNull(a[0][0].previousSibling),assert.domEqual(a[0][1].previousSibling,a[0][0]),assert.domEqual(a[0][2].previousSibling,a[0][1]),assert.domEqual(a[0][3].previousSibling,a[0][2]),assert.domNull(a[0][3].nextSibling)},"sorts each group independently":function(a){a.sort(d3.descending),assert.deepEqual(a[0].map(data),[21,10,3,1]),assert.deepEqual(a[1].map(data),[22,10,4,1]),assert.deepEqual(a[2].map(data),[30,12,10,1]),assert.deepEqual(a[3].map(data),[40,22,10,1])},"sorts using the specified comparator":function(a){a.sort(function(a,b){return d3.ascending(a+"",b+"")}),assert.deepEqual(a[0].map(data),[1,10,21,3]),assert.deepEqual(a[1].map(data),[1,10,22,4]),assert.deepEqual(a[2].map(data),[1,10,12,30]),assert.deepEqual(a[3].map(data),[1,10,22,40])},"treats null nodes as null data":function(a){var b=d3.selectAll("div:first-child span"),c=!1;b[0][0]=null,b.sort(function(a,b){return(a===null||b===null)&&++c,a-b}),assert.isTrue(c>0),assert.domNull(a[0][0].previousSibling),assert.deepEqual(b[0].slice(1).map(data),[3,10,21])},"returns the current selection":function(a){a=d3.select("body"),assert.isTrue(a.sort()===a)}}}),suite.export(module)