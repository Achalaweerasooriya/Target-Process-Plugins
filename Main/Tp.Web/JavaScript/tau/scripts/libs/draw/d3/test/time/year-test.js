function local(a,b,c,d,e,f,g){var h=new Date;return h.setFullYear(a,b,c),h.setHours(d||0,e||0,f||0,g||0),h}function utc(a,b,c,d,e,f,g){var h=new Date;return h.setUTCFullYear(a,b,c),h.setUTCHours(d||0,e||0,f||0,g||0),h}require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.time.year");suite.addBatch({year:{topic:function(){return d3.time.year},"defaults to floor":function(a){assert.strictEqual(a,a.floor)},floor:{topic:function(a){return a.floor},"returns years":function(a){assert.deepEqual(a(local(2010,11,31,23,59,59)),local(2010,0,1)),assert.deepEqual(a(local(2011,0,1,0,0,0)),local(2011,0,1)),assert.deepEqual(a(local(2011,0,1,0,0,1)),local(2011,0,1))}},ceil:{topic:function(a){return a.ceil},"returns years":function(a){assert.deepEqual(a(local(2010,11,31,23,59,59)),local(2011,0,1)),assert.deepEqual(a(local(2011,0,1,0,0,0)),local(2011,0,1)),assert.deepEqual(a(local(2011,0,1,0,0,1)),local(2012,0,1))}},offset:{topic:function(a){return a.offset},"does not modify the passed-in date":function(a){var b=local(2010,11,31,23,59,59,999);a(b,1),assert.deepEqual(b,local(2010,11,31,23,59,59,999))},"does not round the passed-in-date":function(a){assert.deepEqual(a(local(2010,11,31,23,59,59,999),1),local(2011,11,31,23,59,59,999)),assert.deepEqual(a(local(2010,11,31,23,59,59,456),-2),local(2008,11,31,23,59,59,456))},"allows negative offsets":function(a){assert.deepEqual(a(local(2010,11,1),-1),local(2009,11,1)),assert.deepEqual(a(local(2011,0,1),-2),local(2009,0,1)),assert.deepEqual(a(local(2011,0,1),-1),local(2010,0,1))},"allows positive offsets":function(a){assert.deepEqual(a(local(2009,11,1),1),local(2010,11,1)),assert.deepEqual(a(local(2009,0,1),2),local(2011,0,1)),assert.deepEqual(a(local(2010,0,1),1),local(2011,0,1))},"allows zero offset":function(a){assert.deepEqual(a(local(2010,11,31,23,59,59,999),0),local(2010,11,31,23,59,59,999)),assert.deepEqual(a(local(2010,11,31,23,59,58,0),0),local(2010,11,31,23,59,58,0))}},UTC:{topic:function(a){return a.utc},"defaults to floor":function(a){assert.strictEqual(a,a.floor)},floor:{topic:function(a){return a.floor},"returns years":function(a){assert.deepEqual(a(utc(2010,11,31,23,59,59)),utc(2010,0,1)),assert.deepEqual(a(utc(2011,0,1,0,0,0)),utc(2011,0,1)),assert.deepEqual(a(utc(2011,0,1,0,0,1)),utc(2011,0,1))}},ceil:{topic:function(a){return a.ceil},"returns years":function(a){assert.deepEqual(a(utc(2010,11,31,23,59,59)),utc(2011,0,1)),assert.deepEqual(a(utc(2011,0,1,0,0,0)),utc(2011,0,1)),assert.deepEqual(a(utc(2011,0,1,0,0,1)),utc(2012,0,1))}},offset:{topic:function(a){return a.offset},"does not modify the passed-in date":function(a){var b=utc(2010,11,31,23,59,59,999);a(b,1),assert.deepEqual(b,utc(2010,11,31,23,59,59,999))},"does not round the passed-in-date":function(a){assert.deepEqual(a(utc(2010,11,31,23,59,59,999),1),utc(2011,11,31,23,59,59,999)),assert.deepEqual(a(utc(2010,11,31,23,59,59,456),-2),utc(2008,11,31,23,59,59,456))},"allows negative offsets":function(a){assert.deepEqual(a(utc(2010,11,1),-1),utc(2009,11,1)),assert.deepEqual(a(utc(2011,0,1),-2),utc(2009,0,1)),assert.deepEqual(a(utc(2011,0,1),-1),utc(2010,0,1))},"allows positive offsets":function(a){assert.deepEqual(a(utc(2009,11,1),1),utc(2010,11,1)),assert.deepEqual(a(utc(2009,0,1),2),utc(2011,0,1)),assert.deepEqual(a(utc(2010,0,1),1),utc(2011,0,1))},"allows zero offset":function(a){assert.deepEqual(a(utc(2010,11,31,23,59,59,999),0),utc(2010,11,31,23,59,59,999)),assert.deepEqual(a(utc(2010,11,31,23,59,58,0),0),utc(2010,11,31,23,59,58,0))}}}}}),suite.export(module)