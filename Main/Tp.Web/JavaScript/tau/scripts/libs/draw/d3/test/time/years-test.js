function local(a,b,c,d,e,f,g){var h=new Date;return h.setFullYear(a,b,c),h.setHours(d||0,e||0,f||0,g||0),h}function utc(a,b,c,d,e,f,g){var h=new Date;return h.setUTCFullYear(a,b,c),h.setUTCHours(d||0,e||0,f||0,g||0),h}require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.time.years");suite.addBatch({years:{topic:function(){return d3.time.years},"returns years":function(a){assert.deepEqual(a(local(2010,0,1),local(2013,0,1)),[local(2010,0,1),local(2011,0,1),local(2012,0,1)])},"has an inclusive lower bound":function(a){assert.deepEqual(a(local(2010,0,1),local(2013,0,1))[0],local(2010,0,1))},"has an exclusive upper bound":function(a){assert.deepEqual(a(local(2010,0,1),local(2013,0,1))[2],local(2012,0,1))},"can skip years":function(a){assert.deepEqual(a(local(2009,0,1),local(2029,0,1),5),[local(2010,0,1),local(2015,0,1),local(2020,0,1),local(2025,0,1)])},UTC:{topic:function(a){return a.utc},"returns years":function(a){assert.deepEqual(a(utc(2010,0,1),utc(2013,0,1)),[utc(2010,0,1),utc(2011,0,1),utc(2012,0,1)])},"has an inclusive lower bound":function(a){assert.deepEqual(a(utc(2010,0,1),utc(2013,0,1))[0],utc(2010,0,1))},"has an exclusive upper bound":function(a){assert.deepEqual(a(utc(2010,0,1),utc(2013,0,1))[2],utc(2012,0,1))},"can skip years":function(a){assert.deepEqual(a(utc(2009,0,1),utc(2029,0,1),5),[utc(2010,0,1),utc(2015,0,1),utc(2020,0,1),utc(2025,0,1)])}}}}),suite.export(module)