function timer(a){var b=Array.prototype.slice.call(arguments);return function(){var a=this.callback,c={scheduled:Date.now(),count:0};b.unshift(function(){var b=++c.count;if(b===1)c.start=Date.now();else if(b===4)return c.stop=Date.now(),a(null,c),!0}),d3.timer.apply(this,b)}}require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.timer");suite.addBatch({timer:{topic:function(){return d3.timer},"with no delay":{topic:timer(),"first calls after 17 ms or less":function(a){assert.inDelta(a.start-a.scheduled,17,20)},"calls until the function returns true":function(a){assert.equal(a.count,4)},"calls every 17 ms":function(a){assert.inDelta(a.stop-a.start,51,20)}},"with a specified delay":{topic:timer(250),"first calls after the delay":function(a){assert.inDelta(a.start-a.scheduled,250,20)},"calls until the function returns true":function(a){assert.equal(a.count,4)},"calls every 17 ms":function(a){assert.inDelta(a.stop-a.start,51,20)}}}}),suite.export(module)