require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.scale.log");suite.addBatch({log:{topic:function(){return d3.scale.log},domain:{"defaults to [1, 10]":function(a){var b=a();assert.deepEqual(b.domain(),[1,10]),assert.inDelta(b(5),.69897,1e-6)},"coerces domain values to numbers":function(a){var b=a().domain([new Date(1990,0,1),new Date(1991,0,1)]);assert.equal(typeof b.domain()[0],"number"),assert.equal(typeof b.domain()[1],"number"),assert.inDelta(b(new Date(1989,9,20)),-0.2,.01),assert.inDelta(b(new Date(1990,0,1)),0,.01),assert.inDelta(b(new Date(1990,2,15)),.2,.01),assert.inDelta(b(new Date(1990,4,27)),.4,.01),assert.inDelta(b(new Date(1991,0,1)),1,.01),assert.inDelta(b(new Date(1991,2,15)),1.2,.01);var b=a().domain(["1","10"]);assert.equal(typeof b.domain()[0],"number"),assert.equal(typeof b.domain()[1],"number"),assert.inDelta(b(5),.69897,1e-6);var b=a().domain([new Number(1),new Number(10)]);assert.equal(typeof b.domain()[0],"number"),assert.equal(typeof b.domain()[1],"number"),assert.inDelta(b(5),.69897,1e-6)},"can specify negative domain values":function(a){var b=a().domain([-100,-1]);assert.deepEqual(b.ticks().map(b.tickFormat()),["−1e+2","−9e+1","−8e+1","−7e+1","−6e+1","−5e+1","−4e+1","−3e+1","−2e+1","−1e+1","−9e+0","−8e+0","−7e+0","−6e+0","−5e+0","−4e+0","−3e+0","−2e+0","−1e+0"]),assert.inDelta(b(-50),.150515,1e-6)},"can specify a polylog domain and range":function(a){var b=a().domain([.1,1,100]).range(["red","white","green"]);assert.equal(b(.5),"#ffb2b2"),assert.equal(b(50),"#269326"),assert.equal(b(75),"#108810")}},range:{"defaults to [0, 1]":function(a){var b=a();assert.deepEqual(b.range(),[0,1]),assert.inDelta(b.invert(.5),3.162278,1e-6)},"does not coerce range to numbers":function(a){var b=a().range(["0","2"]);assert.equal(typeof b.range()[0],"string"),assert.equal(typeof b.range()[1],"string")},"can specify range values as colors":function(a){var b=a().range(["red","blue"]);assert.equal(b(5),"#4d00b2");var b=a().range(["#ff0000","#0000ff"]);assert.equal(b(5),"#4d00b2");var b=a().range(["#f00","#00f"]);assert.equal(b(5),"#4d00b2");var b=a().range([d3.rgb(255,0,0),d3.hsl(240,1,.5)]);assert.equal(b(5),"#4d00b2");var b=a().range(["hsl(0,100%,50%)","hsl(240,100%,50%)"]);assert.equal(b(5),"#4d00b2")},"can specify range values as arrays or objects":function(a){var b=a().range([{color:"red"},{color:"blue"}]);assert.deepEqual(b(5),{color:"#4d00b2"});var b=a().range([["red"],["blue"]]);assert.deepEqual(b(5),["#4d00b2"])}},interpolate:{"defaults to d3.interpolate":function(a){var b=a().range(["red","blue"]);assert.equal(b.interpolate(),d3.interpolate),assert.equal(b(5),"#4d00b2")},"can specify a custom interpolator":function(a){var b=a().range(["red","blue"]).interpolate(d3.interpolateHsl);assert.equal(b(5),"#00ffcb")}},clamp:{"defaults to false":function(a){var b=a();assert.isFalse(b.clamp()),assert.inDelta(b(.5),-0.3010299,1e-6),assert.inDelta(b(15),1.1760913,1e-6)},"can clamp to the domain":function(a){var b=a().clamp(!0);assert.inDelta(b(-1),0,1e-6),assert.inDelta(b(5),.69897,1e-6),assert.inDelta(b(15),1,1e-6);var b=a().domain([10,1]).clamp(!0);assert.inDelta(b(-1),1,1e-6),assert.inDelta(b(5),.30103,1e-6),assert.inDelta(b(15),0,1e-6)},"can clamp to the range":function(a){var b=a().clamp(!0);assert.inDelta(b.invert(-0.1),1,1e-6),assert.inDelta(b.invert(.69897),5,1e-6),assert.inDelta(b.invert(1.5),10,1e-6);var b=a().domain([10,1]).clamp(!0);assert.inDelta(b.invert(-0.1),10,1e-6),assert.inDelta(b.invert(.30103),5,1e-6),assert.inDelta(b.invert(1.5),1,1e-6)}},"maps a number to a number":function(a){var b=a().domain([1,2]);assert.inDelta(b(.5),-1,1e-6),assert.inDelta(b(1),0,1e-6),assert.inDelta(b(1.5),.5849625,1e-6),assert.inDelta(b(2),1,1e-6),assert.inDelta(b(2.5),1.3219281,1e-6)},invert:{"maps a number to a number":function(a){var b=a().domain([1,2]);assert.inDelta(b.invert(-1),.5,1e-6),assert.inDelta(b.invert(0),1,1e-6),assert.inDelta(b.invert(.5849625),1.5,1e-6),assert.inDelta(b.invert(1),2,1e-6),assert.inDelta(b.invert(1.3219281),2.5,1e-6)},"coerces range value to number on invert":function(a){var b=a().range(["0","2"]);assert.inDelta(b.invert("1"),3.1622777,1e-6);var b=a().range([new Date(1990,0,1),new Date(1991,0,1)]);assert.inDelta(b.invert(new Date(1990,6,2,13)),3.1622777,1e-6);var b=a().range(["#000","#fff"]);assert.isNaN(b.invert("#999"))}},ticks:{"can generate ticks":function(a){var b=a();assert.deepEqual(b.ticks().map(b.tickFormat()),["1e+0","2e+0","3e+0","4e+0","5e+0","6e+0","7e+0","8e+0","9e+0","1e+1"]);var b=a().domain([100,1]);assert.deepEqual(b.ticks().map(b.tickFormat()),["1e+0","2e+0","3e+0","4e+0","5e+0","6e+0","7e+0","8e+0","9e+0","1e+1","2e+1","3e+1","4e+1","5e+1","6e+1","7e+1","8e+1","9e+1","1e+2"]);var b=a().domain([.49999,.006029505943610648]);assert.deepEqual(b.ticks().map(b.tickFormat()),["7e-3","8e-3","9e-3","1e-2","2e-2","3e-2","4e-2","5e-2","6e-2","7e-2","8e-2","9e-2","1e-1","2e-1","3e-1","4e-1"]);var b=a().domain([.95,105e6]);assert.deepEqual(b.ticks().map(b.tickFormat(8)).filter(String),["1e+0","1e+1","1e+2","1e+3","1e+4","1e+5","1e+6","1e+7","1e+8"])},"can generate fewer ticks, if desired":function(a){var b=a();assert.deepEqual(b.ticks().map(b.tickFormat(5)),["1e+0","2e+0","3e+0","4e+0","","","","","","1e+1"]);var b=a().domain([100,1]);assert.deepEqual(b.ticks().map(b.tickFormat(10)),["1e+0","2e+0","3e+0","4e+0","5e+0","","","","","1e+1","2e+1","3e+1","4e+1","5e+1","","","","","1e+2"])},"can override the tick format":function(a){var b=a().domain([1000.1,1]);assert.deepEqual(b.ticks().map(b.tickFormat(10,d3.format("+,d"))),["+1","+2","+3","","","","","","","+10","+20","+30","","","","","","","+100","+200","+300","","","","","","","+1,000"])}},nice:{"can nice the domain, extending it to powers of ten":function(a){var b=a().domain([1.1,10.9]).nice();assert.deepEqual(b.domain(),[1,100]);var b=a().domain([10.9,1.1]).nice();assert.deepEqual(b.domain(),[100,1]);var b=a().domain([.7,11.001]).nice();assert.deepEqual(b.domain(),[.1,100]);var b=a().domain([123.1,6.7]).nice();assert.deepEqual(b.domain(),[1e3,1]);var b=a().domain([.01,.49]).nice();assert.deepEqual(b.domain(),[.01,1]);var b=a().domain([0,0]).nice();assert.deepEqual(b.domain(),[0,0]);var b=a().domain([.5,.5]).nice();assert.inDelta(b.domain(),[.5,.5],1e-6)},"nicing a polylog domain only affects the extent":function(a){var b=a().domain([1.1,1.5,10.9]).nice();assert.deepEqual(b.domain(),[1,1.5,100]);var b=a().domain([-123.1,-1.5,-0.5]).nice();assert.deepEqual(b.domain(),[-1e3,-1.5,-0.1])}},copy:{"changes to the domain are isolated":function(a){var b=a(),c=b.copy();b.domain([10,100]),assert.deepEqual(c.domain(),[1,10]),assert.equal(b(10),0),assert.equal(c(1),0),c.domain([100,1e3]),assert.equal(b(100),1),assert.equal(c(100),0),assert.deepEqual(b.domain(),[10,100]),assert.deepEqual(c.domain().map(Math.round),[100,1e3])},"changes to the range are isolated":function(a){var b=a(),c=b.copy();b.range([1,2]),assert.equal(b.invert(1),1),assert.equal(c.invert(1),10),assert.deepEqual(c.range(),[0,1]),c.range([2,3]),assert.equal(b.invert(2),10),assert.equal(c.invert(2),1),assert.deepEqual(b.range(),[1,2]),assert.deepEqual(c.range(),[2,3])},"changes to the interpolator are isolated":function(a){var b=a().range(["red","blue"]),c=b.copy();b.interpolate(d3.interpolateHsl),assert.equal(b(5),"#00ffcb"),assert.equal(c(5),"#4d00b2"),assert.equal(c.interpolate(),d3.interpolate)},"changes to clamping are isolated":function(a){var b=a().clamp(!0),c=b.copy();b.clamp(!1),assert.inDelta(b(.5),-0.30103,1e-6),assert.equal(c(.5),0),assert.isTrue(c.clamp()),c.clamp(!1),assert.inDelta(b(20),1.30103,1e-6),assert.inDelta(c(20),1.30103,1e-6),assert.isFalse(b.clamp())}}}}),suite.export(module)