require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.quantile");suite.addBatch({quantile:{topic:function(){return d3.quantile},"requires sorted numeric input":function(a){assert.equal(a([1,2,3,4],0),1),assert.equal(a([1,2,3,4],1),4),assert.equal(a([4,3,2,1],0),4),assert.equal(a([4,3,2,1],1),1)},"uses the R-7 algorithm":function(a){var b=[3,6,7,8,8,10,13,15,16,20];assert.equal(a(b,0),3),assert.equal(a(b,.25),7.25),assert.equal(a(b,.5),9),assert.equal(a(b,.75),14.5),assert.equal(a(b,1),20);var b=[3,6,7,8,8,9,10,13,15,16,20];assert.equal(a(b,0),3),assert.equal(a(b,.25),7.5),assert.equal(a(b,.5),9),assert.equal(a(b,.75),14),assert.equal(a(b,1),20)},"returns an exact value for integer p-values":function(a){var b={},c={},d={},e={},f=[b,c,d,e];assert.equal(a(f,1/3),c),assert.equal(a(f,2/3),d)},"returns the first value for p = 0":function(a){var b={},c={},d={},e={},f=[b,c,d,e];assert.equal(a(f,0),b)},"returns the last value for p = 1":function(a){var b={},c={},d={},e={},f=[b,c,d,e];assert.equal(a(f,1),e)}}}),suite.export(module)