require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.formatPrefix");suite.addBatch({formatPrefix:{topic:function(){return d3.formatPrefix},"determines the appropriate prefix for small numbers":function(a){assert.equal(a(0).symbol,""),assert.equal(a(1).symbol,""),assert.equal(a(.1).symbol,""),assert.equal(a(.01).symbol,""),assert.equal(a(.001).symbol,"m"),assert.equal(a(1e-4).symbol,"m"),assert.equal(a(1e-5).symbol,"m"),assert.equal(a(1e-6).symbol,"μ"),assert.equal(a(1e-7).symbol,"μ"),assert.equal(a(1e-8).symbol,"μ"),assert.equal(a(1e-9).symbol,"n"),assert.equal(a(1e-10).symbol,"n"),assert.equal(a(1e-11).symbol,"n"),assert.equal(a(1e-12).symbol,"p"),assert.equal(a(1e-13).symbol,"p"),assert.equal(a(1e-14).symbol,"p"),assert.equal(a(1e-15).symbol,"f"),assert.equal(a(1e-16).symbol,"f"),assert.equal(a(1e-17).symbol,"f"),assert.equal(a(1e-18).symbol,"a"),assert.equal(a(1e-19).symbol,"a"),assert.equal(a(1e-20).symbol,"a"),assert.equal(a(1e-21).symbol,"z"),assert.equal(a(1e-22).symbol,"z"),assert.equal(a(1e-23).symbol,"z"),assert.equal(a(1e-24).symbol,"y"),assert.equal(a(1e-25).symbol,"y"),assert.equal(a(1e-26).symbol,"y"),assert.equal(a(1e-27).symbol,"y")},"determines the appropriate prefix for large numbers":function(a){assert.equal(a(0).symbol,""),assert.equal(a(1).symbol,""),assert.equal(a(10).symbol,""),assert.equal(a(100).symbol,""),assert.equal(a(1e3).symbol,"k"),assert.equal(a(1e4).symbol,"k"),assert.equal(a(1e5).symbol,"k"),assert.equal(a(1e6).symbol,"M"),assert.equal(a(1e7).symbol,"M"),assert.equal(a(1e8).symbol,"M"),assert.equal(a(1e9).symbol,"G"),assert.equal(a(1e10).symbol,"G"),assert.equal(a(1e11).symbol,"G"),assert.equal(a(1e12).symbol,"T"),assert.equal(a(1e13).symbol,"T"),assert.equal(a(1e14).symbol,"T"),assert.equal(a(1e15).symbol,"P"),assert.equal(a(1e16).symbol,"P"),assert.equal(a(1e17).symbol,"P"),assert.equal(a(1e18).symbol,"E"),assert.equal(a(1e19).symbol,"E"),assert.equal(a(1e20).symbol,"E"),assert.equal(a(1e+21).symbol,"Z"),assert.equal(a(1e+22).symbol,"Z"),assert.equal(a(1e+23).symbol,"Z"),assert.equal(a(1e+24).symbol,"Y"),assert.equal(a(1e+25).symbol,"Y"),assert.equal(a(1e+26).symbol,"Y"),assert.equal(a(1e+27).symbol,"Y")},"determines the appropriate prefix for negative numbers":function(a){assert.equal(a(0).symbol,""),assert.equal(a(-1).symbol,""),assert.equal(a(-0.001).symbol,"m"),assert.equal(a(-0.000001).symbol,"μ"),assert.equal(a(-1e-9).symbol,"n"),assert.equal(a(-1e-12).symbol,"p"),assert.equal(a(-1e-15).symbol,"f"),assert.equal(a(-1e-18).symbol,"a"),assert.equal(a(-1e-21).symbol,"z"),assert.equal(a(-1e-24).symbol,"y"),assert.equal(a(-1e-27).symbol,"y"),assert.equal(a(-1).symbol,""),assert.equal(a(-1e3).symbol,"k"),assert.equal(a(-1e6).symbol,"M"),assert.equal(a(-1e9).symbol,"G"),assert.equal(a(-1e12).symbol,"T"),assert.equal(a(-1e15).symbol,"P"),assert.equal(a(-1e18).symbol,"E"),assert.equal(a(-1e+21).symbol,"Z"),assert.equal(a(-1e+24).symbol,"Y"),assert.equal(a(-1e+27).symbol,"Y")},"considers the effect of rounding based on precision":function(a){assert.equal(a(999.5,3).symbol,"k"),assert.equal(a(999.5,4).symbol,""),assert.equal(a(.009995,3).symbol,""),assert.equal(a(.009995,4).symbol,"m")}}}),suite.export(module)