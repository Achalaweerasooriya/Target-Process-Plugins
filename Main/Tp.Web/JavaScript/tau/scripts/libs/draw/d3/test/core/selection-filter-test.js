require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("selection.filter");suite.addBatch({"selectAll(div)":{topic:function(){return d3.select("body").html("").selectAll("div").data([0,1]).enter().append("div").selectAll("span").data(function(a){return a<<=1,[a,a+1]}).enter().append("span")},"preserves matching elements":function(a){var b=a.filter(function(a,b){return b===0});assert.isTrue(b[0][0]===a[0][0]),assert.isTrue(b[1][0]===a[1][0])},"removes non-matching elements":function(a){var b=d3.merge(a.filter(function(a,b){return a&1}));assert.equal(b.indexOf(a[0][0]),-1),assert.equal(b.indexOf(a[1][0]),-1)},"preserves data":function(a){var b=a.filter(function(a,b){return a&1});assert.equal(b[0][0].__data__,1),assert.equal(b[1][0].__data__,3)},"preserves grouping":function(a){var b=a.filter(function(a,b){return a&1});assert.equal(b.length,2),assert.equal(b[0].length,1),assert.equal(b[1].length,1)},"preserves parent node":function(a){var b=a.filter(function(a,b){return a&1});assert.isTrue(b[0].parentNode===a[0].parentNode),assert.isTrue(b[1].parentNode===a[1].parentNode)},"does not preserve index":function(a){var b=[];a.filter(function(a,b){return a&1}).each(function(a,c){b.push(c)}),assert.deepEqual(b,[0,0])},"ignores null nodes":function(){var a=d3.selectAll("span");a[0][1]=null;var b=a.filter(function(a,b){return a&1});assert.isTrue(b[0][0]===a[0][3]),assert.equal(b.length,1)},"can be specified as a selector":function(a){a.classed("foo",function(a,b){return a&1});var b=a.filter(".foo");assert.equal(b.length,2),assert.equal(b[0].length,1),assert.equal(b[1].length,1)},"returns a new selection":function(a){assert.isFalse(a.filter(function(){return 1})===a)}}}),suite.export(module)