require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.geo.bonne");suite.addBatch({"default instance":{topic:function(){return d3.geo.bonne()},"scale defaults to 200":function(a){assert.equal(a.scale(),200)},"parallel defaults to 45°":function(a){assert.equal(a.parallel(),45)},"origin defaults to [0,0]":function(a){assert.deepEqual(a.origin(),[0,0])},"translate defaults to [480, 250]":function(a){assert.deepEqual(a.translate(),[480,250])}},"Bonne at 40° parallel":{topic:function(){return d3.geo.bonne().parallel(40)},Arctic:function(a){var b=[0,85],c=a(b);assert.inDelta(c,[480,92.920367],1e-6),assert.inDelta(a.invert(c),b,1e-6)},Antarctic:function(a){var b=[0,-85],c=a(b);assert.inDelta(c,[480,686.332312],1e-6),assert.inDelta(a.invert(c),b,1e-6)},Hawaii:function(a){var b=[-180,0],c=a(b);assert.inDelta(c,[103.604887,-22.895998],1e-6),assert.inDelta(a.invert(c),b,1e-6)},Phillipines:function(a){var b=[180,0],c=a(b);assert.inDelta(c,[856.395112,-22.895998],1e-6),assert.inDelta(a.invert(c),b,1e-6)},"invert observes translation":function(){var a=d3.geo.bonne().translate([123,99]).scale(100),b=a([0,85]),c=a.invert(b);assert.inDelta(c[0],0,1e-6),assert.inDelta(c[1],85,1e-6)},"invert(project(location)) equals location":function(a){for(var b=-1;b<20;++b){var c=[Math.random()*360-180,Math.random()*180-90];assert.inDelta(c,a.invert(a(c)),.5)}},"project(invert(point)) equals point":function(a){for(var b=-1;b<20;++b){var c=[Math.random()*700+100,Math.random()*400+50];assert.inDelta(c,a(a.invert(c)),.5)}}},Werner:{topic:function(){return d3.geo.bonne().parallel(90)},"invert(project(location)) equals location":function(a){for(var b=-1;b<20;++b){var c=[Math.random()*360-180,Math.random()*180-90];assert.inDelta(c,a.invert(a(c)),.5)}},"project(invert(point)) equals point":function(a){for(var b=-1;b<20;++b){var c=[Math.random()*700+100,Math.random()*400+50];assert.inDelta(c,a(a.invert(c)),.5)}}},Sinsuoidal:{topic:function(){return d3.geo.bonne().parallel(0)},"invert(project(location)) equals location":function(a){for(var b=-1;b<20;++b){var c=[Math.random()*360-180,Math.random()*180-90];assert.inDelta(c,a.invert(a(c)),.5)}},"project(invert(point)) equals point":function(a){for(var b=-1;b<20;++b){var c=[Math.random()*700+100,Math.random()*400+50];assert.inDelta(c,a(a.invert(c)),.5)}}}}),suite.export(module)