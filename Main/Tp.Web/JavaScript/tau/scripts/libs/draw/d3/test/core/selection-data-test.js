require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("selection.data");suite.addBatch({"select(body)":{topic:function(){return d3.select("body").html("")},"assigns data as an array":function(a){var b=new Object;a.data([b]),assert.strictEqual(document.body.__data__,b)},"assigns data as a function":function(a){var b=new Object;a.data(function(){return[b]}),assert.strictEqual(document.body.__data__,b)},"stores data in the DOM":function(a){var b=new Object,c;document.body.__data__=b,a.each(function(a){c=a}),assert.strictEqual(c,b)},"returns a new selection":function(a){assert.isFalse(a.data([1])===a)},"with no arguments, returns an array of data":function(a){var b=new Object;a.data([b]),assert.deepEqual(a.data(),[b]),assert.strictEqual(a.data()[0],b)},"throws an error if data is null or undefined":function(a){assert.throws(function(){a.data(null)},Error),assert.throws(function(){a.data(function(){})},Error)}}}),suite.addBatch({"selectAll(div)":{topic:function(){return d3.select("body").html("").selectAll("div").data(d3.range(2)).enter().append("div")},"assigns data as an array":function(a){var b=new Object,c=new Object;a.data([b,c]),assert.strictEqual(a[0][0].__data__,b),assert.strictEqual(a[0][1].__data__,c)},"assigns data as a function":function(a){var b=new Object,c=new Object;a.data(function(){return[b,c]}),assert.strictEqual(a[0][0].__data__,b),assert.strictEqual(a[0][1].__data__,c)},"stores data in the DOM":function(a){var b=new Object,c=new Object,d=[];a[0][0].__data__=b,a[0][1].__data__=c,a.each(function(a){d.push(a)}),assert.deepEqual(d,[b,c])},"returns a new selection":function(a){assert.isFalse(a.data([0,1])===a)},"throws an error if data is null or undefined":function(a){assert.throws(function(){a.data(null)},Error),assert.throws(function(){a.data(function(){})},Error)},"with no arguments, returns an array of data":function(a){var b=new Object,c=new Object,d=[];a[0][0].__data__=b,a[0][1].__data__=c,assert.deepEqual(a.data(),[b,c])},"with no arguments, returned array has undefined for null nodes":function(a){var b=new Object,c=[];a[0][0]=null,a[0][1].__data__=b;var d=a.data();assert.isUndefined(d[0]),assert.strictEqual(d[1],b),assert.equal(d.length,2)}}}),suite.addBatch({"selectAll(div).selectAll(span)":{topic:function(){return d3.select("body").html("").selectAll("div").data(d3.range(2)).enter().append("div").selectAll("span").data(d3.range(2)).enter().append("span")},"assigns data as an array":function(a){var b=new Object,c=new Object;a.data([b,c]),assert.strictEqual(a[0][0].__data__,b),assert.strictEqual(a[0][1].__data__,c),assert.strictEqual(a[1][0].__data__,b),assert.strictEqual(a[1][1].__data__,c)},"assigns data as a function":function(a){var b=new Object,c=new Object,d=new Object,e=new Object;a.data(function(a,f){return f?[d,e]:[b,c]}),assert.strictEqual(a[0][0].__data__,b),assert.strictEqual(a[0][1].__data__,c),assert.strictEqual(a[1][0].__data__,d),assert.strictEqual(a[1][1].__data__,e)},"evaluates the function once per group":function(a){var b=0;a.data(function(){return++b,[0,1]}),assert.equal(b,2)},"defines an update selection for updating data":function(a){var b=a.data(d3.range(4));assert.equal(b.length,2),assert.equal(b[0].length,4),assert.equal(b[1].length,4),assert.domEqual(b[0][0],a[0][0]),assert.domEqual(b[0][1],a[0][1]),assert.domNull(b[0][2]),assert.domNull(b[0][3]),assert.domEqual(b[1][0],a[1][0]),assert.domEqual(b[1][1],a[1][1]),assert.domNull(b[1][2]),assert.domNull(b[1][3])},"defines an enter selection for entering data":function(a){var b=a.data(d3.range(4)).enter();assert.isFalse(b.empty()),assert.equal(b.length,2),assert.equal(b[0].length,4),assert.equal(b[1].length,4),assert.domNull(b[0][0]),assert.domNull(b[0][1]),assert.deepEqual(b[0][2],{__data__:2}),assert.deepEqual(b[0][3],{__data__:3}),assert.domNull(b[1][0]),assert.domNull(b[1][1]),assert.deepEqual(b[1][2],{__data__:2}),assert.deepEqual(b[1][3],{__data__:3})},"defines an exit selection for exiting data":function(a){var b=a.data(d3.range(1)).exit();assert.isFalse(b.empty()),assert.equal(b.length,2),assert.equal(b[0].length,2),assert.equal(b[1].length,2),assert.domNull(b[0][0]),assert.domEqual(b[0][1],a[0][1]),assert.domNull(b[1][0]),assert.domEqual(b[1][1],a[1][1])},"observes the specified key function":function(a){var b=a.data([1,2],Number);assert.isFalse(b.empty()),assert.equal(b.length,2),assert.equal(b[0].length,2),assert.equal(b[1].length,2),assert.domEqual(b[0][0],a[0][1]),assert.domNull(b[0][1]),assert.domEqual(b[1][0],a[1][1]),assert.domNull(b[1][1]);var c=b.enter();assert.equal(c.length,2),assert.equal(c[0].length,2),assert.equal(c[1].length,2),assert.domNull(c[0][0]),assert.deepEqual(c[0][1],{__data__:2}),assert.domNull(c[1][0]),assert.deepEqual(c[1][1],{__data__:2});var d=b.exit();assert.equal(d.length,2),assert.equal(d[0].length,2),assert.equal(d[1].length,2),assert.domEqual(d[0][0],a[0][0]),assert.domNull(d[0][1]),assert.domEqual(d[1][0],a[1][0]),assert.domNull(d[1][1])},"handles keys that are in the default object's prototype chain":function(a){var b=a.data(["hasOwnProperty","isPrototypeOf","toLocaleString","toString","valueOf"],String);assert.domNull(b[0][0]),assert.domNull(b[0][1]),assert.domNull(b[0][2]),assert.domNull(b[0][3]),assert.domNull(b[0][4]),a.data([0],function(){return"hasOwnProperty"})}}}),suite.export(module)