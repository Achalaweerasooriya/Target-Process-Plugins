require("../env");var assert=require("assert");module.exports={topic:function(){function i(i,j,k){return b.push(i),c.push(j),e.push(k),d.push(this)>=2&&a(null,{selection:g,transition:h,data:b,index:c,value:e,context:d,fails:f}),j&&d3.interpolateHsl(k,"blue")}var a=this.callback,b=[],c=[],d=[],e=[],f=0,g=d3.select("body").html("").append("div").selectAll("div").data(["red","green"]).enter().append("div").style("background-color",function(a){return d3.rgb(a)+""}),h=g.transition().styleTween("background-color",function(){++f}).styleTween("background-color",i)},"defines the corresponding style tween":function(a){assert.typeOf(a.transition.tween("style.background-color"),"function")},"the last style tween takes precedence":function(a){assert.equal(a.fails,0)},"invokes the tween function":function(a){assert.deepEqual(a.data,["red","green"],"expected data, got {actual}"),assert.deepEqual(a.index,[0,1],"expected data, got {actual}"),assert.deepEqual(a.value,["#ff0000","#008000"],"expected value, got {actual}"),assert.domEqual(a.context[0],a.selection[0][0],"expected this, got {actual}"),assert.domEqual(a.context[1],a.selection[0][1],"expected this, got {actual}")},end:{topic:function(a){var b=this.callback;a.transition.each("end",function(c,d){d>=1&&b(null,a)})},"uses the returned interpolator":function(a){assert.equal(a.selection[0][1].style.getPropertyValue("background-color"),"#0000ff")},"does nothing if the interpolator is falsey":function(a){assert.equal(a.selection[0][0].style.getPropertyValue("background-color"),"#ff0000")}}}