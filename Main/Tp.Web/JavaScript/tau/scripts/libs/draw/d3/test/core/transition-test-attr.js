require("../env");var assert=require("assert");module.exports={topic:function(){var a=this.callback,b=d3.select("body").append("div").attr("display","none").attr("font-size","20px").attr("width",20).attr("color","red").attr("xlink:type","simple").attr("xlink:href","http://mbostock.github.com/d3/"),c=b.transition().attr("display",null).attr("font-size",function(){return null}).attr("display",null).attr("width",100).attr("width",200).attr("color",function(){return"green"}).attr("xlink:href",null).attr("xlink:type",function(){return null}).each("end",function(){a(null,{selection:b,transition:c})})},"defines the corresponding attr tween":function(a){assert.typeOf(a.transition.tween("attr.width"),"function"),assert.typeOf(a.transition.tween("attr.color"),"function")},"the last attr operator takes precedence":function(a){assert.equal(a.selection.attr("width"),"200")},"sets an attribute as a number":function(a){assert.equal(a.selection.attr("width"),"200")},"sets an attribute as a function":function(a){assert.equal(a.selection.attr("color"),"#008000")},"removes an attribute using a constant null":function(a){assert.equal(a.selection.attr("display"),"")},"removes an attribute using a function null":function(a){assert.equal(a.selection.attr("font-size"),"")},"removes a namespaced attribute using a constant null":function(a){assert.equal(a.selection.attr("xlink:href"),"")},"removes a namespaced attribute using a function null":function(a){assert.equal(a.selection.attr("xlink:type"),"")}}