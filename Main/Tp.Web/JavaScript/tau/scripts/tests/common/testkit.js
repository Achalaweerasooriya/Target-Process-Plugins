define(["Underscore","jQuery","tau/core/class","tau/configurator","tests/common/applicationContext.simple","tau/models/dataprocessor/model.processor.context","tests/components/common/common.setup","tests/components/component.specs","tests/common/service.mock","tau/utils/utils.fixturesLoader"],function(_,$,Class,configurator,AppContext,ContextProcessor,CommonSetup,CommonSpec,ServiceMock,FixturesLoader){return Class.extend({init:function(name,Component){this.name=name,this.Component=Component,this.appContext=new AppContext,this.tests=[]},loadFixtures:function(fixtures){var loader=new FixturesLoader({generateId:!0,setType:!0});return loader.load(fixtures)},addTest:function(test){this.tests.push(test)},setData:function(data){this.data=data},setEntity:function(entity){this.entity=entity},selectProject:function(project,excludePractices){this.appContext.selectProject(project,excludePractices)},selectDefaultProject:function(){this.appContext.selectDefaultProject()},loginAs:function(user){this.appContext.loginAs(user)},getService:function(){return configurator.getService()},run:function(config){config=_.extend(config||{},{context:{applicationContext:this.appContext}}),ContextProcessor(config.context);var data=[];_.forEach(this.data,function(collection,name){data=data.concat(_.values(collection))});var setup=CommonSetup.create(this.name,data,this.Component,config,this.appContext),context={context:{type:this.entity.__type,id:this.entity.id}},spec=CommonSpec.create(setup,context),setMockService=_.bind(function(){var service=new ServiceMock;configurator.setService(service),_.forEach(_.keys(this.data),function(collectionName){configurator.getProxy().markRecordSetAsCompleteLoaded(collectionName)})},this);spec.viewShouldFollowDataComponentLifeCycle(function(){setMockService()});var tests=[];_.forEach(this.tests,function(test){tests.push({name:test.name,context:test.context||null,preSetup:function(){setMockService(),test.preSetup?test.preSetup():null},test:test.test})}),spec.viewShouldPassTests(tests),spec.done()}})})