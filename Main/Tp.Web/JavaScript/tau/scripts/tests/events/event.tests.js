define(["Underscore","tau/core/bus","tests/components/utils/dispatcher"],function(_,Bus,dispatcher){var innerRun=function(){module("[event]",{setup:function(){},teardown:function(){}}),test("pair of events",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1","e2","e1+e2"]);bus.fire("e1",{}),bus.fire("e2",{}),bus.fire("e1",{}),ok(listener.args.e1),ok(listener.args.e2),ok(listener.args["e1+e2"]),equals(listener.counts["e1+e2"],1),equals(listener.counts.e1,2),equals(listener.counts.e2,1)}),test("events order one by one",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1>e2"]);bus.fire("e1",{a:1}),bus.fire("e2",{}),ok(listener.args["e1>e2"])}),test("events order no fire",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1>e2"]);bus.fire("e2",{}),bus.fire("e1",{a:1}),ok(!listener.args["e1>e2"])}),test("events order one by one use last",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1>e2"]);bus.fire("e1",{a:1}),bus.fire("e1",{a:2}),bus.fire("e2",{}),equals(listener.args["e1>e2"].e1.data.a,2)}),test("events order one by one use last",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1 > e2"]);bus.fire("e1",{a:1}),bus.fire("e1",{a:2}),bus.fire("e2",{}),equals(listener.args["e1 > e2"].e1.data.a,2)}),test("events order one by one e1:last>e2",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1:last > e2"]);bus.fire("e1",{a:1}),bus.fire("e2",{}),bus.fire("e2",{}),equals(listener.counts["e1:last > e2"],2)}),test("events order one by one e1>e2:last",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1:last > e2"]);bus.fire("e1",{a:1}),bus.fire("e2",{}),bus.fire("e2",{}),equals(listener.counts["e1:last > e2"],2)}),test("events order one by one e1 > e2 > e3",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1 > e2 > e3"]);bus.fire("e1",{a:1}),bus.fire("e2",{a:2}),bus.fire("e3",{a:3}),equals(listener.counts["e1 > e2 > e3"],1),equals(listener.args["e1 > e2 > e3"].e1.data.a,1),equals(listener.args["e1 > e2 > e3"].e2.data.a,2),equals(listener.args["e1 > e2 > e3"].e3.data.a,3)}),test("pair of events last one handled by default",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1","e2","e1+e2"]);bus.fire("e1",{a:1}),bus.fire("e1",{a:2}),bus.fire("e2",{}),ok(listener.args.e1),equals(listener.args.e1.a,2),ok(listener.args.e2),ok(listener.args["e1+e2"])}),test("pair of events:last",function(){var bus=new Bus,listener=dispatcher.createDispatcher(bus,["e1","e2","e1:last+e2"]);bus.fire("e1",{f:1}),bus.fire("e2",{a:1}),equals(listener.args["e1:last+e2"].e2.data.a,1),equals(listener.counts["e1:last+e2"],1),bus.fire("e2",{a:2}),equals(listener.counts.e1,1),equals(listener.counts.e2,2),equals(listener.counts["e1:last+e2"],2),equals(listener.args["e1:last+e2"].e2.data.a,2)})};return{run:innerRun}})