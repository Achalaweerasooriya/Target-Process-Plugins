define(["jQuery","tests/common/testkit","tau/configurator","tau/components/component.property.build.testPlanRun","tau/components/component.finder"],function($,ComponentTestKit,configurator,Component){var run=function(){var TestCase=new ComponentTestKit("[component.property.build.testPlanRun.practices]",Component),projects={p1:"Preved",p2:"Medved"},releases={r1:"Release",r2:"Release2",r3:"Release3"},iterations={i1:"Iter1",i2:"Iter2"},builds={b1:{name:"Build1",project:"p1",release:"r1"},b2:{name:"Build2",project:"p1",release:"r2",iteration:"i1"}},testPlanRuns={tpr1:{name:"TPR1",project:"p1",release:"r2",build:"b2"},tpr2:{name:"TPR2",project:"p1"},tpr3:{name:"TPR3",project:"p1",release:"r2",iteration:"i1"}},data=TestCase.loadFixtures({projects:projects,iterations:iterations,releases:releases,testPlanRuns:testPlanRuns,builds:builds});return TestCase.setData(data),TestCase.setEntity(data.testPlanRun.tpr1),TestCase.selectProject(data.project.p1,["iterations"]),TestCase.addTest({name:"should change property, correct find3 -- when iteration practice disable",context:{type:"testPlanRun",id:data.testPlanRun.tpr3.id},test:function(){var tpr=data.testPlanRun.tpr3;TestCase.getService().registerFindCommand({config:{$skip:0,$limit:20,fields:["id","name",{project:["id","abbreviation"]}],$query:{"Project.Id":data.project.p1.id,"Release.Id":data.release.r2.id}},returnedData:[data.build.b1,data.build.b2]});var $el=this.$el,$trigger=$el.find(".tau-property__value");$trigger.click();var $list=$(".tau-bubble");equal($list.size(),1,"Count of bubbles");var $options=$list.find(".tau-result-list-row");equals($options.length,2,"Options");var $filterField=$list.find(":text.filter-field");TestCase.getService().registerFindCommand({config:{$skip:0,$limit:20,fields:["id","name",{project:["id","abbreviation"]}],$query:{name:{$contains:"preved"},"Project.Id":data.project.p1.id,"Release.Id":data.release.r2.id}},returnedData:[]}),$filterField.val("preved"),$filterField.trigger(jQuery.Event("keyup",{keyCode:jQuery.ui.keyCode.ENTER})),TestCase.getService().verify()}}),TestCase.run()};return{run:run}})