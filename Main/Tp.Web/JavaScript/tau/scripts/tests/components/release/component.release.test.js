define(["jQuery","tau/components/component.property.release","tests/components/component.specs","tests/common/testData.Generator","tests/common/service.mock","tau/configurator","tests/components/common/common.setup"],function($,ComponentRelease,componentSpecs,TestDataGenerator,ServiceMock,configurator,commonSetup){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),projects=testDataGenerator.getProjects(),bugData=testDataGenerator.getBugs()[0],releases=testDataGenerator.getReleases(),context={manualContext:!0,context:{entity:{entityType:{name:bugData.__type},id:bugData.id},applicationContext:{selectedProjects:[projects[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:testDataGenerator.getProcesses()}}},release=bugData.release,newRelease=releases[3],setup=commonSetup.create("[component.release]",data,ComponentRelease,context),viewTests=[{name:"should render valid markup",test:function(){var $el=this.$el;equal($el.find(".property-text span").text(),release.name,"Release name"),equal($el.find("a").attr("href"),["#release",release.id].join("/"),"Release id")}},{name:"should change release",preSetup:function(){var service=this.service=new ServiceMock;configurator.setService(service)},test:function(){var $el=this.$el,triger=$el.find(".property-text");triger.click();var bubbleList=$(".tau-bubble");equal(bubbleList.size(),1,"Count of bubbles");var newReleaseElement=bubbleList.eq(0).find('.drop-down-option:contains("'+newRelease.name+'")');equal(bubbleList.find(".action-link.clear").size(),1,"Backlog button is available"),this.service.registerSaveCommand({config:{$set:{release:{id:newRelease.id}},fields:["id",{iteration:["id","name"]}],id:bugData.id},returnedData:{id:bugData.id,release:newRelease}}),equal(bubbleList.find(".action-link.more").text(),"show old","Show old is  available"),equal(bubbleList.find(".action-link.clear").text(),"backlog","Backlog button is  available"),newReleaseElement.click(),equal(this.$el.find(".property-text span").text(),newRelease.name,"Release was changed")}}];componentSpecs.create(setup,context).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests(viewTests).done();var emptyBugData=testDataGenerator.getBugs()[1],emptyContext={manualContext:!0,context:{entity:{entityType:{name:emptyBugData.__type},id:emptyBugData.id},applicationContext:{selectedProjects:[projects[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:testDataGenerator.getProcesses()}}},emptyRelease=commonSetup.create("[component.release] empty",data,ComponentRelease,emptyContext);componentSpecs.create(emptyRelease,emptyContext).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests([{name:"should render valid markup for empty release",test:function(){var $el=this.$el;equal($el.find(".property-text span").text(),"","Release name"),$el.click();var bubbleList=$(".tau-bubble");equal(bubbleList.find(".action-link.clear").size(),0,"Backlog button is not available")}}]).done(),testDataGenerator.clear(),testDataGenerator.initDefaultData(),testDataGenerator.removeReleases();var data=testDataGenerator.getData(),noReleasesSetup=commonSetup.create("[component.release] not releases",data,ComponentRelease,emptyContext);componentSpecs.create(noReleasesSetup,emptyContext).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests([{name:"should show no releases found",test:function(){var $el=this.$el;equal($el.find(".property-text span").text(),"","Release name"),$el.find(".property-text").click();var bubbleList=$(".tau-bubble");equal(bubbleList.find(".action-link.clear").size(),0,"Backlog button is not available"),equal(bubbleList.find(".empty-message").text(),"No releases found","Empty message is valid")}}]).done();var testDataGenerator=new TestDataGenerator,projects=testDataGenerator.getProjects(),bugs=testDataGenerator.getBugs();projects[0].releases=[bugs[0].release],testDataGenerator.getProjects(),testDataGenerator.registerData(bugs),testDataGenerator.registerData(projects);var dataWithOneRelease=testDataGenerator.getData(),setup=commonSetup.create("[component.release]",dataWithOneRelease,ComponentRelease,context);componentSpecs.create(setup,context).viewShouldPassTests([{name:"show old should be hidden",test:function(){var $el=this.$el,triger=$el;triger.click();var bubbleList=$(".tau-bubble");equal(bubbleList.find(".action-link.more").size(),0,"Show old is not visible")}}]).done();var testDataGenerator=new TestDataGenerator,projects=testDataGenerator.getProjects(),bugs=testDataGenerator.getBugs();bugs[0].release=null,projects[0].releases=[projects[0].releases[0],projects[0].releases[1]],testDataGenerator.getProjects(),testDataGenerator.registerData(bugs),testDataGenerator.registerData(projects);var dataWithTwoRelease=testDataGenerator.getData(),setup=commonSetup.create("[component.release]",dataWithTwoRelease,ComponentRelease,context);componentSpecs.create(setup,context).viewShouldPassTests([{name:"show old should be visible",test:function(){var $el=this.$el,triger=$el.find(".property-text");triger.click();var bubbleList=$(".tau-bubble");equal(bubbleList.find(".action-link.more").size(),1,"Show old is visible")}}]).done()};return{run:innerRun}})