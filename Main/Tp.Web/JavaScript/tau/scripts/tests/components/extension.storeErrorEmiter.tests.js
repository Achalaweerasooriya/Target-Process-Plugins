define(["Underscore","jQuery","tau/core/bus","tau/store/factory","tau/components/extensions/extension.storeErrorEmiter"],function(_,$,Bus,Factory,StoreErrorEmitterExtension){var innerRun=function(){module("[storeErrorEmitter.extension]",{setup:function(){this.bus=new Bus,this.storeFactory=new Factory;var fail=function(arg){arg.callbacks.failure({data:{cmd:arg},status:500})};this.service={get:fail,find:fail,save:fail},this.storeFactory.setService(this.service),this.store=this.storeFactory.getStore(),this.extension=new StoreErrorEmitterExtension({bus:this.bus,store:this.store}),this.bus.fire("beforeInit",{})},teardown:function(){delete this.bus,delete this.storeFactory,delete this.service,delete this.store,delete this.extension}}),test('should fire "refresh" on SAVE operation failure',function(){var refreshCalls=0;this.bus.on("refresh",function(){++refreshCalls}),this.store.save("bug",{$set:{name:"new name"}}).done(),equals(refreshCalls,0,"Refresh is not fired")}),test('should NOT fire "refresh" on GET operation failure',function(){var refreshCalls=0;this.bus.on("refresh",function(){++refreshCalls}),this.store.get("bug",{id:1,fields:["id","name"]}).done(),equals(refreshCalls,0,"Refresh is NOT fired")}),test('should NOT fire "refresh" on FIND operation failure',function(){var refreshCalls=0;this.bus.on("refresh",function(){++refreshCalls}),this.store.find("bug",{fields:["id","name"],$query:{tags:{$contains:"duplicateOf#123"}}}).done(),equals(refreshCalls,0,"Refresh is NOT fired")})};return{run:innerRun}})