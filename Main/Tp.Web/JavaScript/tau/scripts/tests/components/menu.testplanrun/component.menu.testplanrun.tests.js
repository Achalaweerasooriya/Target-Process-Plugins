define(["jQuery","tests/common/testkit","tau/components/component.menu.testPlanRun","tau/configurator"],function($,a,b,c){var d=function(){var d=new a("[component.menu.testPlanRun]",b),e={tpr1:{name:"TPR1",entityState:"tpr_open","testCaseRuns-count":0,passedCount:0,failedCount:0,notRunCount:0},tpr2:{name:"TPR2",entityState:"tpr_closed","testCaseRuns-count":123,passedCount:3,failedCount:23,notRunCount:23},tpr3:{name:"TPR3",entityState:"tpr_open","testCaseRuns-count":123,passedCount:0,failedCount:0,notRunCount:123},tpr4:{name:"TPR4",entityState:"tpr_open","testCaseRuns-count":100,passedCount:10,failedCount:10,notRunCount:80},tpr5:{name:"TPR5",entityState:"tpr_open","testCaseRuns-count":100,passedCount:100,failedCount:0,notRunCount:0},tpr6:{name:"TPR^",entityState:"tpr_open","testCaseRuns-count":100,passedCount:0,failedCount:100,notRunCount:0}},f={tpr_open:"Open",tpr_closed:{name:"Closed",isFinal:!0}},g=d.loadFixtures({testPlanRuns:e,entityStates:f});d.setData(g),d.setEntity(g.testPlanRun.tpr1),d.selectDefaultProject();var h=function(a){return{id:a.id,type:a.__type}};return d.addTest({name:"should render valid markup for open state",test:function(){var a=this.$el;equal(a.find(".tau-action").length,0," No Actions if no testcases")}}),d.addTest({name:"should render valid markup for final state",context:h(g.testPlanRun.tpr2),test:function(){var a=this.$el;equal(a.find(".tau-action").length,0,"No Actions for final state")}}),d.addTest({name:"should render valid markup for real 3",context:h(g.testPlanRun.tpr3),test:function(){var a=this.$el;equal(a.find(".tau-action").length,1,"One action for new"),equal(a.find(".tau-action").eq(0).text(),"Run","Run action")}}),d.addTest({name:"should render valid markup for real 4",context:h(g.testPlanRun.tpr4),test:function(){var a=this.$el;equal(a.find(".tau-action").length,2,"One action for new"),equal(a.find(".tau-action").eq(0).text(),"New Run","Run action"),equal(a.find(".tau-action").eq(1).text(),"Complete Last Run","Run action")}}),d.addTest({name:"should render valid markup for real 5",context:h(g.testPlanRun.tpr5),test:function(){var a=this.$el;equal(a.find(".tau-action").length,2,"One action for new"),equal(a.find(".tau-action").eq(0).text(),"New Run","Run action"),equal(a.find(".tau-action").eq(1).text(),"Change Last Run","Run action")}}),d.addTest({name:"should render valid markup for real 6",context:h(g.testPlanRun.tpr6),test:function(){var a=this.$el;equal(a.find(".tau-action").length,2,"One action for new"),equal(a.find(".tau-action").eq(0).text(),"New Run","Run action"),equal(a.find(".tau-action").eq(1).text(),"Change Last Run","Run action")}}),d.addTest({name:"should refresh on state change",context:h(g.testPlanRun.tpr6),test:function(){var a=this.$el,b=g.testPlanRun.tpr6,e=g.entityState.tpr_closed;equal(a.find(".tau-action").length,2,"One action for new"),d.getService().registerSaveCommand({config:{id:b.id,$set:{entityState:{id:e.id}},fields:["id"]},returnedData:{id:b.id,entityState:{id:e.id}}}),c.getStore().save("testplanrun",{id:b.id,$set:{entityState:{id:e.id}}}).done(),a=this.$el,equal(a.find(".tau-action").length,0,"Dynamic reload on state change")}}),d.run()};return{run:d}})