define(["jQuery","tests/common/testkit","tau/components/component.menu.testPlanRun","tau/configurator"],function($,ComponentTestKit,Component,configurator){var run=function(){var TestCase=new ComponentTestKit("[component.menu.testPlanRun]",Component),testPlanRuns={tpr1:{name:"TPR1",entityState:"tpr_open","testCaseRuns-count":0,passedCount:0,failedCount:0,notRunCount:0},tpr2:{name:"TPR2",entityState:"tpr_closed","testCaseRuns-count":123,passedCount:3,failedCount:23,notRunCount:23},tpr3:{name:"TPR3",entityState:"tpr_open","testCaseRuns-count":123,passedCount:0,failedCount:0,notRunCount:123},tpr4:{name:"TPR4",entityState:"tpr_open","testCaseRuns-count":100,passedCount:10,failedCount:10,notRunCount:80},tpr5:{name:"TPR5",entityState:"tpr_open","testCaseRuns-count":100,passedCount:100,failedCount:0,notRunCount:0},tpr6:{name:"TPR^",entityState:"tpr_open","testCaseRuns-count":100,passedCount:0,failedCount:100,notRunCount:0}},entityStates={tpr_open:"Open",tpr_closed:{name:"Closed",isFinal:!0}},data=TestCase.loadFixtures({testPlanRuns:testPlanRuns,entityStates:entityStates});TestCase.setData(data),TestCase.setEntity(data.testPlanRun.tpr1),TestCase.selectDefaultProject();var createContext=function(item){return{id:item.id,type:item.__type}};return TestCase.addTest({name:"should render valid markup for open state",test:function(){var $el=this.$el;equal($el.find(".tau-action").length,0," No Actions if no testcases")}}),TestCase.addTest({name:"should render valid markup for final state",context:createContext(data.testPlanRun.tpr2),test:function(){var $el=this.$el;equal($el.find(".tau-action").length,0,"No Actions for final state")}}),TestCase.addTest({name:"should render valid markup for real 3",context:createContext(data.testPlanRun.tpr3),test:function(){var $el=this.$el;equal($el.find(".tau-action").length,1,"One action for new"),equal($el.find(".tau-action").eq(0).text(),"Run","Run action")}}),TestCase.addTest({name:"should render valid markup for real 4",context:createContext(data.testPlanRun.tpr4),test:function(){var $el=this.$el;equal($el.find(".tau-action").length,2,"One action for new"),equal($el.find(".tau-action").eq(0).text(),"New Run","Run action"),equal($el.find(".tau-action").eq(1).text(),"Complete Last Run","Run action")}}),TestCase.addTest({name:"should render valid markup for real 5",context:createContext(data.testPlanRun.tpr5),test:function(){var $el=this.$el;equal($el.find(".tau-action").length,2,"One action for new"),equal($el.find(".tau-action").eq(0).text(),"New Run","Run action"),equal($el.find(".tau-action").eq(1).text(),"Change Last Run","Run action")}}),TestCase.addTest({name:"should render valid markup for real 6",context:createContext(data.testPlanRun.tpr6),test:function(){var $el=this.$el;equal($el.find(".tau-action").length,2,"One action for new"),equal($el.find(".tau-action").eq(0).text(),"New Run","Run action"),equal($el.find(".tau-action").eq(1).text(),"Change Last Run","Run action")}}),TestCase.addTest({name:"should refresh on state change",context:createContext(data.testPlanRun.tpr6),test:function(){var $el=this.$el,item=data.testPlanRun.tpr6,entityState=data.entityState.tpr_closed;equal($el.find(".tau-action").length,2,"One action for new"),TestCase.getService().registerSaveCommand({config:{id:item.id,$set:{entityState:{id:entityState.id}},fields:["id"]},returnedData:{id:item.id,entityState:{id:entityState.id}}}),configurator.getStore().save("testplanrun",{id:item.id,$set:{entityState:{id:entityState.id}}}).done(),$el=this.$el,equal($el.find(".tau-action").length,0,"Dynamic reload on state change")}}),TestCase.run()};return{run:run}})