define(["Underscore","jQuery","tau/configurator","tests/common/testCase","tests/common/componentConfigCreator","tau/components/component.property.isPrivate","tests/common/testData.Generator"],function(_,$,configurator,TestCase,ComponentConfigCreator,Component,TestDataGenerator){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),impedimentData=testDataGenerator.getImpediments()[1],impedimentNotPrivate=testDataGenerator.getImpediments()[0],configCreator=new ComponentConfigCreator;configCreator.setEntityIDAndType(impedimentData.id,impedimentData.__type),configCreator.setSelectedProjects([data.selectByType("project")[0]]),configCreator.setProcesses(data.selectByType("process"));var config=configCreator.getConfig();configCreator=new ComponentConfigCreator,configCreator.setEntityIDAndType(impedimentNotPrivate.id,impedimentNotPrivate.__type),configCreator.setSelectedProjects([data.selectByType("project")[0]]),configCreator.setProcesses(data.selectByType("process"));var configForNotPrivate=configCreator.getConfig(),testCase=new TestCase("[component.isPrivate]");testCase.initModule({componentConfig:configForNotPrivate,data:data},Component),testCase.test("should render valid markup for not private impediment",function(){var $el=this.element;ok($el.find(".ui-checkbox").hasClass("unchecked"),"Is not Private")});var testCase=new TestCase("[component.isPrivate]");testCase.initModule({componentConfig:config,data:data},Component),testCase.test("should render valid markup",function(){var $el=this.element;ok($el.find(".ui-checkbox").hasClass("checked"),"Is Private")});var newConfig=_.clone(config),testCase=new TestCase("[component.isPrivate]");testCase.initModule({componentConfig:newConfig,data:data},Component),testCase.test("should uncheck on click",function(){var $el=this.element;ok($el.find(".ui-checkbox").hasClass("checked"),"Is Private"),this.serviceMock.registerSaveCommand({config:{$set:{isPrivate:!1},fields:["id"],id:impedimentData.id},returnedData:{id:impedimentData.id,isPrivate:!1}}),$el.find(".ui-checkbox").click(),$el=this.element,ok(!$el.find(".ui-checkbox").hasClass("checked"),"Is not checked"),ok($el.find(".ui-checkbox").hasClass("unchecked"),"Is unchecked")}),testCase.test("should uncheck on edit",function(){var $el=this.element;ok($el.find(".ui-checkbox").hasClass("checked"),"Is Private"),this.serviceMock.registerSaveCommand({config:{$set:{isPrivate:!1},fields:["id"],id:impedimentData.id},returnedData:{id:impedimentData.id,isPrivate:!1}}),this.component.fire("edit"),$el=this.element,ok(!$el.find(".ui-checkbox").hasClass("checked"),"Is not checked"),ok($el.find(".ui-checkbox").hasClass("unchecked"),"Is unchecked")})};return{run:innerRun}})