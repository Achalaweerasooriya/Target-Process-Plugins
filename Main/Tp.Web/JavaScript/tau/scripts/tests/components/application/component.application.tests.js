define(["Underscore","jQuery","tau/core/tau","tau/configurator","tau/components/component.application","tests/components/common/common.setup","tests/components/component.specs","tests/common/applicationContext","tau/components/component.title","tau/components/component.description"],function(_,$,tau,configurator,component,commonSetup,componentSpecs,AppContext,title,description){var innerRun=function(){var config={manualContext:!0,context:{configurator:configurator,entityType:{name:"UserStory"},id:15}},appContext=new AppContext(config.context),data=null;configurator.getRouting().window=window,configurator.getRouting().options.encodeBy=function(s){return s},configurator.getRouting().options.decodeBy=function(s){return s};var setup=commonSetup.create("[component.application]",[appContext],component,{executeOnStart:!1,options:{routing:{silent:!0}}}),viewTests=[{name:"Should create viewport",test:function(){equals(this.$el.length,1,"create viewport"),equals(this.$el.hasClass("ui-application-viewport"),!0,"create viewport")}},{name:"Should process routes",test:function(){configurator.getRouting().reset(),this.component.fire("registerRoute",{pattern:"preved/{name}",callback:function(req){data=req.name}}),this.component.fire("registerRouteNotFound",{callback:function(req){data=404}}),$(window).triggerHandler($.Event("hashchange",{hash:"preved/medved"})),$(window).triggerHandler($.Event("hashchange",{hash:"prevved"}))}}];componentSpecs.create(setup,config).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests(viewTests).done()};return{run:innerRun}})