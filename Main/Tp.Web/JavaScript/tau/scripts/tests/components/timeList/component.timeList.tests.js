define(["tau/core/tau","tau/utils/utils.date","tau/components/component.timeList","tests/common/testData","tests/components/common/common.setup","tests/components/component.specs"],function(tau,utilsDate,timeListComponent,testData,commonSetup,componentSpecs){var innerRun=function(){function getTimeFieldsConfig(){return Like.is({times:["id","date","spent","remain","description",Like.is({assignable:["id"]}),Like.is({user:["id","firstName","lastName"]})],list:!0})}function getTaskFields(){return Similar.to({tasks:Similar.to(["id","name",getTimeFieldsConfig()])})}function checkTime($el,timeData){var __type=timeData.workOn.__type,$workOn=$el.find(".work-on"),$entityIcon=$workOn.find("em");equal($el.find(".date").text(),timeData.date,"Date is valid"),equal($el.find(".spent").text(),timeData.spent+" h","Spent is valid"),equal($el.find(".remain").text(),timeData.remain+" h","Remain is valid"),equal($el.find(".description").text(),timeData.description,"Description is valid"),equal($workOn.find("span").text(),timeData.workOn.name,"Work on is valid");var $editAnchor=$el.find(".edit-time a");equal($editAnchor.parent().text(),"Edit","Edit action text is valid"),equal($editAnchor.attr("href"),"/TP/Project/Tracking/time/Edit.aspx?timeID="+timeData.id,"Edit action text is valid"),ok($entityIcon.is(".ui-type-icon.ui-type-icon-"+__type.toLowerCase()),"Work on entity icon has valid class"),equal($entityIcon.text(),timeData.term,"Work on entity icon has valid text"),equal($el.find(".person").text(),timeData.person,"Person on is valid")}var testDataForTimeList=testData.getTestDataForTimeList(),expectedCmdArray=[Similar.to({name:"get",type:"userStory",config:Like.is({id:28,fields:["id","name",getTimeFieldsConfig()]})}),Similar.to({name:"get",type:"userStory",config:Like.is({id:28,fields:["id",getTaskFields()],list:!0,nested:!0})})],context={context:{type:"story",id:28}},times=testDataForTimeList[0].times,tasks=testDataForTimeList[0].tasks,expectedTimes={items:[{id:367,date:utilsDate.format.date.short(utilsDate.convertToTimezone(times[2].date)),spent:34,remain:10,description:"43245",person:"Administrator Administrator",workOn:{__type:"userStory",name:"Build planets"},editUrl:"/TP/Project/Tracking/time/Edit.aspx?timeID=367"},{id:366,date:utilsDate.format.date.short(utilsDate.convertToTimezone(tasks[0].times[0].date)),spent:5,remain:0,description:"sad",person:"Administrator Administrator",workOn:{__type:"task",name:"Specification"},editUrl:"/TP/Project/Tracking/time/Edit.aspx?timeID=366"},{id:365,date:utilsDate.format.date.short(utilsDate.convertToTimezone(times[1].date)),spent:5,remain:0,description:"weqrer",person:"Administrator Administrator",workOn:{__type:"userStory",name:"Build planets"},editUrl:"/TP/Project/Tracking/time/Edit.aspx?timeID=365"},{id:364,date:utilsDate.format.date.short(utilsDate.convertToTimezone(times[0].date)),spent:4,remain:0,description:"3324",person:"Administrator Administrator",workOn:{__type:"userStory",name:"Build planets"},editUrl:"/TP/Project/Tracking/time/Edit.aspx?timeID=364"},{id:69,date:utilsDate.format.date.short(utilsDate.convertToTimezone(tasks[1].times[0].date)),spent:4,remain:0,description:"Do",person:"Tanya White",workOn:{__type:"task",name:"Testing"},editUrl:"/TP/Project/Tracking/time/Edit.aspx?timeID=69"}]},viewTests=[{name:"should render valid markup",test:function(){var $el=this.$el,items=this.data.items,$times=$el.find("table.time-list * > tr"),timesCount=$times.length;equals($times.length,items.length+1,"Count of times is valid");for(var i=1;i<timesCount;i++){var item=items[i-1];item.term=this.termProcessor.getTerms(item.workOn.__type).iconBig,checkTime($times.eq(i),items[i-1])}}}],setup=commonSetup.create("[component.timeList]",testDataForTimeList,timeListComponent);componentSpecs.create(setup,context).viewShouldFollowDataComponentLifeCycle().modelShouldReturnData(expectedTimes,[expectedCmdArray]).viewShouldPassTests(viewTests).viewShouldContainEmptyMessage("No time records found").done()};return{run:innerRun}})