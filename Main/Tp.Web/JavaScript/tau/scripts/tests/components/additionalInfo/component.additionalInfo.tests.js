define(["tau/components/component.additionalInfo","tests/components/component1","tests/common/extensions/test.extension.editablePermission.emiter","tests/components/common/common.setup","tests/components/component.specs","tests/common/applicationContext"],function(additionalInfoComponent,TestComponent,EditablePermissionsEmiter,commonSetup,componentSpecs,applicationContext){var innerRun=function(){var config={children:[{path:"tests/components/component1",text:"Label1"},{path:"tests/components/component1",text:"Value1",extensions:[EditablePermissionsEmiter]},{path:"tests/components/component1",text:"Label2"},{path:"tests/components/component1",text:"Value2"},{label:{path:"tests/components/component1",text:"Label3"},field:{path:"tests/components/component1",text:"Value3",extensions:[EditablePermissionsEmiter]}}]},setup=commonSetup.create("[component.additionalInfo]",null,additionalInfoComponent,config),context={context:{manualContext:!0},manualContext:!0},viewTests=[{name:"should render valid markup",test:function(){var $el=this.$el,$rows=$el.find("tr");equal($rows.size(),3,"Rows count"),equal($rows.eq(0).hasClass("ui-additionalinfo_editable_true"),!0,"Value1 is editable"),equal($rows.eq(1).hasClass("ui-additionalinfo_editable_true"),!1,"Value2 is not editable"),equal($rows.eq(2).hasClass("ui-additionalinfo_editable_true"),!0,"Value3 is editable"),ok($rows.eq(0).find("td").eq(0).hasClass("ui-additionalinfo__label"),"First column has label class"),ok($rows.eq(0).find("td").eq(1).hasClass("ui-additionalinfo__value"),"Second column has value class"),equal($rows.eq(0).find("td").eq(0).text(),"Label1"),equal($rows.eq(1).find("td").eq(0).text(),"Label2"),equal($rows.eq(2).find("td").eq(0).text(),"Label3"),equal($rows.eq(0).find("td").eq(1).text(),"Value1"),equal($rows.eq(1).find("td").eq(1).text(),"Value2"),equal($rows.eq(2).find("td").eq(1).text(),"Value3")}},{name:"should fire edit event to component when user click on row",setup:function(){var self=this;this.component.on("afterRender",function(evtArgs){self.$el=evtArgs.data.element}),this.component.on("dataBind",function(evtArgs){self.data=evtArgs.data}),this.component.on("componentsCreated",function(evtArgs){self.components=evtArgs.data})},test:function(){var $el=this.$el,editEventFireCount={0:0,1:0,2:0},onEditHandler=function(){editEventFireCount[this.index]++};this.components[1].component.on("edit",onEditHandler,{index:0}),this.components[3].component.on("edit",onEditHandler,{index:1}),this.components[5].component.on("edit",onEditHandler,{index:2}),$el.find("tr").eq(0).click(),same(editEventFireCount,{0:1,1:0,2:0},"Edit event was fired to component"),$el.find("tr").eq(1).click(),same(editEventFireCount,{0:1,1:0,2:0},"Edit event was fired to component"),$el.find("tr").eq(2).click(),same(editEventFireCount,{0:1,1:0,2:1},"Edit event was fired to component")}}];componentSpecs.create(setup,context).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests(viewTests).done()};return{run:innerRun}})