define(["Underscore","jQuery","tau/configurator","tau/components/component.assignmentsList","tests/common/testCase","tests/common/componentConfigCreator","tests/common/testData.Generator"],function(_,$,a,b,c,d,e){var f=function(){var f=new e;f.clear(),f.initDefaultData();var g=f.getUserStories(),h=f.getData(),i=f.getRoles(),j=f.getEntityStates(),k=g[3],l=k.id,m=new d;m.setEntityIDAndType(l,k.__type),m.setSelectedProjects([h.selectByType("project")[0]]),m.setProcesses(h.selectByType("process"));var n=m.getConfig(),o=new c("[component.assignmentsList]");n.editable=!0,o.initModule({componentConfig:n,data:h},b,function(){a.enableRules()}),o.test("should refresh when state of entity changed",function(){var b=this.element,c=!1;this.component.on("refresh",function(){c=!0},this);var d=a.getStore(),e=i[1].id,f=g[0].assignments[0].id,h=j[1];this.serviceMock.registerSaveCommand({config:{id:l,$set:{entityState:{id:h.id}},fields:["id","endDate",{roleEfforts:["id","effort","effortToDo"],list:!0},"tasks-effortToDo-sum",{feature:["id","effortToDo","effortCompleted","userStories-count"]},{iteration:["id","userStories-effortToDo-sum","userStories-effortCompleted-sum"]},{release:["id","bugs-effortToDo-sum","bugs-effortCompleted-sum","userStories-effortToDo-sum","userStories-effortCompleted-sum",{features:["id","effortToDo","effortCompleted","userStories-count"],list:!0}]}]},returnedData:{id:l,entityState:{id:h.id}}}),d.save(k.__type,{id:l,$set:{entityState:{id:h.id}}}).done(),this.component.removeAllListeners(this),equal(c,!0,"Refresh is fired")}),o.test("should refresh when dependent data is changed [effort|effortToDo|effortCompleted|tasks-count|tasks-effort-sum|tasks-effortToDo-sum]",function(){var b=this.element,c=this,d=0,e=0;this.component.on("refresh",function(){++d},this);var f=function(b,f){var g={id:l};g[b]=f,c.serviceMock.registerRefreshCommand({config:{id:l,fields:["id",b]},returnedData:g}),a.getStore().refresh(k.__type,{id:l,fields:[b]}).done(),equals(d,++e,"Refresh is fired once only")};f("effort",100),f("effortToDo",100),f("effortCompleted",100),f("tasks-count",100),f("tasks-effort-sum",100),f("tasks-effortToDo-sum",100),this.component.removeAllListeners(this),this.serviceMock.verify(!0)})};return{run:f}})