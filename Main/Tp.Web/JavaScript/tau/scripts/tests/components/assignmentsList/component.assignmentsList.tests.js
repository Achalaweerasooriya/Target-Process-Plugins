define(["Underscore","jQuery","tau/core/class","tau/core/tau","tau/components/component.assignmentsList","tests/common/testData","tests/common/testData.Generator","tests/common/service.mock","tau/configurator","tests/components/common/common.setup","tests/components/component.specs"],function(a,b,c,d,e,f,g,h,i,j,k){function w(a,c){var d=a.find(".user"),e=c.users,f=a.find(".add-btn");c.allowAdd?ok(!f.hasClass("disabled"),c.role.name+" add btn is enabled"):ok(f.hasClass("disabled"),c.role.name+" add btn is disabled"),equal(d.length,e.length,"Count of users is valid"),d.each(function(a){u(b(this),e[a])})}function v(a){return[a.effort,"h",a.remain,"h"].join("")}function u(a,b){b=b||{},equal(a.find(".user-avatar-container .user-avatar").attr("src"),s(b.avatar),"User avatar is valid"),equal(a.find(".user-info .user-name").text(),b.name,"User name is valid")}function s(a){if(b.browser.msie){var c=document.location;if(b.browser.version==="7.0"){if(c.protocol=="file:"){var d=c.pathname.split("/");return"file:///"+d[1]+a}return a}}return a}function l(a){return a.replace(/\s/gi,"")}var m=new g;m.initDefaultData();var n=m.getUserStories(),o=m.getData(),p=n[3],q=p.id,r={context:{type:"story",id:q}},t={effortPoints:"h",owner:{id:255,name:"Tod Black",avatar:"/TP/Avatar.ashx?UserId=255&size=32"},assignments:{groups:[{roleEffort:{effort:"20",remain:b.browser.msie?"15.56":"15.55",id:350},role:{id:1,name:"Developer",isPair:!0,__type:"role"},users:[{id:254,name:"John Brown",avatar:"/TP/Avatar.ashx?UserId=254&size=32",assignmentId:250,roleId:1},{id:257,name:"Sandra Red",avatar:"/TP/Avatar.ashx?UserId=257&size=32",assignmentId:252,roleId:1}],allowAdd:!1},{roleEffort:{effort:"15",remain:"8",id:351},role:{id:4,name:"QA Engineer",isPair:!1,__type:"role"},users:[{id:256,name:"Andrew Gray",avatar:"/TP/Avatar.ashx?UserId=256&size=32",assignmentId:251,roleId:4}],allowAdd:!1}]},totalEffort:{effort:"25.11",remain:"98.51"},tasksEffort:{effort:"18.21",remain:"12.21"}},x=function(c,d){var e=function(){d=d||t;var a=this.$el,c=a.find(".user-list"),e=c.find('.role-title:contains("Developer")'),f=c.find('.role-title:contains("QA")'),g=d.assignments.groups[0],h=d.assignments.groups[1],i=c.children(".group");i.each(function(a){w(b(this),d.assignments.groups[a])}),ok(e.length==1,"Developer role"),ok(f.length==1,"QA Engineer role"),equal(l(a.find(".user-list .group").eq(0).find(".role-effort").text()),l(v(g.roleEffort)),"Developers efforts (effort, remain)"),equal(l(a.find(".user-list .group").eq(1).find(".role-effort").text()),l(v(h.roleEffort)),"QS efforts (effort, remain)"),equal(l(a.find(".total-row .effort-cell").text()),v(d.totalEffort),"Total done,effort"),equal(l(a.find(".tasks-row .effort-cell").text()),v(d.tasksEffort),"Tasks done,effort"),equal(a.find(".owner-cell .user-avatar").attr("src"),s(d.owner.avatar),"Owner Avatar"),equal(a.find(".owner-cell .user-name").text(),d.owner.name,"Owner name")},f=[],g={name:c||"should render valid markup",preSetup:function(){var a=this.service=new h;i.setService(a)},test:function(){var b=this;a.each(f,function(a){a.call(b)})},addTest:function(a){f.push(a);return this}};g.addTest(e);return g},y=function(){var a=[x()],b=j.create("[component.assignmentsList]",o,e);k.create(b,r).viewShouldFollowDataComponentLifeCycle().viewShouldPassTests(a).done()};return{run:y,generateBaseViewTest:x}})