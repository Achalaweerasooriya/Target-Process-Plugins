define(["Underscore","jQuery","tau/configurator","tau/components/component.assignmentsList","tau/components/component.userList","tests/common/testData.Generator","tests/components/common/common.setup","tests/components/component.specs","tests/components/assignmentsList/component.assignmentsList.tests"],function(a,b,c,d,e,f,g,h,i){var j=function(){var c=new f;c.clear(),c.initDefaultData();var e=c.getData(),j=function(){var b=a.select(e,function(a){return a.__type==="userStory"});return b[3]},k=j(),l=k.id,m={context:{type:"story",id:l}},n=[i.generateBaseViewTest("should change assignment").addTest(function(){var a=this.$el,b=a.find(".user-name:eq(0)");b.click();var d=a.find(".user").eq(0).tauBubble("widget").find(".filtered-user-list");equal(d.size(),1,"Count of popup"),equal(d.find(".role-title").size(),1,"Count of visible roles"),equal(d.find(".role-title").text(),"Developer","Only developer is visible");var e=d.find(".user");equal(e.size(),2,"Count of user"),equal(e.eq(0).find(".user-name").text(),"Administrator Administrator","First Developer"),equal(e.eq(1).find(".user-name").text(),"Sam Yellow","First Developer");var f=c.getUsers()[6];this.service.registerSaveCommand({config:{$set:{generalUser:{id:f.id}},fields:["id",{generalUser:["id","firstName","lastName"]},{role:["id","name"]},{assignable:["id"]}],id:k.assignments[0].id},returnedData:{id:k.assignments[0].id,generalUser:f}}),e.eq(1).click(),equal(this.$el.find(".filtered-user-list").size(),0,"Popup was removed"),equal(this.$el.find(".user-name").eq(0).text(),"Sam Yellow","User was updated")}),i.generateBaseViewTest("should unassign user").addTest(function(){var a=this.$el;this.service.registerRemoveCommand({config:{id:k.assignments[0].id,fields:["id"]},returneddata:{id:k.assignments[0].id,iserror:!1}}),a.find(".user-name").eq(0).click(),a.find(".header-box .unassign-button").click();var b=a.find(".user").eq(0).tauBubble("widget");b.find(".unassign-button").click(),equal(this.$el.find(".filtered-user-list").size(),0,"Popup is removed"),equal(this.$el.find(".user-name").eq(0).text(),"Sandra Red","User is removed"),equal(this.$el.find(".user-name").size(),2,"count of user"),ok(this.$el.find(".group[roleid=1] .role-header .role-title .add-btn").size()==1,"Add assign button is shown")}),i.generateBaseViewTest("should change assign to logged user").addTest(function(){var a=this.$el,b=this.config.context.getLoggedUser();this.service.registerSaveCommand({config:{$set:{generalUser:{id:b.id}},fields:["id",{generalUser:["id","firstName","lastName"]},{role:["id","name"]},{assignable:["id"]}],id:k.assignments[0].id},returnedData:{id:k.assignments[0].id,generalUser:b}}),a.find(".user-name").eq(0).click();var c=a.find(".user").eq(0).tauBubble("widget");c.find(".assign-to-me-button").click(),equal(this.$el.find(".filtered-user-list").size(),0,"Popup was removed"),equal(this.$el.find(".user-name").eq(0).text(),b.firstName+" "+b.lastName,"User name is valid")}),i.generateBaseViewTest("should change developer role effort").addTest(function(){var b=this.testData,c=a.find(b,function(a){return a.id===l});this.service.registerSaveCommand({config:{$set:{effort:99},fields:["id","effortToDo"],id:c.roleEfforts[0].id},returnedData:{id:c.roleEfforts[0].id,effortToDo:55}});var d=this.$el,e=d.find(".role-effort .effort").eq(0);e.click(),e.text(99),e.blur(),equal(this.$el.find(".role-effort .effort").eq(0).text(),"99h","Effort is updated"),equal(this.$el.find(".role-effort .remain").eq(0).text(),"55h","Remain is updated"),this.service.verify()}),i.generateBaseViewTest("should filter by user name and role name").addTest(function(){var a=this.$el;a.find(".user-name").eq(0).click();var b=a.find(".user").eq(0).tauBubble("widget"),c=b.find(".user-search-box");c.val("and"),c.simulate("keyup",{charCode:97});var d=b.find(".filtered-user-list .role-title");equal(d.size(),1,"Count of roles"),equal(d.eq(0).text().trim(),"Top Manager","Top Manager");var e=b.find(".filtered-user-list .user-name");equal(e.size(),1,"Count of users"),equal(e.eq(0).text().trim(),"Andrew Gray","Andrew Gray"),c.val("Devel"),c.simulate("keyup",{charCode:97});var d=b.find(".filtered-user-list .role-title");equal(d.size(),1,"Count of roles"),equal(d.eq(0).text().trim(),"Developer","Developer");var e=b.find(".filtered-user-list .user-name");equal(e.size(),2,"Count of users"),equal(e.eq(0).text().trim(),"Administrator Administrator","Administrator Administrator"),equal(e.eq(1).text().trim(),"Sam Yellow","Sam Yellow")}),i.generateBaseViewTest("should all on show more click").addTest(function(){var a=this.$el;a.find(".user-name").eq(0).click();var b=a.find(".user").eq(0).tauBubble("widget"),c=b.find(".filtered-user-list .more-link");equal(c.size(),1,"More button count"),c.click();var d=b.find(".filtered-user-list .role-title");equal(d.size(),4,"Roles count")})],o=g.create("[component.assignmentsList editable]",e,d);h.create(o,m).viewShouldPassTests(n).done();var p={effortPoints:"h",owner:{id:255,name:"Tod Black",avatar:"/TP/Avatar.ashx?UserId=255&size=32"},assignments:{groups:[{roleEffort:{effort:"20",remain:b.browser.msie?"15.56":"15.55"},role:{id:1,name:"Developer",isPair:!0,__type:"role"},users:[{id:254,name:"John Brown",avatar:"/TP/Avatar.ashx?UserId=254&size=32",assignmentId:250,roleId:1}],allowAdd:!0},{roleEffort:{effort:"15",remain:"8"},role:{id:4,name:"QA Engineer",isPair:!1,__type:"role"},users:[{id:256,name:"Andrew Gray",avatar:"/TP/Avatar.ashx?UserId=256&size=32",assignmentId:251,roleId:4}],allowAdd:!1}]},totalEffort:{effort:"25.11",remain:"98.51"},tasksEffort:{effort:"18.21",remain:"12.21"}};c.clear(),c.initDefaultData();var e=c.getData(),q={};a.each(e,function(a){a.id===l&&(a.assignments.splice(2,1),q=a)});var o=g.create("[component.assignmentsList editable]",e,d);h.create(o,m).viewShouldPassTests([i.generateBaseViewTest("should assign to me",p).addTest(function(){var a=this.$el,b=this.config.context.getLoggedUser(),d=c.getRoles()[0];this.service.registerSaveCommand({config:{$set:{generalUser:{id:b.id},assignable:{id:q.id},role:{id:d.id}},fields:["id",{generalUser:["id","firstName","lastName"]},{role:["id","name"]},{assignable:["id"]}]},returnedData:{id:256,generalUser:b,role:d,assignable:{id:l}}});var e=a.find(".add-btn:eq(0)");e.click();var f=e.tauBubble("widget"),g=f.find(".filtered-user-list .assign-to-me-button");equal(f.size(),1,"Count of popup"),equal(f.find(".role-title").size(),1,"Count of visible roles"),equal(f.find(".role-title").text(),"Developer","Only developer is visible"),g.simulate("click"),ok(this.$el.find(".add-btn").eq(0).hasClass("disabled"),"Add button is disabled"),equal(this.$el.find(".user").eq(1).text().trim(),b.firstName+" "+b.lastName,"User is shown")})]).done(),c.clear(),c.initDefaultData();var e=c.getData(),r={manualContext:!0,a:"a"},s={loggedUser:{id:985,firstName:"User",lastName:"not in team"}},o=g.create("[component.assignmentsList editable]",e,d,r,s);h.create(o,m).viewShouldPassTests([i.generateBaseViewTest("should not show assign to me button if user is not in team").addTest(function(){var a=this.$el,b=a.find(".user").eq(0);b.click();var c=b.tauBubble("widget").find(".filtered-user-list"),d=c.find(".assign-to-me-button");ok(c.size()==1,"User list is shown"),ok(d.size()==0,"Assign to is hidden")})]).done()};return{run:j}})