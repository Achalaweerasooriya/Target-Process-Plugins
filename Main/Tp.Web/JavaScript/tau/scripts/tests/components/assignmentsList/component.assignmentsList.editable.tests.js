define(["Underscore","jQuery","tau/configurator","tau/components/component.assignmentsList","tau/components/component.userList","tests/common/testData.Generator","tests/components/common/common.setup","tests/components/component.specs","tests/components/assignmentsList/component.assignmentsList.tests"],function(_,$,configurator,assignemntsListComponent,userListComponent,testDataGenerator,commonSetup,componentSpecs,assignmentListTests){var innerRun=function(){var generator=new testDataGenerator;generator.clear(),generator.initDefaultData();var data=generator.getData(),findUserStory=function(){var storyList=_.select(data,function(entity){return entity.__type==="userStory"});return storyList[3]},entity=findUserStory(),entityId=entity.id,context={context:{type:"story",id:entityId}},viewTests=[assignmentListTests.generateBaseViewTest("should change assignment").addTest(function(){var $el=this.$el,$user=$el.find(".user-name:eq(0)");$user.click();var $popup=$el.find(".user").eq(0).tauBubble("widget").find(".filtered-user-list");equal($popup.size(),1,"Count of popup"),equal($popup.find(".role-title").size(),1,"Count of visible roles"),equal($popup.find(".role-title").text(),"Developer","Only developer is visible");var $users=$popup.find(".user");equal($users.size(),2,"Count of user"),equal($users.eq(0).find(".user-name").text(),"Administrator Administrator","First Developer"),equal($users.eq(1).find(".user-name").text(),"Sam Yellow","First Developer");var user=generator.getUsers()[6];this.service.registerSaveCommand({config:{$set:{generalUser:{id:user.id}},fields:["id",{generalUser:["id","firstName","lastName"]},{role:["id","name"]},{assignable:["id"]}],id:entity.assignments[0].id},returnedData:{id:entity.assignments[0].id,generalUser:user}}),$users.eq(1).click(),equal(this.$el.find(".filtered-user-list").size(),0,"Popup was removed"),equal(this.$el.find(".user-name").eq(0).text(),"Sam Yellow","User was updated")}),assignmentListTests.generateBaseViewTest("should unassign user").addTest(function(){var $el=this.$el;this.service.registerRemoveCommand({config:{id:entity.assignments[0].id,fields:["id"]},returneddata:{id:entity.assignments[0].id,iserror:!1}}),$el.find(".user-name").eq(0).click(),$el.find(".header-box .unassign-button").click();var $popup=$el.find(".user").eq(0).tauBubble("widget");$popup.find(".unassign-button").click(),equal(this.$el.find(".filtered-user-list").size(),0,"Popup is removed"),equal(this.$el.find(".user-name").eq(0).text(),"Sandra Red","User is removed"),equal(this.$el.find(".user-name").size(),2,"count of user"),ok(this.$el.find(".group[roleid=1] .role-header .role-title .add-btn").size()==1,"Add assign button is shown")}),assignmentListTests.generateBaseViewTest("should change assign to logged user").addTest(function(){var $el=this.$el,user=this.config.context.getLoggedUser();this.service.registerSaveCommand({config:{$set:{generalUser:{id:user.id}},fields:["id",{generalUser:["id","firstName","lastName"]},{role:["id","name"]},{assignable:["id"]}],id:entity.assignments[0].id},returnedData:{id:entity.assignments[0].id,generalUser:user}}),$el.find(".user-name").eq(0).click();var $popup=$el.find(".user").eq(0).tauBubble("widget");$popup.find(".assign-to-me-button").click(),equal(this.$el.find(".filtered-user-list").size(),0,"Popup was removed"),equal(this.$el.find(".user-name").eq(0).text(),user.firstName+" "+user.lastName,"User name is valid")}),assignmentListTests.generateBaseViewTest("should change developer role effort").addTest(function(){var data=this.testData,entity=_.find(data,function(entity){return entity.id===entityId});this.service.registerSaveCommand({config:{$set:{effort:99},fields:["id","effortToDo"],id:entity.roleEfforts[0].id},returnedData:{id:entity.roleEfforts[0].id,effortToDo:55}});var $el=this.$el,$developerRoleEffort=$el.find(".role-effort .effort").eq(0);$developerRoleEffort.click(),$developerRoleEffort.text(99),$developerRoleEffort.blur(),equal(this.$el.find(".role-effort .effort").eq(0).text(),"99h","Effort is updated"),equal(this.$el.find(".role-effort .remain").eq(0).text(),"55h","Remain is updated"),this.service.verify()}),assignmentListTests.generateBaseViewTest("should filter by user name, but no role name").addTest(function(){var $el=this.$el;$el.find(".user-name").eq(0).click();var $popup=$el.find(".user").eq(0).tauBubble("widget"),$search=$popup.find(".user-search-box");$search.val("and"),$search.simulate("keyup",{charCode:97});var $roles=$popup.find(".filtered-user-list .role-title");equal($roles.size(),1,"Count of roles"),equal(_.trim($roles.eq(0).text()),"Top Manager","Top Manager");var $users=$popup.find(".filtered-user-list .user-name");equal($users.size(),1,"Count of users"),equal(_.trim($users.eq(0).text()),"Andrew Gray","Andrew Gray"),$search.val("Devel"),$search.simulate("keyup",{charCode:97});var $roles=$popup.find(".filtered-user-list .role-title");equal($roles.size(),0,"Count of roles")}),assignmentListTests.generateBaseViewTest("should all on show more click").addTest(function(){var $el=this.$el;$el.find(".user-name").eq(0).click();var $popup=$el.find(".user").eq(0).tauBubble("widget"),$moreLink=$popup.find(".filtered-user-list .more-link");equal($moreLink.size(),1,"More button count"),$moreLink.click();var $roles=$popup.find(".filtered-user-list .role-title");equal($roles.size(),4,"Roles count")})],setup=commonSetup.create("[component.assignmentsList editable]",data,assignemntsListComponent);componentSpecs.create(setup,context).viewShouldPassTests(viewTests).done();var expectedData={effortPoints:"h",owner:{id:255,name:"Tod Black",avatar:"/TP/Avatar.ashx?UserId=255&size=32"},assignments:{groups:[{roleEffort:{effort:"20",remain:$.browser.msie?"15.56":"15.55"},role:{id:1,name:"Developer",isPair:!0,__type:"role"},users:[{id:254,name:"John Brown",avatar:"/TP/Avatar.ashx?UserId=254&size=32",assignmentId:250,roleId:1}],allowAdd:!0},{roleEffort:{effort:"15",remain:"8"},role:{id:4,name:"QA Engineer",isPair:!1,__type:"role"},users:[{id:256,name:"Andrew Gray",avatar:"/TP/Avatar.ashx?UserId=256&size=32",assignmentId:251,roleId:4}],allowAdd:!0}]},totalEffort:{effort:"25.11",remain:"98.51"},tasksEffort:{effort:"18.21",remain:"12.21"}};generator.clear(),generator.initDefaultData();var data=generator.getData(),assignable={};_.each(data,function(entity){entity.id===entityId&&(entity.assignments.splice(2,1),assignable=entity)});var setup=commonSetup.create("[component.assignmentsList editable]",data,assignemntsListComponent);componentSpecs.create(setup,context).viewShouldPassTests([assignmentListTests.generateBaseViewTest("should assign to me",expectedData).addTest(function(){var $el=this.$el,user=this.config.context.getLoggedUser(),role=generator.getRoles()[0];this.service.registerSaveCommand({config:{$set:{generalUser:{id:user.id},assignable:{id:assignable.id},role:{id:role.id}},fields:["id",{generalUser:["id","firstName","lastName"]},{role:["id","name"]},{assignable:["id"]}]},returnedData:{id:256,generalUser:user,role:role,assignable:{id:entityId}}});var $addBtnLink=$el.find(".add-btn:eq(0)");$addBtnLink.click();var $popup=$addBtnLink.tauBubble("widget"),$assignToMeBtn=$popup.find(".filtered-user-list .assign-to-me-button");equal($popup.size(),1,"Count of popup"),equal($popup.find(".role-title").size(),1,"Count of visible roles"),equal($popup.find(".role-title").text(),"Developer","Only developer is visible"),$assignToMeBtn.simulate("click"),ok(!this.$el.find(".add-btn").eq(0).hasClass("disabled"),"Add button is enabled"),equal(_.trim(this.$el.find(".user").eq(1).text()),user.firstName+" "+user.lastName,"User is shown")})]).done(),generator.clear(),generator.initDefaultData();var data=generator.getData(),assignToMeNotVisibleContext={manualContext:!0,a:"a"},customConfig={loggedUser:{id:985,firstName:"User",lastName:"not in team"}},setup=commonSetup.create("[component.assignmentsList editable]",data,assignemntsListComponent,assignToMeNotVisibleContext,customConfig);componentSpecs.create(setup,context).viewShouldPassTests([assignmentListTests.generateBaseViewTest("should not show assign to me button if user is not in team").addTest(function(){var $el=this.$el,$userLink=$el.find(".user").eq(0);$userLink.click();var $filteredUserList=$userLink.tauBubble("widget").find(".filtered-user-list"),$assignToMeBtn=$filteredUserList.find(".assign-to-me-button");ok($filteredUserList.size()==1,"User list is shown"),ok($assignToMeBtn.size()==0,"Assign to is hidden")})]).done()};return{run:innerRun}})