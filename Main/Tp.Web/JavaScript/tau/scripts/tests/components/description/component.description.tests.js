define(["Underscore","jQuery","tau/core/class","tau/components/component.description","tests/common/testData","tests/components/common/common.setup","tests/components/component.specs"],function(_,$,a,b,c,d,e){function f(b,c,f){function l(a){return function(b){b.mockRepository(this);var c=a.length;for(var d=0;d<c;d++){var e=a[d],f=e.command,g=e.setup||function(){},h=e.stub||function(){};h._test=this,g.call(this,f,e)}}}function m(b){return{command:b,setup:function(b){var c=[Like.is({eventName:"beforeSave",type:i.context.type,listener:TypeOf.isA(a)}),Like.is({eventName:"afterSave",type:i.context.type,listener:TypeOf.isA(a)})];for(var d=0;d<c.length;d++)this.repositoryMock.expects().on(c[d],TypeOf.isA(Function)).andStub(this.repository.on.tauCreateDelegate(this.repository));this.repositoryMock.expects().execute(b).andStub(this.repository.execute.tauCreateDelegate(this.repository))}}}function n(a,b){return{command:a,setup:function(a,b){this.repositoryMock.expects().execute(a).andStub(this.repository.execute.tauCreateDelegate(this.repository)),this.serviceMock.expects().save(TypeOf.isA(Object)).andStub(b.stub)},stub:function(a){var c=b||arguments.callee._test.executeStub;c.call(arguments.callee._test,a)}}}function o(a){var d={};return d[b]=a,n([Similar.to({name:"save",type:"bug",config:Similar.to({id:c.id,$set:Like.is(d)})})],function(c){var d={id:c.config.id};d[b]=a,c.callbacks.success(d)})}function p(a){var b=this.$el;a=a||b.find(".ui-description__inner"),a.dblclick()}c=_.clone(c);var g=c[b];c[b]=g+'<img src="~/uploads/porn.jpg">';var h=g+'<img src="/TP/uploads/porn.jpg">',i={context:{type:"bug",id:c.id}},j={html:h},k=[Similar.to({name:"get",type:"bug",config:Similar.to({id:c.id,fields:["id",b]})})],q=[{name:"should render valid markup",test:function(){var a=this.$el;equals($.trim(a.find(".ui-description__inner").html()).toLowerCase(),j.html.toLowerCase(),"Description text is valid")}},{name:"should render valid markup with img tags",test:function(){var a=this.$el;equals(a.find(".ui-description__inner img:first").attr("src"),this.rootAppPath+"/uploads/porn.jpg","Description image src is valid")}},{name:"should have rich editor",test:function(){var a=this.$el;p.call(this);var b=a.find(".ui-description__inner"),c=a.find("textarea");equals(c.length,1,"Give possibility to edit"),equals(c.val().trim().toLowerCase(),j.html.toLowerCase(),"Set text in editor")}},{name:"should save edited data",preSetup:l([m(k),o('Atis atis animatis atis atis amatis<img src="~/uploads/porn.jpg">edited'),m(k)]),test:function(){var a=this.$el;p.call(this);var b=a.find("textarea");b.val(b.val().trim()+"edited"),a.find(".ui-richeditor__controls__save").click();var c=a.find(".ui-description__inner");equals(c.html().trim().toLowerCase(),j.html.toLowerCase()+"edited","Edited text is saved")}},{name:"should correct save empty",preSetup:l([m(k),o(""),m(k)]),test:function(){var a=this.$el;p.call(this);var b=a.find("textarea");b.val(""),a.find(".ui-richeditor__controls__save").click(),equals(this.$el.find(".ui-description__inner").text(),"Double-click to add description...","Show placeholder text"),ok(this.$el.find(".ui-description__inner").hasClass("ui-description__inner_empty_true"),"Has class of empty field"),p.call(this),ok(this.$el.find(".ui-description__inner").hasClass("ui-description__inner_empty_true")==0,"Has no class of empty field"),b=this.$el.find("textarea"),equals(b.val(),"","Empty value")}},{name:"should not init on link click",preSetup:l([m(k),o('<span>bzz</span><a href="http://google.com">google</a>'),m(k)]),test:function(){var a=this.$el;p.call(this);var b=a.find("textarea");b.val('<span>bzz</span><a href="http://google.com">google</a>'),a.find(".ui-richeditor__controls__save").click();var c=!1;this.$el.find(".ui-description__inner a").click(function(a){a.preventDefault(),c=!0}),p.call(this,this.$el.find(".ui-description__inner a")),this.$el.find(".ui-description__inner a").click(),equals(c,!0,"Can click on link"),equals(b.parent().css("display"),"none","Editor is hidden")}},{name:"should apply auto-replace pattern (id:XXX -> #XXX Entity name)",preSetup:l([m(k),o("The same bug as id:123 bug some-id:text"),m(k),{command:[Similar.to({name:"get",type:"general",config:Similar.to({id:"123",fields:["id","name",Similar.to({entityType:["id","name"]})]})})],setup:function(a){var b=function(a){var b=a[0];b.callbacks.success({data:{id:b.config.id,name:"General "+b.config.id,entityType:{id:1,name:"task"}}})};this.repositoryMock.expects().execute(a).andStub(b)}}]),test:function(){var a=this.$el;p.call(this);var b=a.find("textarea");b.val("The same bug as id:123 bug some-id:text"),a.find(".ui-richeditor__controls__save").click();var c=this.$el.find(".ui-description__inner");equals(c.html().trim().replace("<A","<a").replace("/A>","/a>"),'The same bug as <a href="#task/123">#123&nbsp;General 123</a> bug some-id:text',"Original text"),p.call(this);var d=this.$el.find("textarea").val();equals(d,"The same bug as id:123 bug some-id:text","Text without links is open for edit"),this.$el.find(".ui-richeditor__controls__cancel").click(),c=this.$el.find(".ui-description__inner"),equals(c.html().trim().replace("<A","<a").replace("/A>","/a>"),'The same bug as <a href="#task/123">#123&nbsp;General 123</a> bug some-id:text',"Original text")}}],r=d.create("[component."+b+"]",c,f);e.create(r,i).viewShouldFollowDataComponentLifeCycle().modelShouldReturnData(_.clone(j),[k],[Similar.to({eventName:"beforeSave",type:i.context.type,listener:TypeOf.isA(a)}),Similar.to({eventName:"afterSave",type:i.context.type,listener:TypeOf.isA(a)})]).viewShouldPassTests(q).done()}var g=function(){var a=c.description,d="description";f(d,a,b)};return{run:g,generateRichTextFieldTest:f}})