define(["jQuery","tau/configurator","tests/common/testCase","tests/common/componentConfigCreator","tau/components/component.property.lastFailureComment","tests/common/testData.Generator"],function($,configurator,TestCase,ComponentConfigCreator,ComponentFailureComment,TestDataGenerator){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),testCaseData=testDataGenerator.getTestCases()[0],emptyLastFailureTestCaseData=testDataGenerator.getTestCases()[1],configCreator=new ComponentConfigCreator;configCreator.setEntityIDAndType(testCaseData.id,testCaseData.__type),configCreator.setSelectedProjects([data.selectByType("project")[0]]);var process=data.selectByType("process");configCreator.setProcesses(process);var config=configCreator.getConfig(),testCase=new TestCase("[component.lastFailureComment]");testCase.initModule({componentConfig:config,data:data},ComponentFailureComment),testCase.test("should render valid markup",function(){var $el=this.element;equal($.trim($el.find(".property-text").text()),"Failure Comment","Last failure comment is valid")}),configCreator=new ComponentConfigCreator,configCreator.setEntityIDAndType(emptyLastFailureTestCaseData.id,emptyLastFailureTestCaseData.__type),configCreator.setSelectedProjects([data.selectByType("project")[0]]),configCreator.setProcesses(process),config=configCreator.getConfig(),testCase.initModule({componentConfig:config,data:data},ComponentFailureComment),testCase.test("should render valid markup (LastFailureComment is empty)",function(){var $el=this.element;equal($.trim($el.find(".property-text").text()||""),"N/A","Last failure comment is valid")})};return{run:innerRun}})