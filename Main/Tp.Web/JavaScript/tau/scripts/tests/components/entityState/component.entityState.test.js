define(["jQuery","tau/components/component.property.entityState","tests/components/component.specs","tests/common/testData.Generator","tests/common/service.mock","tau/configurator","tests/components/common/common.setup"],function($,ComponentRelease,componentSpecs,TestDataGenerator,ServiceMock,configurator,commonSetup){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),projects=testDataGenerator.getProjects(),bugData=testDataGenerator.getBugs()[0],entityStates=testDataGenerator.getEntityStates(),context={manualContext:!0,context:{entity:{entityType:{name:bugData.__type},id:bugData.id},applicationContext:{selectedProjects:[projects[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:testDataGenerator.getProcesses()}}},entityState=bugData.entityState,entityStateToSelect=entityStates[1],entityStateDone=entityStates[3],setup=commonSetup.create("[component.property.entityState]",data,ComponentRelease,context),viewTests=[{name:"should render valid markup",test:function(){var $el=this.$el,$item=$el.find(".attr-name");ok($item.hasClass("ui-link"),"Marked as link"),equals($item.text(),entityState.name,"Entity state name")}},{name:"should allow to change state",preSetup:function(){var service=this.service=new ServiceMock;configurator.setService(service)},test:function(){var $el=this.$el;$el.click();var bubbleList=$(".tau-bubble");equals(bubbleList.size(),1,"Count of bubbles"),equals(bubbleList.find(".drop-down-option").size(),entityState.nextStates.length,"Count of next states");var $newEntityStateElement=bubbleList.eq(0).find('.drop-down-option:contains("'+entityStateToSelect.name+'")');this.service.registerSaveCommand({config:{$set:{entityState:{id:entityStateToSelect.id}},fields:["id",{entityState:["id","name","isFinal","isCommentRequired",{nextStates:["id"],list:!0}]}],id:bugData.id},returnedData:{id:bugData.id,entityState:entityStateToSelect}}),$newEntityStateElement.click(),equals(this.$el.find(".attr-name").text(),entityStateToSelect.name,"Entity state is changed")}},{name:"should save state with comment",preSetup:function(){var service=this.service=new ServiceMock;configurator.setService(service)},test:function(){var $el=this.$el;$el.click();var bubbleList=$(".tau-bubble");equals(bubbleList.size(),1,"Bubble appears"),equals(bubbleList.find(".ui-entity-state-comment").size(),0,"No comments");var $newEntityStateElement=bubbleList.eq(0).find('.drop-down-option:contains("'+entityStateDone.name+'")');equals($newEntityStateElement.size(),1,"Done option available"),$newEntityStateElement.click(),equals(bubbleList.find(".ui-entity-state-comment").size(),1,"Comment input is open");var $commentInputField=bubbleList.find(".ui-entity-state-comment .ui-state-comment-field");equals($commentInputField.size(),1,"Comment field is presented"),$commentInputField.val("Test comment");var $saveButton=bubbleList.find(".ui-entity-state-comment .button-group .save");equals($saveButton.size(),1,"Save button is presented"),this.service.registerSaveCommand({config:{$set:{entityState:{id:entityStateDone.id},comments:[{description:"Test comment"}]},fields:["id",{comments:["id","description"],list:!0},{entityState:["id","name","isFinal","isCommentRequired",{nextStates:["id"],list:!0}]}],id:bugData.id},returnedData:{id:bugData.id,entityState:entityStateDone,comments:[{description:"Test comment",id:45}]}}),$saveButton.click()}}];componentSpecs.create(setup,context).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests(viewTests).done();var finalStateBugData=testDataGenerator.getBugs()[2],emptyContext={manualContext:!0,context:{entity:{entityType:{name:finalStateBugData.__type},id:finalStateBugData.id},applicationContext:{selectedProjects:[projects[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:testDataGenerator.getProcesses()}}},bugInFinalState=commonSetup.create("[component.property.entityState][final state]",data,ComponentRelease,emptyContext);componentSpecs.create(bugInFinalState,emptyContext).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests([{name:"should disable state pull down if there are no next states",test:function(){var $el=this.$el,$item=$el.find(".attr-name");ok(!$item.hasClass("ui-link"),"Marked as link"),equals($item.text(),entityStateDone.name,"Entity state name"),$el.click();var bubbleList=$(".tau-bubble");equals(bubbleList.size(),0,"Bubble editor is disabled")}}]).done()};return{run:innerRun}})