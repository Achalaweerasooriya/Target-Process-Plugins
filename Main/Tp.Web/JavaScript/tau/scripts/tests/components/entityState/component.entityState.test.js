define(["jQuery","tau/components/component.property.entityState","tests/components/component.specs","tests/common/testData.Generator","tests/common/service.mock","tau/configurator","tests/components/common/common.setup"],function($,a,b,c,d,e,f){var g=function(){var g=new c;g.initDefaultData();var h=g.getData(),i=g.getProjects(),j=g.getBugs()[0],k=g.getEntityStates(),l={manualContext:!0,context:{entity:{entityType:{name:j.__type},id:j.id},applicationContext:{selectedProjects:[i[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:g.getProcesses()}}},m=j.entityState,n=k[1],o=k[3],p=f.create("[component.property.entityState]",h,a,l),q=[{name:"should render valid markup",test:function(){var a=this.$el,b=a.find(".attr-name");ok(b.hasClass("ui-link"),"Marked as link"),equals(b.text(),m.name,"Entity state name")}},{name:"should allow to change state",preSetup:function(){var a=this.service=new d;e.setService(a)},test:function(){var a=this.$el;a.click();var b=$(".tau-bubble");equals(b.size(),1,"Count of bubbles"),equals(b.find(".drop-down-option").size(),m.nextStates.length,"Count of next states");var c=b.eq(0).find('.drop-down-option:contains("'+n.name+'")');this.service.registerSaveCommand({config:{$set:{entityState:{id:n.id}},fields:["id",{entityState:["id","name","isFinal","isCommentRequired",{nextStates:["id"],list:!0}]}],id:j.id},returnedData:{id:j.id,entityState:n}}),c.click(),equals(this.$el.find(".attr-name").text(),n.name,"Entity state is changed")}},{name:"should save state with comment",preSetup:function(){var a=this.service=new d;e.setService(a)},test:function(){var a=this.$el;a.click();var b=$(".tau-bubble");equals(b.size(),1,"Bubble appears"),equals(b.find(".ui-entity-state-comment").size(),0,"No comments");var c=b.eq(0).find('.drop-down-option:contains("'+o.name+'")');equals(c.size(),1,"Done option available"),c.click(),equals(b.find(".ui-entity-state-comment").size(),1,"Comment input is open");var d=b.find(".ui-entity-state-comment .ui-state-comment-field");equals(d.size(),1,"Comment field is presented"),d.val("Test comment");var e=b.find(".ui-entity-state-comment .button-group .save");equals(e.size(),1,"Save button is presented"),this.service.registerSaveCommand({config:{$set:{entityState:{id:o.id},comments:[{description:"Test comment"}]},fields:["id",{comments:["id","description"],list:!0},{entityState:["id","name","isFinal","isCommentRequired",{nextStates:["id"],list:!0}]}],id:j.id},returnedData:{id:j.id,entityState:o,comments:[{description:"Test comment",id:45}]}}),e.click()}}];b.create(p,l).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests(q).done();var r=g.getBugs()[2],s={manualContext:!0,context:{entity:{entityType:{name:r.__type},id:r.id},applicationContext:{selectedProjects:[i[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:g.getProcesses()}}},t=f.create("[component.property.entityState][final state]",h,a,s);b.create(t,s).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests([{name:"should disable state pull down if there are no next states",test:function(){var a=this.$el,b=a.find(".attr-name");ok(!b.hasClass("ui-link"),"Marked as link"),equals(b.text(),o.name,"Entity state name"),a.click();var c=$(".tau-bubble");equals(c.size(),0,"Bubble editor is disabled")}}]).done()};return{run:g}})