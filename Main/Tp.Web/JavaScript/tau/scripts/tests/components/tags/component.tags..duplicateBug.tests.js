define(["Underscore","jQuery","tau/core/tau","tau/components/component.tags","tests/common/testData","tests/common/testCase","tests/common/componentConfigCreator","tests/common/testData.Generator"],function(_,$,a,b,c,d,e,f){var g=function(){function m(a,b,c){var d=arguments[arguments.length-1];_.isFunction(d)||(d=null);var e=_.map(a.split(","),function(a){return a.trim()});e=_.select(e,function(a){return a.length>0});var f=(_.isString(c)?c:h.tags+",")+e.join(",");this.serviceMock.registerSaveCommand({config:{$set:{tags:f},fields:["id","tags"],id:h.id},returnedData:{id:h.id,tags:f}});var b=this.element;b.children(".ui-tags__editor").find("a:first").trigger("click"),b.children(".ui-tags__editor").find(":text").val(a),d?d():b.children(".ui-tags__editor").find(".ui-tags__editor__button-submit").trigger("click");var g=this.element.children(".ui-tags__tag").last();return g}var a=new f;a.clear(),a.initDefaultData();var c=a.getData(),g=a.getUserStories()[3],h=g,i=new e;i.setEntityIDAndType(h.id,h.__type),i.setSelectedProjects([c.selectByType("project")[0]]),i.setProcesses(c.selectByType("process"));var j=i.getConfig(),k=new d("[component.tags]");k.initModule({componentConfig:j,data:c},b),k.test("should refresh if duplicateOf# tag added",function(){var a=this.element,b="duplicateOf#25",c=m.call(this,b);equal(c.last().find("span > a").text(),b,"Tag is added"),equal(c.last().find("span > a").attr("href"),"#bug/25","href is valid")}),k.test("should allow to add tag",function(){var a="porn",b=this.element,c=b.find(".ui-tags__editor");equal(c.length,1,"Have possibility to add tag");var d=m.call(this,a,b);equal(d.last().find("span").text(),a,"Tag is added")}),k.test("should allow to add tags with html and show it as text",function(){var a="<h1>porn</h1>",b=this.element,c=b.find(".ui-tags__editor");equal(c.length,1,"Have possibility to add tag");var d=m.call(this,a,b);equal(d.last().find("span").text(),a,"Tag is added")}),k.test("should allow to use key buttons",function(){var a="<h1>porn</h1>",b=this.element,c=b.find(".ui-tags__editor");equal(c.length,1,"Have possibility to add tag");var d=m.call(this,a,b);equal(d.last().find("span").text(),a,"Tag is added")}),k.test("should allow to add several tags by comma and trim them",function(){var a="porn, sex,  lesbian, ",b=this.element,c=b.find(".ui-tags__editor");equal(c.length,1,"Have possibility to add tag");var d=m.call(this,a,b);equal(d.last().find("span").text(),"lesbian","Tag is added"),d=d.last().prev(),equal(d.find("span").text(),"sex","Tag is added"),d=d.last().prev(),equal(d.find("span").text(),"porn","Tag is added")}),k.test("should cancel edit of user press Esc",function(){var a="porn",b=this.element,c=b.find(".ui-tags__editor");equal(c.length,1,"Have possibility to add tag"),c.find("a:first").trigger("click"),c.find(":text").val(a);var d=$.Event("keydown",{keyCode:27,which:27});c.find(":text").trigger(d),equal(this.element.children(".ui-tags__tag").filter(".ui-tags__tag-new").length,0,"Not new tags on esc")}),k.test("should add tag of user press Enter",function(){function e(){c.find(":text").trigger(d)}var a="porn",b=this.element,c=b.find(".ui-tags__editor");equal(c.length,1,"Have possibility to add tag"),c.find("a:first").trigger("click"),c.find(":text").val(a);var d=$.Event("keydown",{keyCode:13,which:13}),f=m.call(this,a,b,e);equal(f.last().find("span").text(),a,"Tag is added")});var k=new d("[component.tags]"),l=_.clone(c);_.each(l,function(a,b){a.hasOwnProperty("tags")&&(l[b]=_.clone(a),l[b].tags="")}),k.initModule({componentConfig:j,data:l},b),k.test("should allow to add tag when list empty",function(){var a="porn",b=this.element,c=b.find(".ui-tags__editor");equal(c.length,1,"Have possibility to add tag");var d=m.call(this,a,b,"");equal(d.last().find("span").text(),a,"Tag is added")})};return{run:g}})