define(["Underscore","tau/components/component.state-list","tests/components/common/common.setup","tests/components/component.specs","tests/common/modelConfig","tests/common/testData"],function(_,component,commonSetup,componentSpecs,modelConfig,testData){var innerRun=function(){var bugData=testData.getTestDataForState(),states=testData.getStatesForProcess(),repositoryMockData=[bugData,states],context={manualContext:!0,context:modelConfig.bug(bugData.id)};context.context.entity=bugData;var entity=_.extend(_.clone(bugData)),entityState=states.entityStates[4];entity.entityState.nextStates=entityState.nextStates;var viewTests=[{name:"should render valid markup for empty",test:function(){var $el=this.$el;equals($el.find(".drop-down-list").text(),"No items found","empty placeholder has text")}}],setup=commonSetup.create("[component.state.empty]",repositoryMockData,component,{listType:"entityState",emptyDataMessage:"No items found"});repositoryMockData[0].entityState.nextStates=[],repositoryMockData[1].entityStates=[],componentSpecs.create(setup,context).viewShouldPassTests(viewTests).done()};return{run:innerRun}})