define(["Underscore","tests/components/common/common.tests","tests/components/utils/dispatcher"],function(_,commonTests,dispatcherUtils){return{create:function(componentSetup,context){var testOptions=[];return{modelShouldReturnData:function(expectedData,expectedCmdArray,storeSubscriptions){return testOptions=commonTests.addModelTestsToArray(testOptions,expectedData,expectedCmdArray,storeSubscriptions),this},shouldHandlePermissions:function(expectedPermissions){return testOptions=commonTests.addPermissionTestToArray(testOptions,expectedPermissions),this},viewShouldFollowBasicComponentLifeCycle:function(){var lifeCycleTest={name:"view should follow basic component life cycle",setup:function(){this.basicEvents=["beforeInit","afterInit","beforeRender","afterRender"],this.containerDispatcher=dispatcherUtils.createDispatcher(this.component,this.basicEvents)},test:function(){dispatcherUtils.verifyLifeCycle(this.basicEvents,this.containerDispatcher,"component"),same(this.containerDispatcher.order,this.basicEvents)}};return arguments.length===1&&(lifeCycleTest.preSetup=arguments[0]),testOptions.push(lifeCycleTest),this},viewShouldFollowDataComponentLifeCycle:function(){var lifeCycleTest={name:"view should follow data component life cycle",setup:function(){this.basicEvents=["beforeInit","dataBind","afterInit","beforeRender","afterRender"],this.containerDispatcher=dispatcherUtils.createDispatcher(this.component,this.basicEvents)},test:function(){dispatcherUtils.verifyLifeCycle(this.basicEvents,this.containerDispatcher,"component"),same(this.containerDispatcher.order,this.basicEvents)}};return arguments.length===1&&(lifeCycleTest.preSetup=arguments[0]),testOptions.push(lifeCycleTest),this},on:function(evtName,test){var testOption={setup:function(){var self=this;self.EventsDictonary=self.EventsDictonary||{},self.EventsDictonary[evtName]=[],self.component.on(evtName,function(evt){_(self.EventsDictonary[evtName]).contains(evt)||self.EventsDictonary[evtName].push(evt)})}};return _.extend(testOption,test),testOptions.push(testOption),this},viewShouldFollowContainerComponentLifeCycle:function(){var lifeCycleTest={name:"view should follow container component life cycle",setup:function(){var self=this;self.basicEvents=["beforeInit","afterInit","beforeRender","afterRender"],self.basicChildEvents=["beforeInit","afterInit","dataBind","beforeRender","afterRender"],self.childDispatchers=[],self.containerDispatcher=dispatcherUtils.createDispatcher(this.component,self.basicEvents),this.component.on("childComponentCreated",function(evt){var child=evt.data;dispatcherUtils.dispatchChild(child,self.config.children[self.childDispatchers.length],self.config.context,self.containerDispatcher),self.childDispatchers.push(dispatcherUtils.createDispatcher(child,self.basicChildEvents))})},test:function(){var self=this;dispatcherUtils.verifyLifeCycle(self.basicEvents,self.containerDispatcher,"main container");for(var i=0,len=self.childDispatchers.length;i<len;i++)dispatcherUtils.verifyLifeCycle(self.basicEvents,self.childDispatchers[i],"child component #"+(i+1));same(self.containerDispatcher.order,self.basicEvents)}};return testOptions.push(lifeCycleTest),this},viewShouldPassTests:function(tests,setup){return commonTests.addUITestToArray(testOptions,tests,setup),this},viewShouldContainEmptyMessage:function(message,test){var setup=function(){this.component.on("dataBind",function(){arguments[0].data.items=[]},this,null,1),this.component.on("afterRender",function(evt){this.$el=evt.data.element},this)},tests=[{name:"should have valid empty message",setup:setup,test:test||function(){equal(this.$el.children().length,2,"Count of children is valid"),equal(this.$el.children().eq(0).css("display"),"none","Style is valid"),ok(this.$el.children().eq(1).is("span"),"Count of children is valid"),equal(this.$el.children().eq(1).text(),message,"Count of children is valid")}}];return this.viewShouldPassTests(tests,setup)},done:function(){for(var i=0,testsCount=testOptions.length;i<testsCount;i++){var testOption=testOptions[i];testOption.context&&(context.context=testOption.context);var targetContext=componentSetup.setup({setup:testOption.setup,preSetup:testOption.preSetup}).initialize(context,testOption.init).test(testOption.name,testOption.test)}return this}}}}})