define(["jQuery","tests/common/testkit","tau/components/component.customField.multiselect","tau/components/component.customField.multiselect.list"],function($,ComponentTestKit,Component){var run=function(){var TestCase=new ComponentTestKit("[component.customField.multiselect]",Component),userStories={us1:{name:"US1",customFields:[{name:"Multi",type:"MultipleSelectionList",value:"Aaren,Abahri"}]}},data=TestCase.loadFixtures({userStories:userStories});return TestCase.setData(data),TestCase.setEntity(data.userStory.us1),TestCase.selectDefaultProject(),TestCase.appContext.processes[0].customFields=[{name:"Multi",type:"MultipleSelectionList",required:!1,listed:!1,value:null}],TestCase.addTest({name:"should render valid markup",test:function(){var $el=this.$el;equals($el.find(".ui-customfield__value").text(),"Aaren, Abahri","Correct process and output")}}),TestCase.addTest({name:"should allow to edit",test:function(){var $el=this.$el,$val=$el.find(".tau-bubble-target"),entity=data.userStory.us1;$val.click();var $popup=$val.tauBubble("widget");equals($popup.length,1,"Show popup");var $options=$popup.find("[role=option]");equals($options.length,0,"Show optss");var $empty=$popup.find("[role=placeholder-empty]");equals($empty.length,1,"Show empty"),equals($empty.text(),"No items found","Show empty")}}),TestCase.run({customField:{type:"MultipleSelectionList",name:"Multi"}})};return{run:run}})