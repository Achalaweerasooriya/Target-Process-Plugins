define(["Underscore","jQuery","tests/common/testkit","tau/components/component.customField.date","tau/utils/utils.date"],function(_,$,ComponentTestKit,Component,dateUtils){var run=function(){var TestCase=new ComponentTestKit("[component.customField.date]",Component),userStories={us1:{name:"US1",customFields:[{name:"Birthday",type:"Date",value:"12-Dec-2012"}]}},data=TestCase.loadFixtures({userStories:userStories});return TestCase.setData(data),TestCase.setEntity(data.userStory.us1),TestCase.selectDefaultProject(),TestCase.appContext.processes[0].customFields=[{name:"Birthday",type:"Date",required:!1,listed:!1,value:null}],TestCase.addTest({name:"should render valid markup",test:function(){var $el=this.$el;equals($el.find(".ui-customfield__label").text().trim(),"Birthday","Name is valid"),equals($el.find(".ui-customfield__value").text().trim(),"12-Dec-2012","Value is valid")}}),TestCase.addTest({name:"should allow to edit",test:function(){var $el=this.$el,entity=data.userStory.us1;ok(this.$el.hasClass("ui-customfield_editable_true"),"Editable highlighting is applied");var $valEl=this.$el.find(".ui-customfield__value");$valEl.click(),equals($(".ui-datepicker").length,1,"Datepicker created");var $input=$valEl.next(".ui-dateeditor").find(":input");TestCase.getService().registerSaveCommand({config:{$set:{customFields:[{name:"Birthday",type:"Date",value:"22-Dec-2012"}]},fields:["id","customFields"],id:entity.id},returnedData:{id:entity.id,customFields:[{name:"Birthday",type:"Date",value:"22-Dec-2012"}]}}),$input.val("12/22/2012"),$("body").click(),equals($valEl.hasClass("ui-validationerror"),!1,"correct date");var $valEl=this.$el.find(".ui-customfield__value");equals($valEl.text(),"22-Dec-2012","Value saved")}}),TestCase.addTest({name:"validation",test:function(){function checkDate(value,shouldSaveValue){var $valEl=this.$el.find(".ui-customfield__value"),$input=$valEl.next(".ui-dateeditor").find(":input"),isValid=!!shouldSaveValue;isValid&&TestCase.getService().registerSaveCommand({config:{$set:{customFields:[{name:"Birthday",type:"Date",value:shouldSaveValue}]},fields:["id","customFields"],id:entity.id},returnedData:{id:entity.id,customFields:[{name:"Birthday",type:"Date",value:shouldSaveValue}]}}),$input.val(value),$("body").click(),equals($valEl.hasClass("ui-validationerror"),!isValid,value+" is "+(isValid?"correct date":"invalid date"));if(isValid){var $valEl=this.$el.find(".ui-customfield__value");equals($valEl.text(),shouldSaveValue,"Converted as")}}var entity=data.userStory.us1}}),TestCase.addTest({name:"should allow to save empty",test:function(){var $el=this.$el,entity=data.userStory.us1;TestCase.getService().registerSaveCommand({config:{$set:{customFields:[{name:"Birthday",type:"Date",value:null}]},fields:["id","customFields"],id:entity.id},returnedData:{id:entity.id,customFields:[{name:"Birthday",type:"Date",value:null}]}});var $valEl=this.$el.find(".ui-customfield__value");$valEl.click();var $input=$valEl.next(".ui-dateeditor").find(":input");$input.val(""),$("body").click(),$valEl=this.$el.find(".ui-customfield__value"),equals($valEl.text(),"","Save value")}}),TestCase.run({customField:{type:"Date",name:"Birthday"}})};return{run:run}})