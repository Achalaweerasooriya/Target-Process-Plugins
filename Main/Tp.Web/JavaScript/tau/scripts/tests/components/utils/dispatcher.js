define(["Underscore","tau/core/event"],function(_,event){var createDispatcher=function(bus,events){var result={order:[],args:{},counts:{},initEvt:function(evtName){this.counts.hasOwnProperty(evtName)||(this.counts[evtName]=0)},regEvt:function(evtName,data){this.order.push(evtName),this.counts[evtName]=1+this.counts[evtName],this.args[evtName]=data}},dispatcher={bus:bus};return _.each(events,function(evt){result.initEvt(evt),dispatcher["bus "+evt+" 1"]=function(evtArgs){result.regEvt(evt,evtArgs.data||evtArgs)}}),event.subscribeOn(dispatcher),result},verifyLifeCycle=function(events,containerDispatcher,name){_.each(events,function(evt){equals(containerDispatcher.counts[evt],1,"Count of event '"+evt+"' is valid for "+name)})},dispatchChild=function(component,config,context,containerDispatcher){var dispatcher={bus:component,"bus afterInit":function(){equals(containerDispatcher.counts.afterInit,0,"no after init for container")},"bus initialize":function(evt){var data=evt.data,expectedConfig=config;expectedConfig.context=context,ok(expectedConfig===data,"Reference the same initialization config")},"bus afterRender":function(){equals(containerDispatcher.counts.afterRender,0,"no after render for container")}};event.subscribeOn(dispatcher)};return{createDispatcher:createDispatcher,verifyLifeCycle:verifyLifeCycle,dispatchChild:dispatchChild}})