define(["tau/configurator","tau/utils/utils.fixturesLoader"],function(configurator,Loader){var innerRun=function(){module("[utils.fixturesLoader] tests"),test("should allow to load one",function(){var loader=new Loader,data=loader.load({bug:{b1:{name:"Evil Bug"}}});jqMock.assertThat(data,{bug:{b1:jqMock.is.objectThatIncludes({id:null,name:"Evil Bug",createDate:null,release:null,assignments:[]})}},"Return correct load"),jqMock.assertThat(data,{bug:{b1:jqMock.is.not(jqMock.is.objectThatIncludes({__type:"bug"}))}},"Return correct load without __type");var loader=new Loader({generateId:!0,setType:!0}),data=loader.load({bug:{b1:{name:"Evil Bug"}}});jqMock.assertThat(data,{bug:{b1:jqMock.is.objectThatIncludes({id:jqMock.is.custom(function(v){return _.isNumber(v)}),__type:"bug",name:"Evil Bug",createDate:null,release:null,assignments:[]})}},"Return correct load with id and __type")}),test("should allow to load short",function(){var loader=new Loader,data=loader.load({bugs:{b1:"Evil Bug"}});jqMock.assertThat(data,{bug:{b1:jqMock.is.objectThatIncludes({name:"Evil Bug",createDate:null,release:null,assignments:[]})}},"Return correct load")}),test("should allow to load collections",function(){var loader=new Loader,data=loader.load({bugs:{b1:"Evil Bug",b2:"Good Bug"},tasks:{t1:"Good Task"}});jqMock.assertThat(data,{bug:{b1:jqMock.is.objectThatIncludes({name:"Evil Bug",createDate:null}),b2:jqMock.is.objectThatIncludes({name:"Good Bug",createDate:null})},task:{t1:jqMock.is.objectThatIncludes({name:"Good Task"})}},"Return correct load")}),test("should allow to load with refs",function(){var loader=new Loader,data=loader.load({userStories:{us1:{name:"Big Story",tasks:["t2"],feature:"f1"}},task:{t1:"Cool task",t2:{name:"Big Day",createDate:"12-Dec-2012"}},feature:{f1:"World Dominance"}});jqMock.assertThat(data,{userStory:{us1:jqMock.is.objectThatIncludes({name:"Big Story",createDate:null,tasks:[jqMock.is.objectThatIncludes({name:"Big Day",createDate:"12-Dec-2012"})],release:null,feature:jqMock.is.objectThatIncludes({name:"World Dominance"})})},task:{t1:jqMock.is.objectThatIncludes({name:"Cool task",createDate:null}),t2:jqMock.is.objectThatIncludes({name:"Big Day",createDate:"12-Dec-2012"})},feature:{f1:jqMock.is.objectThatIncludes({name:"World Dominance"})}},"Return correct load refs")}),test("should allow to set additional fielsds",function(){var loader=new Loader,data=loader.load({bug:{b1:{name:"Evil Bug",something:"yeah"}}});jqMock.assertThat(data,{bug:{b1:jqMock.is.objectThatIncludes({id:null,name:"Evil Bug",createDate:null,release:null,assignments:[]})}},"Return correct load"),jqMock.assertThat(data,{bug:{b1:jqMock.is.not(jqMock.is.objectThatIncludes({something:"yeah"}))}},"Return correct load without additional fields");var loader=new Loader({copyAdditionalFields:!0}),data=loader.load({bug:{b1:{name:"Evil Bug",something:"yeah"}}});jqMock.assertThat(data,{bug:{b1:jqMock.is.objectThatIncludes({name:"Evil Bug",something:"yeah",createDate:null,release:null,assignments:[]})}},"Return correct load with additional fields")}),test("should allow to load with refs and backRefs",function(){var fixtures={userStories:{us1:{name:"Big Story",tasks:["t2"],feature:"f1"}},task:{t1:"Cool task",t2:{name:"Big Day",createDate:"12-Dec-2012"}},feature:{f1:"World Dominance"}},loader=new Loader,data=loader.load(fixtures);jqMock.assertThat(data,{userStory:{us1:jqMock.is.objectThatIncludes({name:"Big Story",createDate:null,tasks:[jqMock.is.objectThatIncludes({name:"Big Day",createDate:"12-Dec-2012"})],release:null,feature:jqMock.is.objectThatIncludes({name:"World Dominance"})})},task:{t1:jqMock.is.objectThatIncludes({name:"Cool task",createDate:null}),t2:jqMock.is.objectThatIncludes({name:"Big Day",createDate:"12-Dec-2012",userStory:null})},feature:{f1:jqMock.is.objectThatIncludes({name:"World Dominance"})}},"No back refs bt default"),loader=new Loader({setBackRefs:!0}),data=loader.load(fixtures),jqMock.assertThat(data,{userStory:{us1:jqMock.is.objectThatIncludes({name:"Big Story",createDate:null,tasks:[jqMock.is.objectThatIncludes({name:"Big Day",createDate:"12-Dec-2012"})],release:null,feature:jqMock.is.objectThatIncludes({name:"World Dominance"})})},task:{t1:jqMock.is.objectThatIncludes({name:"Cool task",createDate:null}),t2:jqMock.is.objectThatIncludes({name:"Big Day",createDate:"12-Dec-2012",userStory:jqMock.is.objectThatIncludes({name:"Big Story"})})},feature:{f1:jqMock.is.objectThatIncludes({name:"World Dominance"})}},"Return correct load refs")})};return{run:innerRun}})