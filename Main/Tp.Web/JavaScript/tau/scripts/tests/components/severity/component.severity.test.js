define(["tau/store/types.targetprocess","jQuery","tau/components/component.property.severity","tests/components/component.specs","tests/common/testData.Generator","tests/common/service.mock","tau/configurator","tests/components/common/common.setup"],function(types,$,ComponentSeverity,componentSpecs,TestDataGenerator,ServiceMock,configurator,commonSetup){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),projects=testDataGenerator.getProjects(),bugData=testDataGenerator.getBugs()[0],severityList=testDataGenerator.getSeverities(),context={manualContext:!0,context:{entity:{entityType:{name:bugData.__type},id:bugData.id},applicationContext:{selectedProjects:[projects[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:testDataGenerator.getProcesses()}}},severity=bugData.severity,newSeverity=severityList[3],fnPreSetup=function(){var service=this.service=new ServiceMock;configurator.setService(service),configurator.getProxy().markRecordSetAsCompleteLoaded("severity")},setup=commonSetup.create("[component.severity]",data,ComponentSeverity,context),viewTests=[{name:"should render valid markup",preSetup:fnPreSetup,test:function(){var $el=this.$el;equal($el.find(".property-text").text(),severity.name,"Severity name")}},{name:"should change severity",preSetup:fnPreSetup,test:function(){var $el=this.$el,triger=$el.find(".property-text");triger.click();var bubbleList=$(".tau-bubble");equal(bubbleList.size(),1,"Count of bubbles");var newSeverityElement=bubbleList.eq(0).find('.drop-down-option:contains("'+newSeverity.name+'")');this.service.registerSaveCommand({config:{$set:{severity:{id:newSeverity.id}},fields:["id"],id:bugData.id},returnedData:{id:bugData.id,severity:{id:newSeverity.id,name:newSeverity.name}}}),newSeverityElement.click(),equal(this.$el.find(".property-text").text(),newSeverity.name,"Severity was changed")}}];componentSpecs.create(setup,context).viewShouldFollowBasicComponentLifeCycle(fnPreSetup).viewShouldPassTests(viewTests).done();var emptySeverity=commonSetup.create("[component.severity] empty",data,ComponentSeverity,context),emptyBugData=testDataGenerator.getBugs()[1],emptyContext={context:{type:emptyBugData.__type,id:emptyBugData.id}};componentSpecs.create(emptySeverity,emptyContext).viewShouldFollowBasicComponentLifeCycle(fnPreSetup).viewShouldPassTests([{name:"should render valid markup for empty Severity",preSetup:fnPreSetup,test:function(){var $el=this.$el;equal($el.find(".property-text").text(),"","Severity name")}}]).done()};return{run:innerRun}})