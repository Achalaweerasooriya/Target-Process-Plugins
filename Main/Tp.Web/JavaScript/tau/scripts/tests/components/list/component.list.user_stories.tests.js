define(["Underscore","tests/components/list/specific/component.list.spec.base","tau/models/dataProviders/model.provider.items.user_stories","tau/models/dataProviders/model.provider.groups.user_stories"],function(_,Spec,ItemsProvider,GroupsProvider){var innerRun=function(){var tests=Spec.Testcase.create("[component.list][user_stories]",ItemsProvider,GroupsProvider,function(){var types={us:"UserStory"},processes={kanban:"Kanban"},projects={p1:{name:"Project1",process:"kanban"}},priorities={p1:"Good"},states={us_open:{name:"Open",nextStates:["us_inprogress","us_done"],entityType:"us",process:"kanban",isInitial:!0},us_inprogress:{name:"In Progress",nextStates:["us_done"],entityType:"us",process:"kanban"},us_done:{name:"Done",nextStates:[],entityType:"us",process:"kanban",isFinal:!0}},iterations={i1:{name:"Iteration",userStories:["us1","us2","us3"]}},userStories={us1:{name:"US1",entityState:"us_open",project:"p1",priority:"p1"},us2:{name:"US2",entityState:"us_open",project:"p1",priority:"p1"},us3:{name:"US3",entityState:"us_done",project:"p1",priority:"p1"}};this.loadFixtures({entityType:types,projects:projects,iterations:iterations,entityStates:states,userStories:userStories,processes:processes,priorities:priorities}),this.setProject(this.data.project.p1),this.setEntity(this.data.iteration.i1)});tests.add(new Spec.TestMarkup({groups:[{title:"Open",items:["US1","US2"]},{title:"In Progress",items:[]},{title:"Done",items:["US3"]}]})),tests.add(new Spec.TestState),tests.run()};return{run:innerRun}})