define(["Underscore","tests/components/list/specific/component.list.spec.base","tau/models/dataProviders/userstory/userstory.model.provider.bugs.items"],function(_,Spec,ItemsProvider){var innerRun=function(){var tests=Spec.Testcase.create("[list.userstory.bugs]",ItemsProvider,null,function(){this.componentConfig={itemsDataProvider:this.providers.items,views:[{type:"grid.entity"}]};var types={bug:"Bug"},processes={kanban:"Kanban",scrum:"Scrum"},priorities={p1:"Good"},severities={s1:"Good"},projects={p_kanban:{name:"Project Kanban",process:"kanban"},p_scrum:{name:"Project Scrum",process:"scrum"}},releases={r1:"Release1",r2:"R2"},iterations={i1:"Iter1",i2:"Iter2"},entityStates={bug_open:{name:"Open",nextStates:["bug_inprogress","bug_done"],entityType:"bug",process:"kanban",isInitial:!0},bug_inprogress:{name:"In Progress",nextStates:["bug_done"],entityType:"bug",process:"kanban"},bug_done:{name:"Done",nextStates:[],entityType:"bug",process:"kanban",isFinal:!0}},userStories={us1:{name:"US1",bugs:["b1","b2","b3"],project:"p_kanban",process:"kanban"},us2:{name:"US2",tasks:[],project:"p_kanban",process:"kanban"}},bugs={b1:{name:"Bug1",severity:"s1",project:"p_kanban",release:"r1",entityState:"bug_open",numericPriority:10},b2:{name:"Bug2",severity:"s1",project:"p_scrum",iteration:"i1",entityState:"bug_open",numericPriority:30},b3:{name:"Bug3",severity:"s1",project:"p_scrum",iteration:"i1",entityState:"bug_open",numericPriority:20}};this.loadFixtures({entityType:types,projects:projects,userStories:userStories,bugs:bugs,priority:priorities,severity:severities,processes:processes,releases:releases,iterations:iterations,entityStates:entityStates}),this.setProject(this.data.project.p_kanban),this.setEntity(this.data.userStory.us1)});tests.add(new Spec.Test({name:"should render valid markup view",test:function(){var data=this.data,$el=this.$el,groupsConfig=[{items:["Bug1","Bug3","Bug2"]}],$groups=$el.find("[role=group]");equals($groups.length,groupsConfig.length,"Groups amount");var $itemsGroups=$el.find("[role=list]");for(var i=0;i<$itemsGroups.length;i++){var $group=$itemsGroups.eq(i),$trs=$group.find("[role=item]");for(var j=0;j<$trs.length;j++){var $cells=$trs.eq(j).find(".tau-list__table__cell"),item=data.items[j];equals(_.trim($cells.eq(1).text()),item.id,"ID Data column");var outputName=_.trim($cells.eq(2).text()),itemName=groupsConfig[i].items[j];equals(outputName,itemName,"Name Data column")}}}})),tests.run()};return{run:innerRun}})