define(["Underscore","tests/common/service.mock","tau/components/component.list","tests/common/datapoint/test.common.datapoint","tests/common/applicationContext","tests/components/common/common.setup","tests/components/component.specs","tests/common/checker","tau/models/dataProviders/model.provider.items.tasks_bugs","tau/models/dataProviders/model.provider.groups.tasks_bugs","tau/configurator","tau/models/dataprocessor/model.processor.context","tau/ui/templates/list_/grid.entity/ui.template.list.grid.entity"],function(a,b,c,d,e,f,g,h,i,j,k,l){var m=function(){var h=new e,m=d.projects(),n=d.entityStates(),o=[n[4],n[7],n[46],n[49]],p={open:{main:n[4],scrum:n[46]},closed:{main:n[7],scrum:n[49]}},q=d.bugs(),r=d.tasks(),s={id:15,__type:"userStory",tasks:[],bugs:a(q).filter(function(a){return a.id==41||a.id==665})},t=m[0],u=m[1],v=[t,u];m.process=p.open.main.process,s.bugs[0].entityState=p.open.main,s.bugs[0].entityState.nextStates=[p.closed.main],s.bugs[0].process=p.open.main.process,s.bugs[0].project=t,u.process=p.open.scrum.process,s.bugs[1].entityState=p.open.scrum,s.bugs[1].entityState.nextStates=[p.closed.scrum],s.bugs[1].process=p.open.scrum.process,s.bugs[1].project=u;var w=[p.open.main,p.closed.main,p.open.scrum,p.closed.scrum],x=[s].concat(w).concat(v),y={context:{type:"story",id:15}},z=function(){var a=this.service=new b;k.setService(a),k.getProxy().markRecordSetAsCompleteLoaded("project"),k.getProxy().markRecordSetAsCompleteLoaded("entityState"),k.getProxy().markRecordSetAsCompleteLoaded("priority"),k.getProxy().markRecordSetAsCompleteLoaded("severity"),k.getRouting().setStateParameter("list",null)},A=[{name:"should allow use states dependant of process",preSetup:z,test:function(){var b=this.$el,c=b.find("[role=group]");equals(c.length,2,"Correct groups"),equals(a.trim(c.eq(0).find("[role=title]").text()),"Open"),equals(a.trim(c.eq(1).find("[role=title]").text()),"Closed"),$items=c.eq(0).find("[role=item]"),equals($items.length,2,"Correct items");var d=c.eq(0),e=$items.eq(0);c.eq(1).find("[role=expander]").click(),d.triggerHandler("sortstart",{item:e});var f=b.find(".tau-list__group_available_true[role=group]");equals(f.length,2,"All available groups"),this.service.registerSaveCommand({config:{id:41,$set:{beforeId:undefined,afterId:undefined},fields:["id"]},returnedData:{id:41}}),this.service.registerGetCommand({config:{id:41,fields:["id","numericPriority"]},returnedData:{id:41,numericPriority:123123}});var g=s.bugs[0];this.service.registerSaveCommand({config:{id:g.id,$set:{entityState:{id:g.entityState.nextStates[0].id}},fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:g.id,entityState:g.entityState.nextStates[0]}}),this.service.registerGetCommand({config:{id:g.id,fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:g.id,entityState:g.entityState.nextStates[0]}}),e.appendTo(c.eq(1).find("[role=list]")),d.triggerHandler("sortupdate",{item:e}),d.triggerHandler("sortstop"),this.service.verify()}},{name:"should allow use states dependant of process",preSetup:z,test:function(){var b=this.$el,c=b.find("[role=group]");equals(c.length,2,"Correct groups"),equals(a.trim(c.eq(0).find("[role=title]").text()),"Open"),equals(a.trim(c.eq(1).find("[role=title]").text()),"Closed"),$items=c.eq(0).find("[role=item]"),equals($items.length,2,"Correct items");var d=c.eq(0),e=$items.eq(1);c.eq(1).find("[role=expander]").click(),d.triggerHandler("sortstart",{item:e}),$availableGroups=b.find(".tau-list__group_available_true[role=group]"),equals($availableGroups.length,2,"All available groups"),this.service.registerSaveCommand({config:{id:665,$set:{beforeId:undefined,afterId:undefined},fields:["id"]},returnedData:{id:665}}),this.service.registerGetCommand({config:{id:665,fields:["id","numericPriority"]},returnedData:{id:665,numericPriority:154523123}});var f=s.bugs[1];this.service.registerSaveCommand({config:{id:f.id,$set:{entityState:{id:f.entityState.nextStates[0].id}},fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:f.id,entityState:f.entityState.nextStates[0]}}),this.service.registerGetCommand({config:{id:f.id,fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:f.id,entityState:f.entityState.nextStates[0]}}),e.appendTo(c.eq(1).find("[role=list]")),d.triggerHandler("sortupdate",{item:e}),d.triggerHandler("sortstop"),this.service.verify()}}],B={context:{applicationContext:h},type:"list",itemsDataProvider:i,groupsDataProvider:j,groupBy:"entityState.name",multiprojects:!0,views:[{type:"grid.entity",group:{dataIndex:"name"}}]};l(B.context);var C=f.create("[component.list][user_story][tasks_bugs]",x,c,B);g.create(C,y).viewShouldFollowDataComponentLifeCycle(z).viewShouldPassTests(A).done()};return{run:m}})