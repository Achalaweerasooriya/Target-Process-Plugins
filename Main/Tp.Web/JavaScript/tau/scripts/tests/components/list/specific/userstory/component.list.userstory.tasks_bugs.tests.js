define(["Underscore","tests/common/service.mock","tau/components/component.list","tests/common/datapoint/test.common.datapoint","tests/common/applicationContext","tests/components/common/common.setup","tests/components/component.specs","tests/common/checker","tau/models/dataProviders/model.provider.items.tasks_bugs","tau/models/dataProviders/model.provider.groups.tasks_bugs","tau/configurator","tau/models/dataprocessor/model.processor.context","tau/ui/templates/list_/grid.entity/ui.template.list.grid.entity"],function(_,ServiceMock,listComponent,dataPoint,AppCtx,commonSetup,componentSpecs,checker,ItemsDataProvider,GroupsDataProvider,configurator,fnCtxProcessor){var innerRun=function(){var appContext=new AppCtx,projects=dataPoint.projects(),entityStates=dataPoint.entityStates(),onlyStates=[entityStates[4],entityStates[7],entityStates[46],entityStates[49]],states={open:{main:entityStates[4],scrum:entityStates[46]},closed:{main:entityStates[7],scrum:entityStates[49]}},bugs=dataPoint.bugs(),tasks=dataPoint.tasks(),entity={id:15,__type:"userStory",tasks:[],bugs:_(bugs).filter(function(t){return t.id==41||t.id==665})},project=projects[0],scrumProject=projects[1],realProjects=[project,scrumProject];projects.process=states.open.main.process,entity.bugs[0].entityState=states.open.main,entity.bugs[0].entityState.nextStates=[states.closed.main],entity.bugs[0].process=states.open.main.process,entity.bugs[0].project=project,scrumProject.process=states.open.scrum.process,entity.bugs[1].entityState=states.open.scrum,entity.bugs[1].entityState.nextStates=[states.closed.scrum],entity.bugs[1].process=states.open.scrum.process,entity.bugs[1].project=scrumProject;var realEntityStates=[states.open.main,states.closed.main,states.open.scrum,states.closed.scrum],dataToRegister=[entity].concat(realEntityStates).concat(realProjects),context={context:{type:"story",id:15}},fnPreSetup=function(){var service=this.service=new ServiceMock;configurator.setService(service),configurator.getProxy().markRecordSetAsCompleteLoaded("project"),configurator.getProxy().markRecordSetAsCompleteLoaded("entityState"),configurator.getProxy().markRecordSetAsCompleteLoaded("priority"),configurator.getProxy().markRecordSetAsCompleteLoaded("severity"),configurator.setExternal({location:{hash:"#"}}),configurator.getStateManager().set({id:"list",set:{state:{}}})},viewTests=[{name:"should allow use states dependant of process",preSetup:fnPreSetup,test:function(){var $el=this.$el,$groups=$el.find("[role=group]");equals($groups.length,2,"Correct groups"),equals(_.trim($groups.eq(0).find("[role=title]").text()),"Open"),equals(_.trim($groups.eq(1).find("[role=title]").text()),"Closed"),$items=$groups.eq(0).find("[role=item]"),equals($items.length,2,"Correct items");var $firstGroup=$groups.eq(0),$firstRow=$items.eq(0);$groups.eq(1).find("[role=expander]").click(),$firstGroup.triggerHandler("sortstart",{item:$firstRow});var $availableGroups=$el.find(".tau-list__group_available_true[role=group]");equals($availableGroups.length,2,"All available groups"),this.service.registerSaveCommand({config:{id:41,$set:{beforeId:undefined,afterId:undefined},fields:["id"]},returnedData:{id:41}}),this.service.registerGetCommand({config:{id:41,fields:["id","numericPriority"]},returnedData:{id:41,numericPriority:123123}});var bug=entity.bugs[0];this.service.registerSaveCommand({config:{id:bug.id,$set:{entityState:{id:bug.entityState.nextStates[0].id}},fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:bug.id,entityState:bug.entityState.nextStates[0]}}),this.service.registerGetCommand({config:{id:bug.id,fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:bug.id,entityState:bug.entityState.nextStates[0]}}),$firstRow.appendTo($groups.eq(1).find("[role=list]")),$firstGroup.triggerHandler("sortupdate",{item:$firstRow}),$firstGroup.triggerHandler("sortstop"),this.service.verify()}},{name:"should allow use states dependant of process",preSetup:fnPreSetup,test:function(){var $el=this.$el,$groups=$el.find("[role=group]");equals($groups.length,2,"Correct groups"),equals(_.trim($groups.eq(0).find("[role=title]").text()),"Open"),equals(_.trim($groups.eq(1).find("[role=title]").text()),"Closed"),$items=$groups.eq(0).find("[role=item]"),equals($items.length,2,"Correct items");var $firstGroup=$groups.eq(0),$secondRow=$items.eq(1);$groups.eq(1).find("[role=expander]").click(),$firstGroup.triggerHandler("sortstart",{item:$secondRow}),$availableGroups=$el.find(".tau-list__group_available_true[role=group]"),equals($availableGroups.length,2,"All available groups"),this.service.registerSaveCommand({config:{id:665,$set:{beforeId:undefined,afterId:undefined},fields:["id"]},returnedData:{id:665}}),this.service.registerGetCommand({config:{id:665,fields:["id","numericPriority"]},returnedData:{id:665,numericPriority:154523123}});var bug=entity.bugs[1];this.service.registerSaveCommand({config:{id:bug.id,$set:{entityState:{id:bug.entityState.nextStates[0].id}},fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:bug.id,entityState:bug.entityState.nextStates[0]}}),this.service.registerGetCommand({config:{id:bug.id,fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:bug.id,entityState:bug.entityState.nextStates[0]}}),$secondRow.appendTo($groups.eq(1).find("[role=list]")),$firstGroup.triggerHandler("sortupdate",{item:$secondRow}),$firstGroup.triggerHandler("sortstop"),this.service.verify()}}],componentConfig={context:{applicationContext:appContext},type:"list",itemsDataProvider:ItemsDataProvider,groupsDataProvider:GroupsDataProvider,groupBy:"entityState.name",multiprojects:!0,views:[{type:"grid.entity",group:{dataIndex:"name"}}]};fnCtxProcessor(componentConfig.context);var setup=commonSetup.create("[component.list][user_story][tasks_bugs]",dataToRegister,listComponent,componentConfig);componentSpecs.create(setup,context).viewShouldFollowDataComponentLifeCycle(fnPreSetup).viewShouldPassTests(viewTests).done()};return{run:innerRun}})