define(["Underscore","tests/common/service.mock","tau/components/component.list","tests/common/datapoint/test.common.datapoint","tests/common/applicationContext","tests/components/common/common.setup","tests/components/component.specs","tests/common/checker","tau/models/dataProviders/model.provider.items.tasks_bugs","tau/models/dataProviders/model.provider.groups.tasks_bugs","tau/configurator","tau/models/dataprocessor/model.processor.context","tau/ui/templates/list_/grid.entity/ui.template.list.grid.entity"],function(_,a,b,c,d,e,f,g,h,i,j,k){var l=function(){var g=new d,l=c.projects(),m=c.entityStates(),n=[m[4],m[7],m[46],m[49]],o={open:{main:m[4],scrum:m[46]},closed:{main:m[7],scrum:m[49]}},p=c.bugs(),q=c.tasks(),r={id:15,__type:"userStory",tasks:[],bugs:_(p).filter(function(a){return a.id==41||a.id==665})},s=l[0],t=l[1],u=[s,t];l.process=o.open.main.process,r.bugs[0].entityState=o.open.main,r.bugs[0].entityState.nextStates=[o.closed.main],r.bugs[0].process=o.open.main.process,r.bugs[0].project=s,t.process=o.open.scrum.process,r.bugs[1].entityState=o.open.scrum,r.bugs[1].entityState.nextStates=[o.closed.scrum],r.bugs[1].process=o.open.scrum.process,r.bugs[1].project=t;var v=[o.open.main,o.closed.main,o.open.scrum,o.closed.scrum],w=[r].concat(v).concat(u),x={context:{type:"story",id:15}},y=function(){var b=this.service=new a;j.setService(b),j.getProxy().markRecordSetAsCompleteLoaded("project"),j.getProxy().markRecordSetAsCompleteLoaded("entityState"),j.getProxy().markRecordSetAsCompleteLoaded("priority"),j.getProxy().markRecordSetAsCompleteLoaded("severity"),j.getRouting().setStateParameter("list",null)},z=[{name:"should allow use states dependant of process",preSetup:y,test:function(){var a=this.$el,b=a.find("[role=group]");equals(b.length,2,"Correct groups"),equals(_.trim(b.eq(0).find("[role=title]").text()),"Open"),equals(_.trim(b.eq(1).find("[role=title]").text()),"Closed"),$items=b.eq(0).find("[role=item]"),equals($items.length,2,"Correct items");var c=b.eq(0),d=$items.eq(0);b.eq(1).find("[role=expander]").click(),c.triggerHandler("sortstart",{item:d});var e=a.find(".tau-list__group_available_true[role=group]");equals(e.length,2,"All available groups"),this.service.registerSaveCommand({config:{id:41,$set:{beforeId:undefined,afterId:undefined},fields:["id"]},returnedData:{id:41}}),this.service.registerGetCommand({config:{id:41,fields:["id","numericPriority"]},returnedData:{id:41,numericPriority:123123}});var f=r.bugs[0];this.service.registerSaveCommand({config:{id:f.id,$set:{entityState:{id:f.entityState.nextStates[0].id}},fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:f.id,entityState:f.entityState.nextStates[0]}}),this.service.registerGetCommand({config:{id:f.id,fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:f.id,entityState:f.entityState.nextStates[0]}}),d.appendTo(b.eq(1).find("[role=list]")),c.triggerHandler("sortupdate",{item:d}),c.triggerHandler("sortstop"),this.service.verify()}},{name:"should allow use states dependant of process",preSetup:y,test:function(){var a=this.$el,b=a.find("[role=group]");equals(b.length,2,"Correct groups"),equals(_.trim(b.eq(0).find("[role=title]").text()),"Open"),equals(_.trim(b.eq(1).find("[role=title]").text()),"Closed"),$items=b.eq(0).find("[role=item]"),equals($items.length,2,"Correct items");var c=b.eq(0),d=$items.eq(1);b.eq(1).find("[role=expander]").click(),c.triggerHandler("sortstart",{item:d}),$availableGroups=a.find(".tau-list__group_available_true[role=group]"),equals($availableGroups.length,2,"All available groups"),this.service.registerSaveCommand({config:{id:665,$set:{beforeId:undefined,afterId:undefined},fields:["id"]},returnedData:{id:665}}),this.service.registerGetCommand({config:{id:665,fields:["id","numericPriority"]},returnedData:{id:665,numericPriority:154523123}});var e=r.bugs[1];this.service.registerSaveCommand({config:{id:e.id,$set:{entityState:{id:e.entityState.nextStates[0].id}},fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:e.id,entityState:e.entityState.nextStates[0]}}),this.service.registerGetCommand({config:{id:e.id,fields:["id",{entityState:["id","name","isFinal"]}]},returnedData:{id:e.id,entityState:e.entityState.nextStates[0]}}),d.appendTo(b.eq(1).find("[role=list]")),c.triggerHandler("sortupdate",{item:d}),c.triggerHandler("sortstop"),this.service.verify()}}],A={context:{applicationContext:g},type:"list",itemsDataProvider:h,groupsDataProvider:i,groupBy:"entityState.name",multiprojects:!0,views:[{type:"grid.entity",group:{dataIndex:"name"}}]};k(A.context);var B=e.create("[component.list][user_story][tasks_bugs]",w,b,A);f.create(B,x).viewShouldFollowDataComponentLifeCycle(y).viewShouldPassTests(z).done()};return{run:l}})