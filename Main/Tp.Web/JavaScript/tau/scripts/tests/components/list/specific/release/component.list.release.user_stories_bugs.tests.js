define(["Underscore","tests/components/list/specific/component.list.spec.base","tau/models/dataProviders/release/release.model.provider.user_stories_bugs.items","tau/models/dataProviders/release/release.model.provider.user_stories_bugs.groups","tau/ui/templates/list_/grid.entity/ui.template.list.grid.entity"],function(_,Spec,ItemsProvider,GroupsProvider){var innerRun=function(){var tests=Spec.Testcase.create("[list.release.user_stories_bugs]",ItemsProvider,GroupsProvider,function(){var types={us:"UserStory",bug:"Bug"},processes={kanban:"Kanban",scrum:"Scrum"},priorities={p1:"Good"},severities={s1:"Good"},projects={p1:{name:"Project1",process:"kanban"},p2:{name:"Project2"}},states={us_open:{name:"Open",nextStates:["us_inprogress","us_done"],entityType:"us",process:"kanban",isInitial:!0},us_inprogress:{name:"In Progress",nextStates:["us_done"],entityType:"us",process:"kanban"},us_done:{name:"Done",nextStates:[],entityType:"us",process:"kanban",isFinal:!0},bug_open:{name:"Open",nextStates:["bug_coded"],entityType:"bug",process:"kanban",isInitial:!0},bug_coded:{name:"Coded",nextStates:["bug_done"],isCommentRequired:!0,entityType:"bug",process:"kanban"},bug_done:{name:"Fixed",nextStates:[],isCommentRequired:!0,entityType:"bug",process:"kanban",isFinal:!0}},releases={r1:{name:"Release",userStories:["us1","us2"],bugs:["bug1","bug2"]}},userStories={us1:{name:"US1",entityState:"us_open",priority:"p1",project:"p1"},us2:{name:"US2",entityState:"us_open",priority:"p1",project:"p1"}},bugs={bug1:{name:"Bug1",entityState:"bug_open",priority:"p1",severity:"s1",project:"p1"},bug2:{name:"Bug2",entityState:"bug_done",priority:"p1",severity:"s1",project:"p1"}};this.loadFixtures({entityType:types,projects:projects,entityStates:states,releases:releases,userStories:userStories,bugs:bugs,priority:priorities,severity:severities,processes:processes}),this.setProject(this.data.project.p1),this.setEntity(this.data.release.r1)});tests.add(new Spec.TestMarkup({groups:[{title:"Open",items:["US1","US2","Bug1"]},{title:"In Progress",items:[]},{title:"Coded",items:[]},{title:"Done, Fixed",items:["Bug2"]}]})),tests.add(new Spec.TestState);var test=new Spec.Test;tests.add(new Spec.Test({name:"dnd simple prioritize",test:function(){var $group=this.$el.find("[role=group]:first"),$item=$group.find("[role=item]:eq(0)"),$next=$group.find("[role=item]:eq(1)"),itemData=tests.data.userStory.us1,futureBefore=tests.data.userStory.us2,futureNext=tests.data.bug.bug1;test.registerPrioritize(itemData.id,{beforeId:futureNext.id,afterId:futureBefore.id}),test.startMove($item),test.moveAfter($item,$next),test.endMove()}})),tests.add(new Spec.Test({name:"dnd change state",test:function(){var $group=this.$el.find("[role=group]:first"),$targetGroup=this.$el.find("[role=group]:eq(1)"),$item=$group.find("[role=item]:eq(0)"),itemData=tests.data.userStory.us1,stateData=tests.data.entityState.us_inprogress;test.registerPrioritize(itemData.id,{beforeId:null,afterId:null}),test.registerChangeState(itemData,tests.data.entityState.us_inprogress),test.$el=this.$el,test.checkGroupsAvailability(4,0),test.startMove($item),test.checkGroupsAvailability(3,1),test.moveAfter($item,$targetGroup),test.endMove(),test.checkGroupsAvailability(4,0)}})),tests.add(new Spec.Test({name:"dnd change state when target group is shared between entities",test:function(){var $group=this.$el.find("[role=group]:first"),$targetGroup=this.$el.find("[role=group]:eq(3)");$targetGroup.find("[role=title]").click();var $item=$group.find("[role=item]:eq(0)"),itemData=tests.data.userStory.us1,stateData=tests.data.entityState.us_done,futureBeforeItemData=tests.data.bug.bug2;test.registerPrioritize(itemData.id,{beforeId:null,afterId:futureBeforeItemData.id}),test.registerChangeState(itemData,stateData),test.$el=this.$el,test.checkGroupsAvailability(4,0),test.startMove($item),test.checkGroupsAvailability(3,1),test.moveAfter($item,$targetGroup),test.endMove(),test.checkGroupsAvailability(4,0)}})),tests.add(new Spec.Test({name:"dnd change state use comment",test:function(){var commentText="fuck you",$group=this.$el.find("[role=group]:first"),$targetGroup=this.$el.find("[role=group]:eq(2)"),$item=$group.find("[role=item]:eq(2)"),itemData=tests.data.bug.bug1,stateData=tests.data.entityState.bug_coded;test.$el=this.$el,test.checkGroupsAvailability(4,0),test.startMove($item),test.checkGroupsAvailability(2,2),test.moveAfter($item,$targetGroup),test.checkBubble($item),test.cancelBubble($item),$group=this.$el.find("[role=group]:first"),$targetGroup=this.$el.find("[role=group]:eq(2)"),$item=$group.find("[role=item]:eq(2)"),test.registerComment(itemData,commentText),test.registerPrioritize(itemData.id,{beforeId:null,afterId:null}),test.registerChangeState(itemData,stateData),test.$el=this.$el,test.checkGroupsAvailability(4,0),test.startMove($item),test.checkGroupsAvailability(2,2),test.moveAfter($item,$targetGroup),test.checkBubble($item),test.submitBubble($item,commentText),test.endMove(),test.checkGroupsAvailability(4,0)}})),tests.run()};return{run:innerRun}})