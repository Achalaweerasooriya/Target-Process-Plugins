define(["Underscore","tests/components/list/specific/component.list.spec.base","tau/models/dataProviders/feature/feature.model.provider.user_stories.items","tau/models/dataProviders/feature/feature.model.provider.user_stories.groups","tau/ui/templates/list_/grid.entity/ui.template.list.grid.entity"],function(_,Spec,ItemsProvider,GroupsProvider){var innerRun=function(){var tests=Spec.Testcase.create("[list.feature.user_stories]",ItemsProvider,GroupsProvider,function(){var types={us:"UserStory"},processes={kanban:"Kanban",scrum:"Scrum"},priorities={p1:"Good"},severities={s1:"Good"},projects={p_kanban:{name:"Project Kanban",abbrevation:"PK",process:"kanban"},p_scrum:{name:"Project Scrum",abbrevation:"PS",process:"scrum"}},states={kanban_us_new:{name:"New",entityType:"us",process:"kanban",nextStates:["kanban_us_inprogress"],isInitial:!0},kanban_us_inprogress:{name:"In Progress",entityType:"us",nextStates:["kanban_us_done"],process:"kanban"},kanban_us_done:{name:"Done",entityType:"us",process:"kanban",isFinal:!0},scrum_us_open:{name:"Open",entityType:"us",process:"scrum",nextStates:["scrum_us_planned"],isInitial:!0},scrum_us_planned:{name:"Planned",entityType:"us",nextStates:["scrum_us_indevelopment","scrum_us_closed"],process:"scrum"},scrum_us_indevelopment:{name:"In Development",entityType:"us",nextStates:["scrum_us_intesting"],isCommentRequired:!0,process:"scrum"},scrum_us_intesting:{name:"In Testing",entityType:"us",nextStates:["scrum_us_closed"],process:"scrum"},scrum_us_closed:{name:"Closed",entityType:"us",process:"scrum",isFinal:!0}},features={f1:{name:"Feature",userStories:["us1","us2"],project:"p_kanban",process:"kanban"}},userStories={us1:{name:"US1",entityState:"kanban_us_inprogress",priority:"p1",project:"p_kanban"},us2:{name:"US2",entityState:"scrum_us_planned",priority:"p1",project:"p_scrum"}};this.loadFixtures({entityType:types,projects:projects,entityStates:states,userStories:userStories,priority:priorities,severity:severities,processes:processes,features:features}),this.setProject(this.data.project.p_kanban),this.setEntity(this.data.feature.f1)});tests.add(new Spec.TestMarkup({groups:[{title:"New, Open",items:[]},{title:"In Progress",items:["US1"]},{title:"Planned",items:["US2"]},{title:"In Development",items:[]},{title:"In Testing",items:[]},{title:"Done, Closed",items:[]}]}));var test=new Spec.Test;tests.add(new Spec.Test({name:"dnd available states using process",test:function(){var $group=this.$el.find("[role=group]:eq(2)"),$targetGroup=this.$el.find("[role=group]:eq(5)");$targetGroup.find("[role=title]").click();var $item=$group.find("[role=item]:eq(0)"),itemData=tests.data.userStory.us2,stateData=tests.data.entityState.scrum_us_closed;test.registerPrioritize(itemData.id,{beforeId:null,afterId:null}),test.registerChangeState(itemData,stateData),test.$el=this.$el,test.checkGroupsAvailability(6,0),test.startMove($item),test.checkGroupsAvailability(3,3);var $groups=this.$el.find("[role=group]");ok($groups.eq(3).hasClass("tau-list__group_available_true"),"In Dev available"),ok($groups.eq(5).hasClass("tau-list__group_available_true"),"Done available"),test.moveAfter($item,$targetGroup),test.endMove(),test.checkGroupsAvailability(6,0)}})),tests.add(new Spec.Test({name:"dnd change state use comment",test:function(){var commentText="fuck you",$group=this.$el.find("[role=group]:eq(2)"),$targetGroup=this.$el.find("[role=group]:eq(3)"),$item=$group.find("[role=item]:eq(0)"),itemData=tests.data.userStory.us2,stateData=tests.data.entityState.scrum_us_indevelopment;test.$el=this.$el,test.checkGroupsAvailability(6,0),test.startMove($item),test.checkGroupsAvailability(3,3),test.moveAfter($item,$targetGroup),test.checkBubble($item),test.cancelBubble($item),$group=this.$el.find("[role=group]:eq(2)"),$targetGroup=this.$el.find("[role=group]:eq(3)"),$item=$group.find("[role=item]:eq(0)"),test.registerComment(itemData,commentText),test.registerPrioritize(itemData.id,{beforeId:null,afterId:null}),test.registerChangeState(itemData,stateData),test.$el=this.$el,test.checkGroupsAvailability(6,0),test.startMove($item),test.checkGroupsAvailability(3,3),test.moveAfter($item,$targetGroup),test.checkBubble($item),test.submitBubble($item,commentText),test.endMove(),test.checkGroupsAvailability(6,0)}})),tests.run()};return{run:innerRun}})