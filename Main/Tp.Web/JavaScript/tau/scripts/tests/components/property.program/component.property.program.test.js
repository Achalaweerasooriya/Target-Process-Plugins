define(["jQuery","tests/common/testkit","tau/configurator","tau/components/component.property.program"],function($,ComponentTestKit,configurator,Component){var run=function(){var TestCase=new ComponentTestKit("[component.property.program]",Component),projects={p1:{name:"Preved",program:"pr1"}},programs={pr1:"Do It",pr2:"Go Fuck yourself",pr3:"Innah"},data=TestCase.loadFixtures({projects:projects,programs:programs});return TestCase.setData(data),TestCase.setEntity(data.project.p1),TestCase.selectDefaultProject(),TestCase.addTest({name:"should render valid markup",test:function(){var $el=this.$el;equal($el.find(".tau-property__value").text(),"Do It"),equal($el.find("a").length,0,"No URL")}}),TestCase.addTest({name:"should allow to edit",test:function(){var $el=this.$el,$trigger=$el.find(".tau-property__value");$trigger.click();var $list=$(".tau-bubble");equal($list.size(),1,"Count of bubbles");var $options=$list.find(".drop-down-option");equals($options.length,2,"Options"),TestCase.getService().registerSaveCommand({config:{$set:{program:{id:data.program.pr2.id}},fields:["id"],id:data.project.p1.id},returnedData:{id:data.project.p1.id,program:{id:data.program.pr2.id}}}),$options.eq(0).click(),TestCase.getService().verify()}}),TestCase.run()};return{run:run}})