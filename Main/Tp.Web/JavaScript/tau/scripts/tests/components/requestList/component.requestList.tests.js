define(["tau/core/tau","tau/components/component.requestList","tests/common/testData","tests/components/common/common.setup","tests/components/component.specs","tests/common/testData.Generator"],function(a,b,c,d,e,f){var g=function(){function l(a){return Similar.to({name:"get",type:"request",config:Similar.to({id:a,fields:["id","name",Similar.to({entityState:["id","name"]})]})})}function o(a,b){var c=a.find(".ui-type-icon.ui-type-icon-request");ok(c.length,"Type is valid"),equal(c.text(),b.id.toString(),"Id is valid");var d=c.parent("a");equal(d.attr("href"),"#request/"+b.id,"url is valid"),equal(a.find(".name").text(),b.name,"Name is valid"),equal(a.find(".state").text(),b.state.name,"Name is valid")}var a=c.getTestDataForRequestList(),g=[Similar.to({name:"get",type:"userStory",config:Like.is({id:15,fields:["id",Like.is({requests:["id"],list:!0})]})})],h=a[0].requests,i=h.length,j=[];for(var k=0;k<i;k++)j.push(l(h[k].id));var m={context:{type:"story",id:15}},n={items:[{__type:"request",id:55,name:"The complex logic should be added",state:{name:"Closed"}},{__type:"request",id:71,name:"The iteractions quality is not good enough",state:{name:"Closed"}},{__type:"request",id:100,name:"The galaxy points are not displayed correctly",state:{name:"Closed"}},{__type:"request",id:107,name:"I can not see green stars",state:{name:"Closed"}},{__type:"request",id:182,name:"Non-linear Stars Evolution",state:{name:"Closed"}}]},p=[{name:"should render valid markup",test:function(){var a=this.$el,b=a.find("table.base-info-list tbody > tr"),c=this.data.items,d=c.length;equals(b.length,d,"Count of rows is valid");var e=Math.min(b.length,d);for(var f=0;f<e;f++)o(b.eq(f),c[f])}}],q=new f;q.initDefaultData();var r=q.getProjects(),m={manualContext:!0,context:{entity:{entityType:{name:"story"},id:15},applicationContext:{selectedProjects:[r[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:q.getProcesses()}}},s=d.create("[component.requestList]",a,b,m);e.create(s,m).viewShouldFollowDataComponentLifeCycle().modelShouldReturnData(n,[g,j]).viewShouldPassTests(p).viewShouldContainEmptyMessage("No requests found").done()};return{run:g}})