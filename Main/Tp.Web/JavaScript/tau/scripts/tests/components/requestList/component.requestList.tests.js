define(["jQuery","tau/configurator","tau/components/component.requestList","tests/common/testData","tests/components/common/common.setup","tests/components/component.specs","tests/common/testData.Generator"],function($,a,b,c,d,e,f){var g=function(){function m(a){return Similar.to({name:"get",type:"request",config:Similar.to({id:a,fields:["id","name",Similar.to({entityState:["id","name"]})]})})}function p(a,b){var c=a.find(".tau-linkentity_type_icon");ok(c.length,"Type is valid"),equals(c.text(),b.id.toString(),"Id is valid");var d=c;equals(d.attr("href"),"#request/"+b.id,"url is valid"),equals(a.find(".name").text(),b.name,"Name is valid"),equals(a.find(".state").text(),b.state.name,"State is valid");var e=a.find(".action .action-detach");ok(e.hasClass("button"),"Detach action is button"),equals(e.text(),"Detach","Detach link is presented")}var g=c.getTestDataForRequestList(),h=[Similar.to({name:"get",type:"userStory",config:Like.is({id:15,fields:["id",Like.is({requests:["id"],list:!0})]})})],i=g[0].requests,j=i.length,k=[];for(var l=0;l<j;l++)k.push(m(i[l].id));var n={context:{type:"story",id:15}},o={items:[{__type:"request",id:55,name:"The complex logic should be added",state:{name:"Closed"}},{__type:"request",id:71,name:"The iteractions quality is not good enough",state:{name:"Closed"}},{__type:"request",id:100,name:"The galaxy points are not displayed correctly",state:{name:"Closed"}},{__type:"request",id:107,name:"I can not see green stars",state:{name:"Closed"}},{__type:"request",id:182,name:"Non-linear Stars Evolution",state:{name:"Closed"}}]},q=[{name:"should render valid markup",test:function(){var a=this.$el,b=a.find("table.base-info-list tbody > tr"),c=this.data.items,d=c.length;equals(b.length,d,"Count of rows is valid");var e=Math.min(b.length,d);for(var f=0;f<e;f++)p(b.eq(f),c[f])}},{name:"should detach request from entity",preSetup:function(){this.actionsServiceMock=this.mockControl.createMock({detachRequest:$.noop}),a.setActionsService(this.actionsServiceMock)},test:function(){var a=this.$el,b=a.find("table.base-info-list tbody > tr").eq(0),c=b.find(".tau-linkentity:eq(0)"),d=c.text();this.actionsServiceMock.expects().detachRequest(Like.is({generalId:15,requestId:d,success:TypeOf.isA(Function)})).andStub(function(a){a.success()});var e=0;this.component.on("requestIsDetachedFromEntity",function(a){a.removeListener(),++e}),b.find(".action-detach").click(),equals(e,1,"Amount of requests"),this.mockControl.verify()}}],r=new f;r.initDefaultData();var s=r.getProjects(),n={manualContext:!0,context:{entity:{entityType:{name:"story"},id:15},applicationContext:{selectedProjects:[s[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:r.getProcesses()}}},t=d.create("[component.requestList]",g,b,n);e.create(t,n).viewShouldFollowDataComponentLifeCycle().modelShouldReturnData(o,[h,k]).viewShouldPassTests(q).viewShouldContainEmptyMessage("No requests found").done()};return{run:g}})