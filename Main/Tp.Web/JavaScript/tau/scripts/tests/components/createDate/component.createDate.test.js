define(["jQuery","tau/components/component.property.createDate","tests/components/component.specs","tests/common/testData.Generator","tests/common/service.mock","tau/configurator","tests/components/common/common.setup"],function($,ComponentCreateDate,componentSpecs,TestDataGenerator,ServiceMock,configurator,commonSetup){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),projects=testDataGenerator.getProjects(),bugData=testDataGenerator.getBugs()[0],priorities=testDataGenerator.getPriorities(),context={manualContext:!0,context:{entity:{entityType:{name:bugData.__type},id:bugData.id},applicationContext:{selectedProjects:[projects[0]],culture:{name:"en-US",timePattern:"g:i A",shortDateFormat:"M/d/yyyy",longDateFormat:"dddd, MMMM dd, yyyy",decimalSeparator:".",__type:"culture"},processes:testDataGenerator.getProcesses()}}},setup=commonSetup.create("[component.createDate]",data,ComponentCreateDate,context),viewTests=[{name:"should render valid markup",test:function(){var $el=this.$el;equal($el.find(".property-text").text(),"17-Oct-2011","Create name"),equal($el.find(".external-view").size(),0,"Url is not added")}}];componentSpecs.create(setup,context).viewShouldFollowBasicComponentLifeCycle().viewShouldPassTests(viewTests).done()};return{run:innerRun}})