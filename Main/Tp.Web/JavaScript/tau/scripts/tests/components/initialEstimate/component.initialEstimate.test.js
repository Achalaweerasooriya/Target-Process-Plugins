define(["jQuery","tau/configurator","tests/common/testCase","tests/common/componentConfigCreator","tau/components/component.property.initialEstimate","tests/common/testData.Generator"],function($,configurator,TestCase,ComponentConfigCreator,ComponentInitialEstimate,TestDataGenerator){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),featureData=testDataGenerator.getFeatures()[0],configCreator=new ComponentConfigCreator;configCreator.setEntityIDAndType(featureData.id,featureData.__type),configCreator.setSelectedProjects([data.selectByType("project")[0]]);var process=data.selectByType("process");configCreator.setProcesses(process);var config=configCreator.getConfig(),testCase=new TestCase("[component.initialEstimate]");testCase.initModule({componentConfig:config,data:data},ComponentInitialEstimate),testCase.test("should render valid markup",function(){var $el=this.element;equal($.trim($el.find(".property-text").text()),"5.61h","Initial date is valid"),equal($el.find(".property-text .point").text(),"h","Point is valid")}),testCase.test("should change initial estimate",function(){this.serviceMock.registerSaveCommand({config:{$set:{initialEstimate:99},fields:["id"],id:featureData.id},returnedData:{id:featureData.id,effortToDo:99}});var $el=this.element,$developerRoleEffort=$el.find(".property-text").eq(0);$developerRoleEffort.click(),$developerRoleEffort.text(99),$developerRoleEffort.blur(),equal(this.element.find(".property-text").eq(0).text(),"99h")})};return{run:innerRun}})