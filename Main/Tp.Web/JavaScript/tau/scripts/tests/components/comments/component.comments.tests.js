define(["Underscore","jQuery","tests/common/service.mock","tau/core/class","tau/configurator","tau/components/component.comments","tests/common/testData","tests/components/common/common.setup","tests/components/component.specs","tau/components/component.commentList","tau/components/component.comment","tau/components/component.comment.new.editor"],function(_,$,a,b,c,d,e,f,g){var h=function(){function b(){var a=e.getDataForComments(),b=[];for(var c=0;c<a.length;c++)b.push($.extend(!0,{},a[c]));return b}function l(a){var b=a.find("> .ui-comment-body > .ui-comment-heading > .ui-comment-menu > .delete");return b}function m(a){var b=a.find("> .ui-comment-body > .ui-comment-heading > .ui-comment-menu > .edit");return b}function n(a){var b=a.find("> .ui-comment-body > .ui-comment-heading > .ui-comment-menu > .reply");return b}function o(a){n(a).click();var b=a.find("> .ui-comment-body > .ui-comment-reply > .ui-richeditor");return equals(b.size(),1,"Editor for reply is presented"),b}function p(a,b){b.isRequester?ok(a.find(">.ui-comment-body").hasClass("tau-comments-requester"),"Marked as comment from requestor"):ok(!a.find(">.ui-comment-body").hasClass("tau-comments-requester"),"Not marked as comment from requestor"),equals(a.find(">.ui-comment-body >.ui-comment-heading > .ui-comment-name").text(),b.name,"Name is valid"),equals(a.find(">.ui-comment-body >.ui-comment-heading > .ui-comment-ago").text(),"("+b.age+")","Age is valid");var c=a.find(">.ui-comment-body >.ui-comment-text").html().toLowerCase(),d=$("<p>"+b.description+"</p>").html().toLowerCase();equals(c,d,"Description is valid"),b.isOwnerComment&&ok(a.find(">.ui-comment-body").is(".ui-commets-comment-owner"),"Owner comment is valid")}function q(a){var b=a.find(".ui-comments-add-link");equals(b.size(),1,"Add comment link is added"),ok(b.css("display")!=="none","Link is visible"),b.click(),ok(b.css("display")==="none","Link is hidden");var c=b.next().find(".ui-richeditor");return c}function r(a){var b=a.find(".ui-comments-add-link");equals(b.size(),1,"Add comment link is added"),ok(b.css("display")!=="none","Link is visible"),b.click(),ok(b.css("display")==="none","Link is hidden");var c=b.next().find(".ui-richeditor");equals(c.size(),1,"Rich editor is introduced"),c.find(".ui-richeditor__controls__cancel").click(),ok(b.css("display")!=="none","Link is visible again"),c=b.next().find(".ui-richeditor"),equals(c.size(),0,"Rich editor is removed")}function s(a){return a.find(">.ui-comment-body >.ui-richeditor")}function t(a){return a.find(".ui-richeditor__controls__save")}function u(a){return a.find(".ui-richeditor__controls__cancel")}function v(a){var b=a.find("> .ui-comment-body > .ui-comment-heading > .ui-comment-menu > .delete");b.click();var c=a.find(".ui-comment-body .confirmation");equals(c.size(),1,"Confirmation is displayed"),c.find(".cancel").click(),c=a.find(".ui-comment-body .confirmation"),equals(c.size(),0,"Confirmation is removed"),b.click(),c=a.find(".ui-comment-body .confirmation"),equals(c.size(),1,"Confirmation is displayed"),c.find(".ok").click()}function w(b){return function(d){var e=this.service=new a;c.setService(e);var f=b.length;for(var g=0;g<f;g++){var h=b[g],i=h.command,j=h.setup||function(){},k=h.stub||function(){};k._test=this,j.call(this,i,h)}}}function x(a){return{command:a,setup:function(a){a._test=this,this.service.registerGetCommand(a)}}}function y(a){return{command:a,setup:function(a){a._test=this,this.service.registerSaveCommand(a)}}}function z(a){return{command:a,setup:function(a){a._test=this,this.service.registerRemoveCommand(a)}}}function A(a,b){b=b||"<p>Updated text</p>",a=a||_.clone(i[0].comments[3]);var c=a.id;return w([y({config:{id:c,$set:{description:b,general:{id:152}},fields:B},returnedData:_.extend(a,{description:b}),preCheck:"isMarkedAsUpdating"})])}var h=b(),i=b(),j=c.getCurrentDate(),k={items:[{id:450,parentId:null,avatar:"/TP/Avatar.ashx?UserId=13&size=32",name:"",description:"First Comment",age:"1 month ago",comments:[{id:451,parentId:450,avatar:"/TP/Avatar.ashx?UserId=256&size=32",name:"Andrew G.",description:"First reply to First Comment <img src='/TP/#Attachment.aspx?AttachmentID=12'/>",age:"2 hours ago",comments:[],deleted:!1,isRequester:!1},{id:452,parentId:450,avatar:"/TP/Avatar.ashx?UserId=254&size=32",name:"John B.",description:"Second reply to First Comment",age:"25 min ago",comments:[],deleted:!1,isRequester:!1}],deleted:!1,isRequester:!0},{id:453,parentId:null,avatar:"/TP/Avatar.ashx?UserId=255&size=32",name:"Tod B.",description:"Second comment",age:"23 days ago",comments:[{id:454,parentId:453,avatar:"/TP/Avatar.ashx?UserId=257&size=32",name:"Sandra R.",description:"Reply to second comment",age:"25 sec ago",comments:[],deleted:!1,isRequester:!1}],deleted:!1,isRequester:!1}]},B=["id","description","createDate","parentId",{owner:["id","firstName","lastName","kind"]}],C=[{name:"should render valid markup",test:function(){var a=this.$el,b=a.find(".ui-all-comments > .ui-comment");equals(b.length,2,"Count of root comments is valid");var c=this.data.items;p(b.eq(0),c[0]);var d=b.eq(0).find(".ui-comments > .ui-comment");equals(d.length,2,"Count of replay on first comment is valid"),p(d.eq(0),c[0].comments[0]),p(d.eq(1),c[0].comments[1]);var e=b.eq(1).find(".ui-comments > .ui-comment");equals(e.length,1,"Count of replay on second comment is valid"),p(e.eq(0),c[1].comments[0]),r(a)}},{name:"should apply editable and deletable permissions",test:function(){var a=this.$el,b=a.find(".ui-all-comments .ui-comment");equals(b.length,5,"Count of comments");for(var c=0,d=b.length-1;c<d;c++){var e=b.eq(c).find("> .ui-comment-body"),f=e.find(".ui-comment-heading > .ui-comment-menu ");ok(e.hasClass("editable"),"Marked as editable"),ok(e.hasClass("deletable"),"Marked as deletable"),equals(f.find(".reply").length,1,"Reply button is added"),equals(f.find(".edit").length,1,"Edit button is added"),equals(f.find(".delete").length,1,"Delete button is added");var g=e.find(".ui-comment-reply > .ui-editor-placeholder");equals(g.size(),1,"Place holder for reply is presented"),equals(g.css("display"),"none","Reply placeholder display")}r(a)}},{name:"should save comment (success)",preSetup:A(),test:function(){var a=this.$el,b=a.find(".ui-comment").eq(4),c=b.find(".ui-comment-menu .edit");this.isMarkedAsUpdating=function(a){ok(b.hasClass("updating"),"Marked as updating")},c.click();var d=s(b);equals(d.size(),1,"Editor is presented");var e="<p>Updated text</p>";d.find("textarea").val(e),t(d).click(),b=this.$el.find(".ui-comment").eq(4);var f=b.find("> .ui-comment-body > .ui-comment-text");equals(f.html().toLowerCase(),e.toLowerCase(),"Comment text is updated"),ok(!b.children(".ui-comment-body").hasClass("updating"),"Not marked as updating"),equals(s(b).length,0,"Count of editors"),ok(!$.contains(f[0],d[0]),"Editor is removed"),c=b.find(".ui-comment-menu .edit"),c.click(),d=s(b),equals(d.find("textarea").val().toLowerCase(),e.toLowerCase(),"Template data is up to date")}},{name:"should reply to comment",preSetup:w([y({config:{$set:{description:"<p>Updated text</p>",parentId:454,general:{id:152}},fields:B},returnedData:{id:64,description:"<p>Updated text</p>",createDate:j,parentId:454,owner:{id:23,firstName:"Administrator",lastName:"Administrator",kind:"user"}},preCheck:"isMarkedAsUpdating"})]),test:function(){var a=this.$el;c.setCurrentDate(j);var b=a.find(".ui-comment").eq(4),d=o(b);this.isMarkedAsUpdating=function(a){var c=b.find("> .ui-comments").children().last();ok(c.hasClass("updating"),"Marked as updating");var d=c.find("> .ui-comment-heading");equals(d.find("> .ui-comment-menu > .edit").size(),0,"Edit button"),equals(d.find("> .ui-comment-menu > .delete").size(),0,"Delete button")};var e="<p>Updated text</p>";d.find("textarea").val(e);var f=t(d);equals(f.text(),"Add Reply","Text of reply button"),f.click();var g=this.$el.find(".ui-comment").eq(5),h=g.find("> .ui-comment-body"),i=h.find("> .ui-comment-heading"),k=i.find("> .ui-comment-ago");equals(k.text(),"(Just added)","Creation date label"),equals(i.find("> .ui-comment-menu > .edit").size(),1,"Edit button"),equals(i.find("> .ui-comment-menu > .delete").size(),1,"Delete button");var l=h.find("> .ui-comment-text");equals(l.html().toLowerCase(),e.toLowerCase(),"Comment text is updated"),equals(s(g).size(),0,"Count of editors"),ok(!$.contains(g[0],d[0]),"Editor is removed")}},{name:"should cancel draft reply to comment",test:function(){var a=this.$el,b=a.find(".ui-comment").eq(4),c=o(b),d=u(c);d.click(),ok(c.css("display")==="none","Editor is hidden")}},{name:"should has one editor instance opened for edit/reply/add comments",test:function(){var a=this.$el,b=a.find(".ui-comment").eq(4);ok(!0,"--------- Click reply ---------"),n(b).click();var c=b.find("> .ui-comment-body > .ui-comment-reply > .ui-richeditor");equals(c.size(),1,"Editor for reply is presented"),ok(c.css("display")!=="none","Reply Editor is visible"),ok(!0,"--------- Click edit ---------"),m(b).click(),ok(c.css("display")==="none","Reply Editor is hidden");var d=b.find("> .ui-comment-body > .ui-richeditor");equals(d.size(),1,"Edit Editor is presented"),ok(d.css("display")!=="none","Edit Editor is visible"),ok(!0,"--------- Click add comment link ---------"),r(a),ok(d.css("display")==="none","Edit Editor is hidden")}},{name:"should support delete operation (comments tree leaf)",preSetup:w([z({config:{id:454,fields:["id"]},preCheck:"isMarkedAsDeleting"})]),test:function(){var a=this.$el,b=a.find(".ui-comment").eq(4);this.isMarkedAsDeleting=function(a){ok(b.hasClass("deleting"),"Marked as deleting")},equals(a.find(".ui-comment").size(),5,"Amount of comments before delete"),v(b),equals(this.$el.find(".ui-comment").size(),4,"Amount of comments after delete")}},{name:"should support delete operation (parent comment)",preSetup:A(i[0].comments[0],"DELETED"),test:function(){var a=this.$el,b=a.find(".ui-comment").eq(0);this.isMarkedAsUpdating=function(a){ok(b.hasClass("updating"),"Marked as updating")},v(b),b=this.$el.find(".ui-comment").eq(0),equals(b.find(".ui-comment-body").html().trim(),"DELETED","Text is changed")}},{name:"should add new comment",preSetup:w([y({config:{$set:{description:"Just added comment",general:{id:h[0].id}},fields:B},returnedData:_(_.clone(i[0].comments[1])).extend({id:10,description:"Just added comment",createDate:j}),preCheck:"isMarkedAsUpdating"})]),test:function(){var a=this.$el;c.setCurrentDate(j);var b=_.clone(i[0].comments[1]);_(b).extend({id:10,description:"Just added comment",createDate:c.getCurrentDate()}),this.isMarkedAsUpdating=function(b){ok(a.find(".ui-all-comments").children().last().hasClass("updating"),"Marked as updating")};var d=q(a),e=a.find(".ui-comment").size();equals(e,5,"Original amount of comments");var f=d.find("textarea");f.val("Just added comment");var g=t(d);g.click();var h=this.$el.find(".ui-comment").size();equals(h,6,"New amount of comments");var k=this.$el.find(".ui-comment").last();p(k,{name:"Tod B.",description:b.description,age:"Just added"}),r(this.$el)}},{name:"should mark comment as DELETED after new child comment adding",preSetup:w([y({config:{$set:{description:"Just added comment",parentId:454,general:{id:h[0].id}},fields:B},returnedData:_(_.clone(i[0].comments[3])).extend({id:100,description:"Just added comment",createDate:c.getCurrentDate(),parentId:454})}),y({config:{$set:{description:"DELETED",general:{id:152}},fields:B,id:454},returnedData:_(_.clone(i[0].comments[3])).extend({description:"DELETED"})})]),test:function(){var a=this.$el,b=a.find(".ui-comment").size();equals(b,5,"Amount before");var c=a.find(".comment-id-454");equals(c.find(".ui-comment-text").eq(0).text().trim(),"Reply to second comment","Original comment text");var d=o(c);d.find("textarea").val("Just added comment"),t(d).click(),equals(this.$el.find(".ui-comment").size(),6,"Amount after reply"),c=this.$el.find(".comment-id-454"),equals(c.find(".ui-comment-text").eq(0).text().trim(),"Reply to second comment","Original comment text"),v(c);var e=this.$el.find(".ui-comment").size();equals(e,6,"Amount after delete"),c=this.$el.find(".comment-id-454"),equals(c.find(".ui-comment-body").html().trim(),"DELETED","Text is changed")}},{name:"should delete empty comments branch when the last comment is being deleted",preSetup:w([y({config:{$set:{parentId:454,description:"Just added comment",general:{id:h[0].id}},fields:B},returnedData:_(_.clone(i[0].comments[3])).extend({id:100,description:"Just added comment",createDate:c.getCurrentDate(),parentId:454})}),y({config:{$set:{description:"DELETED",general:{id:152}},fields:B,id:454},returnedData:_(_.clone(i[0].comments[3])).extend({description:"DELETED"})}),z({config:{id:100,fields:["id"]}}),z({config:{id:454,fields:["id"]}})]),test:function(){var a=this.$el.find(".ui-comment").size();equals(a,5,"Amount before");var b=this.$el.find(".comment-id-454");equals(b.find(".ui-comment-text").eq(0).text().trim(),"Reply to second comment","Original comment text");var c=o(b);c.find("textarea").val("Just added comment"),t(c).click(),equals(this.$el.find(".ui-comment").size(),6,"Amount after reply"),b=this.$el.find(".comment-id-454"),equals(b.find(".ui-comment-text").eq(0).text().trim(),"Reply to second comment","Original comment text"),v(b);var d=this.$el.find(".ui-comment").size();equals(d,6,"Amount after delete"),b=this.$el.find(".comment-id-454"),equals(b.find(".ui-comment-body").html().trim(),"DELETED","Text is changed");var e=this.$el.find(".comment-id-100");v(e),a=this.$el.find(".ui-comment").size(),equals(a,4,"Amount after removing comments branch")}},{name:"should apply ID:XXX replacement rule",preSetup:w([y({config:{$set:{description:"ID:111 as well as the text id:123 should be replaced with link. And also <b>this</b>Id:777 and this Id:    777 and id:&nbsp; 111",general:{id:h[0].id}},fields:B},returnedData:_(_.clone(i[0].comments[1])).extend({id:10,description:"ID:111 as well as the text id:123 should be replaced with link. And also <b>this</b>Id:777 and this Id:    777 and id:&nbsp; 111",createDate:c.getCurrentDate()}),preCheck:"isMarkedAsUpdating"}),x({config:{id:"111",fields:["id","name",{entityType:["id","name"]}],silent:!0},returnedData:{id:111,name:"Entity 111",entityType:{id:1,name:"task"}}}),x({config:{id:"123",fields:["id","name",{entityType:["id","name"]}],silent:!0},returnedData:{id:123,name:"Entity 123",entityType:{id:1,name:"task"}}}),x({config:{id:"777",fields:["id","name",{entityType:["id","name"]}],silent:!0},returnedData:{id:777,name:"Entity 777",entityType:{id:1,name:"task"}}})]),test:function(){var a=this,b=this.$el;this.isMarkedAsUpdating=function(a){ok(b.find(".ui-all-comments").children().last().hasClass("updating"),"Marked as updating")};var c=q(b),d=b.find(".ui-comment").size();equals(d,5,"Original amount of comments");var e=c.find("textarea");e.val("ID:111 as well as the text id:123 should be replaced with link. And also <b>this</b>Id:777 and this Id:    777 and id:&nbsp; 111");var f=t(c);f.click();var g=this.$el.find(".comment-id-10"),h=g.find(".ui-comment-text a");equals(h.eq(0).html(),"#111&nbsp;Entity 111","Entity 111"),equals(h.eq(1).html(),"#123&nbsp;Entity 123","Entity 123"),equals(h.eq(2).html(),"#777&nbsp;Entity 777","Entity 777"),equals(h.eq(3).html(),"#777&nbsp;Entity 777","Entity 777"),equals(h.eq(4).html(),"#111&nbsp;Entity 111","Entity 111"),m(g).click();var i=g.find("textarea").val();equals(i,"ID:111 as well as the text id:123 should be replaced with link. And also <b>this</b>Id:777 and this Id:    777 and id:&nbsp; 111","Original text (without links) is restored for edit"),g.find(".ui-richeditor__controls__cancel").click(),h=g.find(".ui-comment-text a"),equals(h.length,5,"Entity links as are")}}],D=f.create("[component.comments]",b,d);g.create(D,{context:{type:"bug",id:h[0].id}}).viewShouldFollowDataComponentLifeCycle().viewShouldPassTests(C).done()};return{run:h}})