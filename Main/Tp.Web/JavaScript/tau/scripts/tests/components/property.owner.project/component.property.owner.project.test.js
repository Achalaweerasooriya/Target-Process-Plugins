define(["jQuery","tests/common/testkit","tau/components/component.property.owner.project"],function($,ComponentTestKit,Component){var run=function(){var TestCase=new ComponentTestKit("[component.property.owner.project]",Component),projects={p1:{name:"Project",owner:"gu1"}},generalUsers={gu1:{id:777,firstName:"Ron",lastName:"Jeremy",role:"admin"}},users={u1:{id:777,firstName:"Ron",lastName:"Jeremy",role:"admin",isActive:!0},u2:{firstName:"Sasha",lastName:"Grey",role:"developer",isActive:!0,deleteDate:"12-Dec-2012"},u3:{firstName:"Max",lastName:"Hardcore",role:"developer",isActive:!0},u4:{firstName:"Bree",lastName:"Olson",role:"qa",isActive:!0},u5:{firstName:"Jenna",lastName:"Jameson",role:"developer",isActive:!0}},roles={admin:"Admin",developer:"Developer",qa:"QA"},data=TestCase.loadFixtures({generalUsers:generalUsers,users:users,projects:projects,roles:roles});return TestCase.setData(data),TestCase.setEntity(data.project.p1),TestCase.selectProject(data.project.p1),TestCase.loginAs(data.user.u2),TestCase.addTest({name:"should render valid markup",test:function(){var $el=this.$el;equal($el.find(".owner-avatar-container .owner-avatar").length,1,"Avatar src"),equal($el.find(".owner-info .user-name").text(),"Ron Jeremy","User name")}}),TestCase.addTest({name:"should change owner",test:function(){var $el=this.$el,$trigger=$el.find(".owner-info .user-name");$trigger.click();var bubbleList=$(".tau-bubble");equal(bubbleList.size(),1,"Count of bubbles");var $option=bubbleList.eq(0).find('.user-name:contains("Sasha Grey")');equals($option.length,0,"Not Has option");var $option=bubbleList.eq(0).find('.user-name:contains("Bree Olson")');equals($option.length,1,"Has option");var newOwner=data.user.u4,entity=data.project.p1;TestCase.getService().registerSaveCommand({config:{$set:{owner:{id:newOwner.id}},fields:["id",{owner:["id","firstName","lastName","email"]}],id:entity.id},returnedData:{id:entity.id,owner:newOwner}}),$option.click(),equal(this.$el.find(".owner-info .user-name").text(),"Bree Olson","Owner was changed"),TestCase.getService().verify()}}),TestCase.run()};return{run:run}})