define(["tau/configurator","tests/common/service.mock","tau/components/component.lookswitcher","tests/components/common/common.setup","tests/components/component.specs","tests/common/applicationContext","tests/common/testData.Generator","tau/components/component.impedimentListPanel","tau/components/component.impedimentList","tau/components/component.label.impedimentsCount"],function(configurator,ServiceMock,component,commonSetup,componentSpecs,AppContext,TestDataGenerator){var innerRun=function(){var testDataGenerator=new TestDataGenerator;testDataGenerator.initDefaultData();var data=testDataGenerator.getData(),story=data.selectByType("userStory")[3];configurator.setGlobalSettingsService({getGlobalSettings:function(callbackInfo){callbackInfo.success.call(callbackInfo.scope,{IsEmailNotificationsEnabled:!1,loveNewLook:!0})}});var config={manualContext:!0,context:{entityType:{name:story.__type},id:story.id}},appContext=new AppContext(config.context);data.push(appContext),appContext.processes[0].customFields=[];var setup=commonSetup.create("[component.lookswitcher]",data,component,{}),fnPreSetup=function(){var service=this.service=new ServiceMock;configurator.setService(service)},viewTests=[{name:"element should be rendered to provided element",preSetup:fnPreSetup,test:function(){ok(this.$el.find(".ui-lookswitcher-love-link").length>0,"element is rendered")}}];componentSpecs.create(setup,config).viewShouldFollowBasicComponentLifeCycle(fnPreSetup).viewShouldPassTests(viewTests).done()};return{run:innerRun}})