define(["Underscore","jQuery","tau/models/boardSettings/factory.board.settings","tau/configurator"],function(_,$,a,b){var c=function(){module("[BoardSettings]",{setup:function(){var c=this;b.setRestStorageService(function(a){var b=a.$scope;if(b.$group==="boards"){var c={group:{name:"boards",id:2},key:b.$key,ownerId:1,scope:"Public",publicData:{},userData:{},id:1},d=$.Deferred();return d.resolve(c),d}}),c.originalHash='board/5&boardSettings1={"zoomLevel":7}',c.external={location:{hash:"#"+c.originalHash}},b.setExternal(c.external),c.boardSettings=a.createInstance(b,{id:"boardSettings1",zoomLevel:1})},teardown:function(){b.setRestStorageService(null),delete this.originalHash,delete this.external,delete this.boardSettings,b.clear()}}),test("should allow to get settings",function(){var a=null;this.boardSettings.get({fields:["zoomLevel"],callback:function(b){a=b}});var b={id:"boardSettings1",zoomLevel:7};equals(a.id,b.id,"Id"),equals(a.zoomLevel,b.zoomLevel,"ZoomLevel")}),test("should allow to set settings",function(){var a=null;this.boardSettings.set({set:{zoomLevel:10},callback:function(b){a=b}});var c={zoomLevel:10},d=b.getExternal(),e=d.getHashParam("boardSettings1");same(e,c,"parameter value")}),test("should allow to bind on settings changes",function(){var a=null,c={};this.boardSettings.bind({fields:["zoomLevel"],listener:c,callback:function(b){a=b}});var d=b.getExternal();d.setHashParam("boardSettings1",{zoomLevel:1}),d.triggerHashChange(),same(a,null,"nothing happens since there is no changes in comparison to inner settings"),d.setHashParam("boardSettings1",{zoomLevel:3}),d.triggerHashChange();var e={zoomLevel:3};same(a,e,"zoomLevel is changed to 3"),this.boardSettings.dispose(),d.setHashParam("boardSettings1",{zoomLevel:2}),d.triggerHashChange(),same(a,e,"nothing happens after unbind")}),test("should allow to set an object as value",function(){var a=null,c={},d=0;this.boardSettings.bind({fields:["state"],listener:c,callback:function(b){a=b,++d}});var e=b.getExternal();e.setHashParam("boardSettings1",{state:{a:1,b:2}}),e.triggerHashChange(),equals(d,1,"Callback is fired once only"),same(a,{state:{a:1,b:2}},"nothing happens since there is no changes in comparison to inner settings");var f=null,g=0;this.boardSettings.set({set:{state:{x:10,y:"i-greek"}},callback:function(a){f=a.state,++g}}),equals(d,2,"Bind Callback is fired second time"),equals(g,1,"Bind Callback is fired once only"),same(f,{x:10,y:"i-greek"},"Save callback is correct"),same(a,{state:{x:10,y:"i-greek"}},"Bind callback is correct"),this.boardSettings.dispose(),this.boardSettings.set({set:{state:{z:"zed"}}}),equals(d,2,"Bind Callback is not fired anymore")})};return{run:c}})