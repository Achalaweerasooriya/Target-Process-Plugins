define(["Underscore","tau/services/service.routing","tau/core/external"],function(_,a,b){var c=function(){module("[service.routing]",{setup:function(){var c=this;c.originalHash='board/5&route={"collapsed":true,"hide":true}&key2={"innerKey":1}',c.external=new b({location:{hash:"#"+c.originalHash}}),c.service=new a({external:c.external})},teardown:function(){delete this.service}}),test("should allow to get states",function(){var a=null,b=0,c={id:"route",fields:["collapsed"],callback:function(c){++b,a=c}};this.service.get(c),equals(b,1,"should be called once"),same(a,{collapsed:!0},"should return valid result")}),test("should allow to set state",function(){var a=null,b={id:"route",set:{collapsed:!1},callback:function(b){a=b}};equals('board/5&route={"collapsed":true,"hide":true}&key2={"innerKey":1}',this.external.getHash(),"Hash before change"),this.service.set(b),equals('board/5&route={"collapsed":false,"hide":true}&key2={"innerKey":1}',this.external.getHash(),"Hash is changed"),b={id:"unknownKey",set:{state:22},callback:function(b){a=b}},this.service.set(b),equals('board/5&route={"collapsed":false,"hide":true}&key2={"innerKey":1}&unknownKey={"state":22}',this.external.getHash(),"Hash is changed")})};return{run:c}})