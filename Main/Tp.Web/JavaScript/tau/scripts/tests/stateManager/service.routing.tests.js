define(["Underscore","tau/services/service.routing","tau/core/external"],function(_,ServiceRouting,External){var innerRun=function(){module("[service.routing]",{setup:function(){var self=this;self.originalHash='board/5&route={"collapsed":true,"hide":true}&key2={"innerKey":1}',self.external=new External({location:{hash:"#"+self.originalHash}}),self.service=new ServiceRouting({external:self.external})},teardown:function(){delete this.service}}),test("should allow to get states",function(){var result=null,callbacksCount=0,cmd={id:"route",fields:["collapsed"],callback:function(d){++callbacksCount,result=d}};this.service.get(cmd),equals(callbacksCount,1,"should be called once"),same(result,{collapsed:!0},"should return valid result")}),test("should allow to set state",function(){var result=null,cmd={id:"route",set:{collapsed:!1},callback:function(d){result=d}};equals('board/5&route={"collapsed":true,"hide":true}&key2={"innerKey":1}',this.external.getHash(),"Hash before change"),this.service.set(cmd),equals('board/5&route={"collapsed":false,"hide":true}&key2={"innerKey":1}',this.external.getHash(),"Hash is changed"),cmd={id:"unknownKey",set:{state:22},callback:function(d){result=d}},this.service.set(cmd),equals('board/5&route={"collapsed":false,"hide":true}&key2={"innerKey":1}&unknownKey={"state":22}',this.external.getHash(),"Hash is changed")})};return{run:innerRun}})