define(["tau/core/tau"],function(tau){function progressBarModelEvents(testContext){this.testContext=testContext,this.initializedArgsActual=[],this.initializedArgsExpected=[],this.initializedRetVal={expected:this.initializedArgsExpected,addExpectedData:function(expected){this.expected.push(expected)}},this.verifyFunctions=[]}return progressBarModelEvents.prototype={afterInit:function(){return this.listenAfterInit(),this.initializedRetVal},listenAfterInit:function(){this.listenAfterInit=tau.empty,this.testContext.model.on("afterInit",this._onInitialized,this),this.verifyFunctions.push(this._verifyInitialized)},_onInitialized:function(){this.initializedArgsActual.push(arguments[0].data)},_verifyInitialized:function(){var expected=this.initializedArgsExpected,actual=this.initializedArgsActual;equal(expected.length,actual.length,"Fired initialized events count is valid");for(var i=0;i<Math.min(expected.length,actual.length);i++){var actualData=actual[i],expectedData=expected[i];this.validateInitData(actualData,expectedData,"Init data is valid")}},validateInitData:function(actual,expected,message){equal(actual.id,expected.id,"id "+message),equal(actual.name,expected.name,"name "+message),equal(actual.entityState.id,expected.entityState.id,"entityState.id "+message),equal(actual.entityState.name,expected.entityState.name,"entityState.name "+message),equal(actual.effortCompleted,expected.effortCompleted,"effortCompleted "+message),equal(actual.effortToDo,expected.effortToDo,"effortToDo "+message),equal(actual.timeSpent,expected.timeSpent,"timeSpent "+message),equal(actual.timeRemain,expected.timeRemain,"timeRemain "+message),equal(actual.entityType.name,expected.entityType.name,"entityType.name "+message)},verify:function(){var functions=this.verifyFunctions;for(var i=functions.length;i--;)functions[i].call(this)}},progressBarModelEvents})