define(["tau/core/tau","tau/configurator"],function(a,b){function c(a){this.testContext=a,this.ownerChangedArgumentsActual=[],this.ownerChangedArgumentsExpected=[],this.assignButtonShowedArgumentsActual=[],this.assignButtonShowedArgumentsExpected=[],this.assignButtonHidedArgumentsActual=[],this.assignButtonHidedArgumentsExpected=[],this.assignmentChangedArgumentsActual=[],this.assignmentChangedArgumentsExpected=[],this.assignmentRemovedArgumentsActual=[],this.assignmentRemovedArgumentsExpected=[],this.userAssignedArgumentsActual=[],this.userAssignedArgumentsExpected=[],this.initialDataReturnedActual=[],this.initialDataReturnedExpected=[],this.ownerChangedRetVal={expected:this.ownerChangedArgumentsExpected,addExpectedData:function(a){this.expected.push(a)}},this.assignButtonShowedRetVal={expected:this.assignButtonShowedArgumentsExpected,addExpectedData:function(a){this.expected.push(a)}},this.assignmentChangedRetVal={expected:this.assignmentChangedArgumentsExpected,addExpectedData:function(a){this.expected.push(a)}},this.assignmentRemovedRetVal={expected:this.assignmentRemovedArgumentsExpected,addExpectedData:function(a){this.expected.push(a)}},this.userAssignedRetVal={expected:this.userAssignedArgumentsExpected,addExpectedData:function(a){this.expected.push(a)}},this.initialDataReturnedRetVal={expected:this.initialDataReturnedExpected,addExpectedData:function(a){this.expected.push(a)}},this.assignButtonHidedRetVal={expected:this.assignButtonHidedArgumentsExpected,addExpectedData:function(a){this.expected.push(a)}},this.verifyFunctions=[]}c.prototype={ownerChanged:function(){this.listenOwnerChanged();return this.ownerChangedRetVal},assignmentChanged:function(){this.listenAssignmentChanged();return this.assignmentChangedRetVal},assignmentRemoved:function(){this.listenAssignmentRemoved();return this.assignmentRemovedRetVal},assignButtonShowed:function(){this.listenAssignButtonShowed();return this.assignButtonShowedRetVal},userAssigned:function(){this.listenUserAssigned();return this.userAssignedRetVal},initialDataReturned:function(){this.listenInitialDataReturned();return this.initialDataReturnedRetVal},assignButtonHided:function(){this.listenAssignButtonHided();return this.assignButtonHidedRetVal},listenAssignButtonHided:function(){this.listenAssignButtonHided=a.empty,this.testContext.model.on("assignButtonHided",this._onassignButtonHided,this),this.verifyFunctions.push(this._verifyassignButtonHidedAguments)},listenAssignButtonShowed:function(){this.listenAssignButtonShowed=a.empty,this.testContext.model.on("assignButtonShowed",this._onAssignButtonShowed,this),this.verifyFunctions.push(this._verifyAssignButtonShowedAguments)},listenAssignmentChanged:function(){this.listenAssignmentChanged=a.empty,this.testContext.model.on("assignmentChanged",this._onAssignmentChanged,this),this.verifyFunctions.push(this._verifyAssignmentChangedPassedAguments)},listenUserAssigned:function(){this.listenUserAssigned=a.empty,this.testContext.model.on("userAssigned",this._onUserAssigned,this),this.verifyFunctions.push(this._verifyUserAssignedPassedAguments)},listenOwnerChanged:function(){this.listenOwnerChanged=a.empty,this.testContext.model.on("ownerChanged",this._onOwnerChanged,this),this.verifyFunctions.push(this._verifyOwnerChangedPassedAguments)},listenAssignmentRemoved:function(){this.listenAssignmentRemoved=a.empty,this.testContext.model.on("assignmentRemoved",this._onAssignmentRemoved,this),this.verifyFunctions.push(this._verifyAssignmentRemovedPassedAguments)},listenInitialDataReturned:function(){this.listenInitialDataReturned=a.empty,this.testContext.model.on("afterInit",this._onInitialDataReturned,this),this.verifyFunctions.push(this._verifyInitialDataReturnedPassedArguments)},_verifyUserAssignedPassedAguments:function(){var a=this.userAssignedArgumentsExpected,b=this.userAssignedArgumentsActual;equal(b.length,a.length,"userAssigned event handle is valid");for(var c=0;c<Math.min(a.length,b.length);c++){var d=b[c][0].data,e=a[c];equal(d.role,e.role,"Passed role is valid");var f=e.user.firstName+" "+e.user.lastName;equal(d.user.name,f,"Passed user name is valid")}},_verifyOwnerChangedPassedAguments:function(){var a=this.ownerChangedArgumentsExpected,b=this.ownerChangedArgumentsActual;equal(a.length,b.length,"Fired onwerChanged events count is valid");for(var c=0;c<Math.min(a.length,b.length);c++){var d=b[c][0].data,e=a[c];equal(d.name,e.firstName+" "+e.lastName,"User name is valid"),equal(d.role.id,e.role.id,"Passed user  role id is valid"),equal(d.role.name,e.role.name,"Passed user  role name is valid"),equal(d.avatar,e.avatar,"Passed user  avatar is valid")}},validateUser:function(a,b,c){equal(a.id,b.id,"id "+c),equal(a.name,b.name,"name "+c)},validateUserForInitData:function(a,c,d){equal(a.id,c.id,"id "+d),equal(a.name,c.firstName+" "+c.lastName,"name "+d),equal(a.avatar,[b.getApplicationPath(),"/Avatar.ashx?UserId=",c.id,"&size=24"].join(""),"Avatar url is valid")},validateGroups:function(a,b){equal(a.allowAdd,b.allowAdd,"Allow Add is valid"),equal(a.role.id,b.role.id,"Role id is valid"),equal(a.role.name,b.role.name,"Role name is valid"),equal(a.users.length,b.users.length,"User length is valid");for(var c=0;c<Math.min(a.users.length,b.users.length);c++)this.validateUserForInitData(a.users[c],b.users[c]),equal(a.roleEffort.effort,b.roleEffort.effort,"Effort is valid"),equal(a.roleEffort.remain,b.roleEffort.remain,"Remain is valid")},_verifyInitialDataReturnedPassedArguments:function(){var a=this.initialDataReturnedExpected,b=this.initialDataReturnedActual;equal(a.length,b.length,"Fired initialDateReturned events count is valid");for(var c=0;c<Math.min(a.length,b.length);c++){var d=b[c][0].data,e=a[c];this.validateUserForInitData(d.owner,e.owner,"Owner is valid");var f=e.assignments.groups,g=d.assignments.groups;equal(d.effortPoints,e.effortPoints,"effortPoints  is valid"),equal(d.totalEffort.effort,e.totalEffort.effort,"Total effort is valid"),equal(d.totalEffort.remain,e.totalEffort.remain,"Remain remain is valid"),e.tasksEffort&&(equal((d.tasksEffort||{}).effort,e.tasksEffort.effort,"tasksEffort effort is valid"),equal((d.tasksEffort||{}).remain,e.tasksEffort.remain,"tasksEffort remain is valid")),equal(g.length,f.length,"Groups count is valid");for(var c=0;c<Math.min(g.length,f.length);c++)this.validateGroups(g[c],f[c])}},_verifyAssignmentRemovedPassedAguments:function(){var a=this.assignmentRemovedArgumentsExpected,b=this.assignmentRemovedArgumentsActual;equal(a.length,b.length,"Fired assignmentRemoved events count is valid");for(var c=0;c<Math.min(a.length,b.length);c++){var d=b[c][0].data.role,e=b[c][0].data.user,f=a[c].role,g=a[c].user;equal(d,f,"Role is valid"),equal(e,g,"User is valid")}},_verifyassignButtonHidedAguments:function(){var a=this.assignButtonHidedArgumentsExpected,b=this.assignButtonHidedArgumentsActual;equal(a.length,b.length,"Fired asignButtonHidded events count is valid");for(var c=0;c<Math.min(a.length,b.length);c++){var d=b[c][0].data.role,e=a[c].role;equal(d,e,"Role is valid")}},_verifyAssignButtonShowedAguments:function(){var a=this.assignButtonShowedArgumentsExpected,b=this.assignButtonShowedArgumentsActual;equal(a.length,b.length,"Fired asignButtonShowed events count is valid");for(var c=0;c<Math.min(a.length,b.length);c++){var d=b[c][0].data.role,e=a[c].role;equal(d,e,"Role is valid")}},_verifyAssignmentChangedPassedAguments:function(){var a=this.assignmentChangedArgumentsExpected,b=this.assignmentChangedArgumentsActual;equal(a.length,b.length,"Fired assignmentChanged events count is valid");for(var c=0;c<Math.min(a.length,b.length);c++){var d=b[c][0].data.oldUser,e=b[c][0].data.newUser,f=b[c][0].data.role,g=a[c];this.validateUser(d,g.oldUser,"Old User is valid"),this.validateUser(e,g.newUser,"Old User is valid"),equal(f,g.role,"Role is valid")}},_onUserAssigned:function(){this.userAssignedArgumentsActual.push(arguments)},_onOwnerChanged:function(){this.ownerChangedArgumentsActual.push(arguments)},_onassignButtonHided:function(){this.assignButtonHidedArgumentsActual.push(arguments)},_onAssignButtonShowed:function(){this.assignButtonShowedArgumentsActual.push(arguments)},_onAssignmentChanged:function(){this.assignmentChangedArgumentsActual.push(arguments)},_onInitialDataReturned:function(){this.initialDataReturnedActual.push(arguments)},_onAssignmentRemoved:function(){this.assignmentRemovedArgumentsActual.push(arguments)},verify:function(){var a=this.verifyFunctions;for(var b=a.length;b--;)a[b].call(this)}};return c})