define(["tau/core/tau","tests/context/assignment-list/assignmentsModelEvents","tests/common/expector/expector","tau/models/model.assignmentsList"],function(tau,assignmentsModelEvents,expector,modelAssignmentsList){function assignmentsListTestContext(){this.eventsArguments={},this.mockControl=new MockControl}return assignmentsListTestContext.prototype={initData:function(){var devRole={id:"devRoleId",name:"DevRoleName",isPair:!0},qaRole={id:"scRoleId",name:"qaRoleName",isPair:!1},smRole={id:"smRoleId",name:"smRoleName",isPair:!1},state1={id:1,name:"ToDo",entityType:{name:"Bug",id:1},role:devRole},state2={id:1,name:"InProgress",entityType:{name:"Bug",id:1},role:devRole},state3={id:1,name:"Coded",entityType:{name:"Bug",id:1},role:devRole},state4={id:1,name:"Testing",entityType:{name:"Bug",id:1},role:qaRole},states=[state1,state2,state3,state4],ownerUser={id:"ownerId",firstName:"ownerFirstName",lastName:"ownerLastName",role:devRole},user1={id:"userId1",firstName:"fn1",lastName:"fn1",role:devRole,avatar:"avatar1"},user2={id:"userId2",firstName:"fn2",lastName:"fn2",role:devRole,avatar:"avatar2"},user3={id:"userId3",firstName:"fn3",lastName:"fn3",role:smRole,avatar:"avatar3"},user4={id:"userId4",firstName:"fn4",lastName:"fn4",role:qaRole,avatar:"avatar4"},user5={id:"userId5",firstName:"fn5",lastName:"fn5",role:devRole,avatar:"avatar5"},users=[user1,user2,user3,user4,user5,ownerUser],devEffort={effort:20,effortToDo:15,role:devRole},qaEffort={effort:15,effortToDo:8,role:qaRole},assignments=[{id:1,role:devRole,user:user1},{id:2,role:devRole,user:user2},{id:3,role:qaRole,user:user4}];this.assignable={id:15,owner:ownerUser,assignments:assignments,roleEfforts:[devEffort,qaEffort]},this.context={entityType:{name:"Bug",id:2},process:{id:"processId"},assignable:{id:this.assignable.id},loggedUser:{id:"loggedUserId",firstName:"LoggedUser First Name",lastName:"LoggedUser Last Name",role:{id:"roleId",name:"rolename"},avatar:"logged user avatar"}},this.data={assignable:this.assignable,context:this.context,assignments:assignments,users:users,states:states,ownerUser:ownerUser,devRole:devRole,qaRole:qaRole,smRole:smRole}},initMockControls:function(){this[this.context.entityType.id]=this.Bug=this.mockControl.createMock({update:tau.empty,find:tau.empty,findOne:tau.empty}),this.states=this.mockControl.createMock({find:tau.empty}),this.assignments=this.mockControl.createMock({save:tau.empty,find:tau.empty,update:tau.empty,remove:tau.empty}),this.store=this.mockControl.createMock({done:tau.empty}),this.store[this.context.entityType.id]=this.Bug,this.store.assignments=this.assignments,this.store.states=this.states},createModel:function(){this.model=new modelAssignmentsList(this.store,this.context)},initialize:function(){this.initData(),this.initMockControls(),this.createModel()},initializeForGetInitialData:function(){var assignable=this.data.assignable,process=this.data.context.process,states=this.data.states;this.expects().bug().findOne({id:assignable.id},assignable),this.expects().state().find({process:{id:process.id}},states),this.expects().store().done(Object),this.model.initialize(),this.mockControl.verify(),this.mockControl.reset()},expects:function(){return this._expects||(this._expects=new expector(this)),this._expects},events:function(){return this._events||(this._events=new assignmentsModelEvents(this)),this._events},verify:function(){this.events().verify(),this.mockControl.verify()},destroy:function(){}},assignmentsListTestContext})