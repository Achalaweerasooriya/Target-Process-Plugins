define(["Underscore","jQuery"],function(_,$){var a=function(){module("[jquery.ui.confirmation] widget tests",{setup:function(){this.$element=$("<div/>")},teardown:function(){delete this.$element}}),test("should has correct initialization",function(){this.$element.confirmation(),ok(this.$element.hasClass("confirmationHost"),"Confirmation container has correct class."),equal(this.$element.confirmation("option","message"),"Question?","Has correct default message."),equal(this.$element.confirmation("option","okLabel"),"OK",'Has correct default "OK" label.'),equal(this.$element.confirmation("option","cancelLabel"),"Cancel",'Has correct default "Cancel" label.'),this.$element.confirmation("destroy")}),test('should insert and delete widget on "show" and "hide"',function(){this.$element.confirmation(),this.$element.confirmation("show"),equal(this.$element.find(".confirmation").size(),1,"Widget element inserted correctly."),this.$element.confirmation("hide"),equal(this.$element.find(".confirmation").size(),0,"Widget element deleted correctly."),this.$element.confirmation("destroy")}),test("should correctly destroy",function(){this.$element.confirmation(),this.$element.confirmation("destroy"),equal(this.$element.find(".confirmation").size(),0,"Widget element deleted."),ok(!this.$element.hasClass("confirmationHost"),"Confirmation container class deleted.")}),test("should have valid markup",function(){this.$element.confirmation(),this.$element.confirmation("show");var a=this.$element.find(".confirmation"),b=a.find(".inner p");equal(b.size(),1,"Message element found."),equal(b.text(),"Question?","Message element has valid text.");var c=a.find(".inner button.ok");equal(c.size(),1,'"OK" button found.'),equal(c.text(),"OK",'"OK" button has valid text.');var d=a.find(".inner button.cancel");equal(d.size(),1,'"Cancel" button found.'),equal(d.text(),"Cancel",'"Cancel" button has valid text.'),equal(a.find("*").size(),4,"Total elements count is valid."),this.$element.confirmation("destroy")}),test("should override default options",function(){this.$element.confirmation({message:"Foo",okLabel:"A",cancelLabel:"B"}),equal(this.$element.confirmation("option","message"),"Foo","Message option override."),equal(this.$element.confirmation("option","okLabel"),"A",'"OK" label option override.'),equal(this.$element.confirmation("option","cancelLabel"),"B","Message option override."),this.$element.confirmation("destroy")}),test("should support callbacks through options",function(){var a={show:!1,hide:!1,ok:!1,cancel:!1};this.$element.confirmation({show:function(){a.show=!0},hide:function(){a.hide=!0},ok:function(){a.ok=!0},cancel:function(){a.cancel=!0}}),this.$element.confirmation("show"),this.$element.find(".confirmation .ok").click(),this.$element.find(".confirmation .cancel").click(),this.$element.confirmation("hide"),ok(a.show,'"show" callback was called.'),ok(a.ok,'"ok" callback was called.'),ok(a.cancel,'"cancel" callback was called.'),ok(a.hide,'"hide" callback was called.'),this.$element.confirmation("destroy")}),test("should support callbacks through event binding",function(){var a={show:!1,hide:!1,ok:!1,cancel:!1};this.$element.confirmation(),this.$element.bind({confirmationshow:function(){a.show=!0},confirmationhide:function(){a.hide=!0},confirmationok:function(){a.ok=!0},confirmationcancel:function(){a.cancel=!0}}),this.$element.confirmation("show"),this.$element.find(".confirmation .ok").click(),this.$element.find(".confirmation .cancel").click(),this.$element.confirmation("hide"),ok(a.show,'"show" callback was called.'),ok(a.ok,'"ok" callback was called.'),ok(a.cancel,'"cancel" callback was called.'),ok(a.hide,'"hide" callback was called.'),this.$element.confirmation("destroy")})};return{run:a}})