define(["tau/store/services/service.rest","tau/store/header","jQuery"],function(a,b,$){var c=function(a,b){var c=function(a){ok(_.isArray(a),"it is array"),ok(a[0].name,"simple value"),equal(a[0].contacts.length,0,"array value")},d=null,e={};this.api.mockAjaxCall(e);var f=function(a){d=a};this.rest.get({type:"person",name:"get",config:{format:a,fields:["name",{contacts:["email"],list:!0}]},callbacks:{success:f}}),e.success({items:[b]}),equal(a,e.config.dataType,"used format applied"),c(d),this.mockControl.verify()},d=function(a,b,c){var d=null,e={},f={};this.api.mockAjaxCall(e),this.api.mockAjaxCall(f);var g=0,h=function(a){d=a,g++};return this.rest.get({type:"person",name:"get",config:{format:a,fields:["name",{contacts:["email"],list:!0}]},callbacks:{success:h}}),e.success(b),f.success(c),this.mockControl.verify(),equal(g,1),equal(d.length,2,"two pages merged"),d},e=function(a,b,c,d,e){var f=null;e=e||"get";var g={},h={},i={};this.api.mockAjaxCall(g),this.api.mockAjaxCall(h),this.api.mockAjaxCall(i);var j=0,k=function(a){f=a,j++};return e!="save"?this.rest.get({type:"person",name:e,config:{format:a,fields:["name",{contacts:["email"],list:!0}]},callbacks:{success:k}}):this.rest.save({type:"person",name:e,config:{$set:{},format:a,fields:["name",{contacts:["email"],list:!0}]},callbacks:{success:k}}),g.success(b),h.success(c),i.success(d),this.mockControl.verify(),equal(f[0].contacts.length,3,"three pages merged"),equal(j,1),f},f=function(){module("[api rest service]",{setup:function(){this.mockControl=new MockControl;var c=function(a){},d={ajax:c,error:c,success:c};this.api=this.mockControl.createMock(d),this.api.parseJSON=$.parseJSON,this.api.mockAjaxCall=function(a){var b=a||{},c=this;c.expects().ajax(TypeOf.isA(Object)).andStub(function(a){return b.config=a,c}),c.expects().success(TypeOf.isA(Function)).andStub(function(a){return b.success=function(c){b.config.dataType=="array"?c=b.config.converters["text array"](JSON.stringify(c)):c=b.config.converters["text json"](JSON.stringify(c)),a(c)},c}),c.expects().error(TypeOf.isA(Function)).andStub(function(a){return b.failure=a,c})};var e={api:this.api,types:{person:{name:"person",fields:["name"],resource:"persons",refs:{contacts:{list:!0,name:"contact",fields:["email"]}}},contact:{name:"contact",fields:["email",b.ref("owner")],resource:"contacts",refs:{owner:{name:"person"}}}}};this.rest=new a(e)},teardown:function(){delete this.rest}}),test("array: no paging",function(){c.call(this,"array",["Vasya Pupkin",{items:[]}])}),test("array: no paging with null",function(){c.call(this,"array",["Vasya Pupkin",null])}),test("array: no paging with empty array",function(){c.call(this,"array",["Vasya Pupkin",[]])}),test("json: no paging",function(){c.call(this,"json",{name:"Vasya Pupkin",contacts:{items:[]}})}),test("json: no paging with empty array",function(){c.call(this,"json",{name:"Vasya Pupkin",contacts:[]})}),test("array: paging papa",function(){var a={items:[["Vasya",null]],next:"nextPage"},b={items:[["Tolya",null]]};d.call(this,"array",a,b)}),test("json: paging papa",function(){var a={items:[{name:"Vasya",contacts:[]}],next:"nextPage"},b={items:[{name:"Tolya",contacts:[]}]};d.call(this,"array",a,b)}),test("array: paging children",function(){var a={items:[["Vasya",{items:[["s@s.com"]],next:"super url"}]]},b={items:[["n@n.com"]],next:"super url"},c={items:[["f@f.com"]]};e.call(this,"array",a,b,c)}),test("array: paging children when include is defined in url",function(){var a={items:[["Vasya",{items:[["s@s.com"]],next:"super url?Include=[Owner[Id],Email]"}]]},b={items:[[[1],"n@n.com"]],next:"super url?include=[Email,notes[id, description]]"},c={items:[["f@f.com",{items:[[1,"super 1"],[3,"super 2"]]}]]},d=e.call(this,"array",a,b,c);equals(d[0].contacts[0].email,"s@s.com"),equals(d[0].contacts[1].email,"n@n.com"),equals(d[0].contacts[1].owner.id,1),equals(d[0].contacts[2].email,"f@f.com"),equals(d[0].contacts[2].notes.length,2),equals(d[0].contacts[2].notes[0].id,1),equals(d[0].contacts[2].notes[1].id,3),equals(d[0].contacts[2].notes[0].description,"super 1"),equals(d[0].contacts[2].notes[1].description,"super 2")}),test("array: paging children refresh command",function(){var a={items:[["Vasya",{items:[["s@s.com"]],next:"super url"}]]},b={items:[["n@n.com"]],next:"super url"},c={items:[["f@f.com"]]};e.call(this,"array",a,b,c,"refresh")}),test("json: paging children",function(){var a={items:[{name:"Vasya",contacts:{items:[{email:"s@s.com"}],next:"super url"}}]},b={items:[{email:"n@n.com"}],next:"super url"},c={items:[{email:"f@f.com"}]};e.call(this,"json",a,b,c)}),test("json: paging children on save",function(){var a={items:[{name:"Vasya",contacts:{items:[{email:"s@s.com"}],next:"super url"}}]},b={items:[{email:"n@n.com"}],next:"super url"},c={items:[{email:"f@f.com"}]};e.call(this,"json",a,b,c,"save")}),test("parse fields from include",function(){deepEqual(b.parseFieldsFromString("[A-Count,b,C]"),["a-count","b","c"]),deepEqual(b.parseFieldsFromString("[A[V-Count],b,C]"),[{a:["v-count"]},"b","c"]),deepEqual(b.parseFieldsFromString("[a,b,C]"),["a","b","c"]),deepEqual(b.parseFieldsFromString("[a[x],b[c]]"),[{a:["x"]},{b:["c"]}]),deepEqual(b.parseFieldsFromString("[a[x],b[c],a[z]]"),[{a:["x"]},{b:["c"]},{a:["z"]}]),deepEqual(b.parseFieldsFromString("[a,b,C[E],v]"),["a","b",{c:["e"]},"v"]),deepEqual(b.parseFieldsFromString("[c[e,f[m]]]"),[{c:["e",{f:["m"]}]}]),deepEqual(b.parseFieldsFromString("[a,b,C[E,f[m]],v[x]]"),["a","b",{c:["e",{f:["m"]}]},{v:["x"]}]),deepEqual(b.parseFieldsFromString("[C[E],C[B]]"),[{c:["e"]},{c:["b"]}])})};return{run:f}})