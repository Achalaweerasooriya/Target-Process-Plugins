define(["Underscore","tau/configurator","tests/common/testData.Generator","tests/common/service.mock"],function(_,configurator,DataGenerator,ServiceMock){var dataGenerator=new DataGenerator;module("[store] rules ",{setup:function(){configurator.clear(),this.serviceMock=new ServiceMock,configurator.setService(this.serviceMock),dataGenerator.clear(),this.store=configurator.getStore(),configurator.clear(),dataGenerator.initDefaultData();var bugs=dataGenerator.getBugs(),stories=dataGenerator.getUserStories(),bug=bugs[0];delete bug.feature,delete bug.iteration,delete bug.project,delete bug.release;var data=this.data=[bug,stories[0]];configurator.setInitialData(data),configurator.setService(this.serviceMock),this.store=configurator.getStore()},teardown:function(){this.serviceMock.verify(),configurator.clear()}}),test("should include endDate if state was changed",function(){var bug=this.data[0];this.store.get(bug.__type,{id:bug.id,fields:["endDate"]}),this.serviceMock.registerSaveCommand({config:{id:bug.id,$set:{entityState:{id:1}},fields:["id","endDate",{roleEfforts:["id","effort","effortToDo"],list:!0}]},returnedData:{id:bug.id,__type:bug.__type,endDate:5,roleEfforts:[{id:350,effort:10,effortToDo:10},{id:15,effort:7,effortToDo:100}]}}),this.store.save(bug.__type,{id:bug.id,$set:{entityState:{id:1}}}).done();var story=this.data[1];this.store.get(bug.__type,{id:story.id,fields:["endDate"]}),this.serviceMock.registerSaveCommand({config:{id:story.id,$set:{entityState:{id:1}},fields:["id","endDate",{roleEfforts:["id","effort","effortToDo"],list:!0}]},returnedData:{id:story.id,__type:story.__type,endDate:5}}),this.store.save(story.__type,{id:story.id,$set:{entityState:{id:1}}}).done()})})