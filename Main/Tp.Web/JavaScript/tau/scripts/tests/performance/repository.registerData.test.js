define(["jQuery","tau/configurator","tests/performance/list.datapoint"],function($,configurator,dataPoint){function startCallback(){$('<span>Iterations: </span><input type="text" id="iterations" value="10" />').appendTo("#toolbarContainer"),$('<span>Items count: </span><input type="text" id="itemsCount" value="100" />').appendTo("#toolbarContainer"),$("<button>Clean and run cycle</button>").click(createStartTest(!0)).appendTo("#toolbarContainer"),$("<button>Run without clean</button>").click(createStartTest(!1)).appendTo("#toolbarContainer"),$('<table id="result" border="1" cellpadding="1" cellspacing="1" width="30%"><thead><th>#</th><th>Size</th><th>Prepare</th><th>Register</th></thead></table>').appendTo("#resultsContainer")}function registerData(testData){var repository=configurator.getStore().config.proxy;repository.registerData(testData,!0)}function startTest(itemsCount){var points=[];points.push(+(new Date));var testData=dataPoint.prepareTestData(itemsCount),str=JSON.stringify(testData);return points.push(+(new Date)),registerData(testData),points.push(+(new Date)),{size:str.length,points:points}}function createStartTest(clean){return function(){var iterationsCount=$("#iterations").val(),itemsCount=$("#itemsCount").val();for(var i=0;i<iterationsCount;i++){clean&&configurator.clear();var results=startTest(itemsCount),points=results.points;$("<tr></tr>").append("<td>"+i+"</td>").append("<td>"+results.size+"</td>").append("<td>"+(points[1]-points[0])+"</td>").append("<td>"+(points[2]-points[1])+"</td>").appendTo("#result")}}}return{run:startCallback}})