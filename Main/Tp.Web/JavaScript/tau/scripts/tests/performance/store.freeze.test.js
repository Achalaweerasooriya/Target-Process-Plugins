define(["jQuery","tau/configurator","tests/performance/list.datapoint"],function($,configurator,dataPoint){function startCallback(){$('<span>Items count: </span><input type="text" id="itemsCount" value="100" />').appendTo("#toolbarContainer"),$("<button>Run</button>").click(createStartTest(!0)).appendTo("#toolbarContainer"),$('<table id="result" border="1" cellpadding="1" cellspacing="1" width="30%"><thead><th>#</th><th>Prepare</th><th>Register</th><th>store.get.done cycle</th><th>Unfreeze callbacks cycle</th></thead></table>').appendTo("#resultsContainer")}function registerData(testData){var repository=configurator.getStore().config.proxy;repository.registerData(testData,!0)}function registerRequests(store,itemsCount){for(var i=0;i<itemsCount;i++){var id=i+1,cmd={id:id,fields:["id","name","effort","effortCompleted","effortToDo","numericPriority","tags","timeRemain","timeSpent",{entityState:["id","name","isInitial","isFinal"]},{priority:["id","name","importance"]},{owner:["id","firstName","lastName"]},{project:["id"]}]};store.get("task",cmd).done({success:$.proxy($.noop,this)})}}function startTest(itemsCount){var points=[];points.push(+(new Date));var testData=dataPoint.prepareTestData(itemsCount);points.push(+(new Date)),registerData(testData),console.log(testData),points.push(+(new Date));var store=configurator.getStore(),promise=store.freeze();return registerRequests(store,itemsCount),points.push(+(new Date)),promise.unfreeze(),points.push(+(new Date)),{points:points}}function createStartTest(clean){return function(){var itemsCount=$("#itemsCount").val();clean&&configurator.clear();var results=startTest(itemsCount),points=results.points;$("<tr></tr>").append("<td>0</td>").append("<td>"+(points[1]-points[0])+"</td>").append("<td>"+(points[2]-points[1])+"</td>").append("<td>"+(points[3]-points[2])+"</td>").append("<td>"+(points[4]-points[3])+"</td>").appendTo("#result")}}return{run:startCallback}})