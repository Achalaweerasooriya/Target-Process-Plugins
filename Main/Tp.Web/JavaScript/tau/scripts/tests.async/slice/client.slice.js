define(["Underscore","tau/core/tau","tau/core/Class","tau/core/query"],function(_,utils,Class,query){var PascalCase=function(str){var car=str.substr(0,1),cdr=str.substr(1);return car.toUpperCase()+cdr};return Class.extend({init:function(config){this.config=config||{}},generateDataItem:function(item){var type=PascalCase(item.entityType.name),dataItem={id:item.id.toString(),type:type,data:{id:item.id,name:item.name,type:type}};return dataItem},generateItem:function(axisName,item){var result={fixed:{items:[]},dynamic:{items:[]}};return result.dynamic.items.push(this.generateDataItem(item)),result[axisName]=item.id.toString(),result},move:function(data,ajaxConfig){var config=ajaxConfig.$scope.command.config||{};return[{x:config.$set.x,y:config.$set.y,id:config.$set.itemId}]},prioritize:function(data,ajaxConfig){var config=ajaxConfig.$scope.command.config||{};return{x:config.$set.x,y:config.$set.y,id:config.$set.itemId}},cellActions:function(data,ajaxConfig){var config=ajaxConfig.$scope.command.config||{};return{items:[]}},moveAndPrioritizeBatch:function(data,ajaxConfig){var config=ajaxConfig.$scope.command.config||{},res=[];return _.forEach(config.$set.items,function(source){res.push({items:[{x:source.x,y:source.y,id:source.itemId,dataItem:{id:source.itemId}}]})}),{items:res}},prioritizeBatch:function(data,ajaxConfig){var config=ajaxConfig.$scope.command.config||{},res=[];return _.forEach(config.$set.items,function(source){res.push({items:[{id:source.itemId,dataItem:{id:source.itemId}}]})}),{items:res}},doRange:function(r,ajaxConfig){var config=ajaxConfig.$scope.command.config||{},items=query.find(r.items,config);return config.$skip&&items.length>config.$skip&&(items=items.slice(config.$skip,items.length-1)),config.$take&&config.$take<items.length&&(items=items.slice(0,config.$take)),{items:items}},doCellRange:function(r,ajaxConfig){var config=ajaxConfig.$scope.command.config||{},rItems=r.items[0].dynamic.items,items=query.find(rItems,config),complete=!1;config.$skip&&items.length>config.$skip&&(items=items.slice(config.$skip),complete=!0);if(config.$take&&config.$take<items.length){complete=!1;var extractedItems=items.slice(0,config.$take);extractedItems.length===items.length&&(complete=!0)}return r.items[0].dynamic.items=items,complete||r.items[0].fixed.items.push({type:"cellpaging"}),{items:r.items}},getXResponse:function(data,config){var r={items:[]},self=this,xAxis=_.values(data[self.config.x]);return _.each(xAxis,function(x){r.items.push(self.generateItem("x",x))}),this.doRange(r,config)},getYResponse:function(data,config){var r={items:[]},self=this,yAxis=_.values(data[self.config.y]);return _.each(yAxis,function(y){r.items.push(self.generateItem("y",y))}),this.doRange(r,config)},getSpace:function(data,config){var axes=["Project","Release","Feature","EntityState","Team","TeamIteration","Iteration","Severity","UserStory","TestPlan","Role"],cells=["User Story","Bug","Test Case","Feature","Request","Task","Impediment","User","Test Case"],realAxes=_.map(axes,function(v){return{id:v.toLowerCase().replace(/ /g,""),name:v,groups:{items:[]}}}),realCells=_.map(cells,function(v){return{id:v.toLowerCase().replace(/ /g,""),name:v}}),responseData={axes:{items:realAxes},cells:{items:realCells}};return responseData},getCells:function(data,config){var r={items:[]},self=this,hasX=!!self.config.x,hasY=!!self.config.y,xAxis=hasX?_.values(data[self.config.x]):[{id:null}],yAxis=hasY?_.values(data[self.config.y]):[{id:null}],cells=_(data[self.config.cells]).values(),generateDynamics=function(x,y){var filterSelector=function(cell){var xMatch=x!=null?cell[self.config.x].id==x:!0,yMatch=y!=null?cell[self.config.y].id==y:!0,isMatch=xMatch&&yMatch;return isMatch},dynamics=_(cells).chain().select(filterSelector).map(function(item){var dataItem=self.generateDataItem(item);return dataItem}).value();return dynamics};return _.each(xAxis,function(x){_.each(yAxis,function(y){r.items.push({y:(y.id||"null").toString(),x:(x.id||"null").toString(),dynamic:{items:generateDynamics(x.id,y.id)},fixed:{items:[]}})})}),this.doRange(r,config)},getList:function(data,config){var r={items:[]},self=this,cards=_(data[self.config.cells]).values(),generateDynamics=function(){var dynamics=_(cards).chain().map(function(item){var dataItem=self.generateDataItem(item);return dataItem}).value();return dynamics};r.items.push({dynamic:{items:generateDynamics()},fixed:{items:[]}});var result=this.doCellRange(r,config);return result}})})