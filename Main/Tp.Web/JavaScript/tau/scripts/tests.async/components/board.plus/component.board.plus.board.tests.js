define(["Underscore","jQuery","tau/core/event","tau/ui/extensions/board.plus/ui.board.plus.utils","tests.async/testkit/testkit.component.board","tau/components/component.board.plus"],function(_,$,Event,BoardPlusUtils,TestKit,ComponentBoardPlus){var testKit=new TestKit(ComponentBoardPlus,{x:{types:["release"],filter:"?It is not None"},y:{types:["feature"],filter:"?It is not None"},zoomLevel:1}),testcase={name:"component.board.plus.board"},BoardObject=function($skeleton){this.$skeleton=$skeleton,this.$children=$skeleton.find("[role=board-body] > div")},getNames=function(){var names=[];return this.find(".i-role-cell .i-role-name").each(function(){names.push($(this).text().replace(" (Current)",""))}),names},getMarks=function(i){var $cells=$(this).find("ul > li > [role=cell]");return arguments.length>0&&($cells=$cells.eq(i)),$cells};BoardObject.prototype={getZeroPoint:function(){var $zero=this.$children.eq(0);return $zero},getRowsContainer:function(){var $rows=this.$children.eq(1);return $rows.getNames=getNames,$rows.getMarks=getMarks,$rows},getColsContainer:function(){var $cols=this.$children.eq(2);return $cols.getMarks=getMarks,$cols.getNames=getNames,$cols},getCellsContainer:function(){var $cells=this.$children.eq(3);return $cells}};var checkMarksCount=function(test,axisName,sourceCollection,axisElement){test.equals(sourceCollection.length,axisElement.find(".i-role-cellholder").size(),"Amount of marks on axis "+axisName)},checkCellsSkeletonsFromData=function(test,$grid,$columns,$rows){var $gridRows=$grid.find("tbody > tr");test.equals($gridRows.size(),4,"Count rows in table");for(var r=0;r<$gridRows.size();r++){var $rowCells=$gridRows.eq(r).find("td > [role=cell]");test.equals($rowCells.size(),4,"Count of cells in row");for(var c=0;c<$rowCells.size();c++){var $cell=$rowCells.eq(c),xMark=$columns.getMarks(c).data(),yMark=$rows.getMarks(r).data();test.equal($cell.attr("id"),["x",xMark.x,"-","y",yMark.y,"-"].join(""),"Cell ID ["+c+":"+r+"]");var expectedCellData={x:xMark.x,y:yMark.y};test.same($cell.data(),expectedCellData,"Cell data")}}};return testcase["should render skeleton"]=testKit.test(function(test){var bus=test.get("bus"),EXPECTED_TESTS_COUNT=test.get("real")?470:468;test.expect(EXPECTED_TESTS_COUNT);var testFlow={bus:bus,"bus view.skeleton.built[0]":function(evt){var $skeleton=evt.data.element,bo=new BoardObject($skeleton),$rows=bo.getRowsContainer(),$columns=bo.getColsContainer(),$cells=bo.getCellsContainer(),$xheader=bo.getZeroPoint();test.equals($xheader.hasClass("tau-x-header"),!0,"x-header css class"),test.equals($xheader.text(),"Feature / Release","x-header label from (outer) space"),test.ok($rows.hasClass("tau-rows-header"),"rows-header css class"),test.ok($columns.hasClass("tau-cols-header"),"cols-header css class"),test.ok($cells.hasClass("tau-grid"),"grid css class"),test.equal($columns.find("> ul > li").size(),4,"Count of columns"),test.equal($rows.find("> ul > li").size(),4,"Count of rows");var testData=test.get("data"),releases=_(testData.release).map(function(val){return val}),colExpectedNames=_(releases).pluck("name"),colActualNames=$columns.getNames(),colDiff=_.difference(colExpectedNames,colActualNames);test.same(colDiff,[],"Names of X axis"),test.equal($columns.find("> ul > li > [role=cell]").size(),4,"Count of X-axis cells"),test.equal($rows.find("> ul > li > [role=cell]").size(),4,"Count of Y-axis cells"),checkMarksCount(test,"x",releases,$columns);var features=_(testData.feature).map(function(val){return val}),rowExpectedNames=_(features).pluck("name"),rowActualNames=$rows.getNames(),rowDiff=_.difference(rowExpectedNames,rowActualNames);test.same(rowDiff,[],"Names of Y axis"),checkMarksCount(test,"y",features,$rows);var $grid=$cells.children("table");test.equal($grid.children("tbody").children("tr").size(),4,"Rows size"),test.equal($grid.children("tbody").children("tr").eq(0).children("td").size(),4,"Columns size"),checkCellsSkeletonsFromData(test,$grid,$columns,$rows)},"bus view.skeleton.built[0]:last+template.boardplus.cell.grid.skeleton.bound":function(evt){var evtSkeleton=evt["view.skeleton.built[0]"].data,evtCell=evt["template.boardplus.cell.grid.skeleton.bound"].data,coords=evtCell.data,$skeleton=evtSkeleton.element,testData=test.get("data"),stories=_(testData.userStory).map(function(val){return val}),cellId="x"+coords.x+"-"+"y"+coords.y+"-",$skeletonCell=$skeleton.find("#"+cellId),$cards=$skeletonCell.find("[role=card]");test.equal($cards.size(),4,"Amount of cards in cell");var expectedStoryIds=_(coords.dynamic.items).map(function(n){return n.data.id}),cellStories=_(stories).filter(function(us){return-1!==_.indexOf(expectedStoryIds,us.id)});for(var i=0;i<cellStories.length;i++){var us=cellStories[i],type=us.entityType.name,cardId=BoardPlusUtils.getCardIds({type:type,id:us.id})[0],$card=$skeletonCell.find("#"+cardId),$cardId=$card.find(".tau-id");test.equal($cardId.text(),us.id,"Card id "+us.id),test.equal($cardId.attr("href").indexOf("#"+type.toLowerCase()+"/"+us.id)>=0,!0,"Card id reference "+us.id),test.equal($cardId.attr("href").indexOf("TpView.aspx?acid=")>=0,!0,"Card id reference "+us.id),test.equal($card.find(".tau-name").text(),us.name,"Card name "+us.name);var cardData=$card.data();cardData.entityType=cardData.entityType.toLowerCase(),test.same(cardData.entityId,us.id,"Card data"),test.same(cardData.entityType,type.toLowerCase(),"Card data")}},"bus view.skeleton.built[0]:last+template.boardplus.cell.axis.skeleton.bound":function(evt){var evtSkeleton=evt["view.skeleton.built[0]"].data,evtCell=evt["template.boardplus.cell.axis.skeleton.bound"].data,coords=evtCell.data,$skeleton=evtSkeleton.element,testData=test.get("data"),axisEntityType="",axisName="";coords.hasOwnProperty("x")?(axisEntityType="release",axisName="x"):coords.hasOwnProperty("y")&&(axisEntityType="feature",axisName="y");var axisItems=_(testData[axisEntityType]).map(function(val){return val}),firstDynamicItemId=coords.dynamic.items[0].data.id,markInfo=_(axisItems).find(function(item){return item.id==firstDynamicItemId}),cellId=axisName+coords[axisName]+"-",$skeletonCell=$skeleton.find("#"+cellId);test.equal($skeletonCell.find(".i-role-focustrigger.tau-label").size(),1,"One label only");var markName=(markInfo||{}).name;test.equal($skeletonCell.find(".i-role-name").text().indexOf(markName)>=0,!0,"Label on axis "+axisName+" = "+markName)},"bus view.skeleton.built[0]+template.boardplus.cell.grid.skeleton.bound[15]+template.boardplus.cell.axis.skeleton.bound[7]":function(evt){if(!test.get("real"))test.done();else{var $cards=evt["view.skeleton.built[0]"].data.element.find("[role=card]"),$firstCard=$cards.eq(0);$firstCard.dblclick()}},"bus view.skeleton.built[0]+view.cardDetails.loaded[0]":function(evt){var $cards=evt["view.skeleton.built[0]"].data.element.find("[role=card]"),$detailsView=evt["view.cardDetails.loaded[0]"].data.element,$titleIcon=$detailsView.find(".ui-title .ui-type-icon"),$titleId=$detailsView.find(".ui-title .entity-id .ui-link"),cardData=$cards.eq(0).data();test.ok($titleIcon.hasClass("ui-type-icon-"+cardData.entityType.toLowerCase()),"Another entity details view is opened"),test.equal($titleId.text(),"#"+cardData.entityId,"Entity id is valid"),test.done()}};Event.subscribeOn(testFlow)}),testcase})