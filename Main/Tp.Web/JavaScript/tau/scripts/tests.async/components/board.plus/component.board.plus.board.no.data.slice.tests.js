define(["Underscore","jQuery","tau/core/event","tests.async/testkit/testkit.component.board","tau/components/component.board.container","tau/ui/extensions/board.container/ui.extension.board.container.editMode","tau/ui/extensions/container/ui.extension.container.childrenEvents","tests/common/remoteConstants"],function(_,$,Event,TestKit,Component,ExtensionEditor,ExtensionChildrenEvents,Constants){var testKit=new TestKit(Component,{x:{types:["severity"],filter:"+Date()fsdaf dsa fdas fdsa fdsa df sad fdsa fdsa dfs ad fdsaf dsafd sad fdsad saf dsaf sad"},cells:["bug"],viewMode:"board"});testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:Constants.EntityTypes.USERSTORY,release:Constants.EntityTypes.RELEASE,feature:Constants.EntityTypes.FEATURE},practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id}},processes={scrum:{name:"scrum"+ +(new Date),practices:["planning","requirements"]}},projects={p_scrum:{name:"Project Scrum"+ +(new Date),process:"scrum"}},fixtures={entityTypes:entityTypes,practices:practices,processes:processes,projects:projects};test.set("fixtures",fixtures),next()}),testKit.registerSetup("componentBus",function(test,next){test.set("componentBus",test.get("componentClass").create({extensions:[ExtensionEditor,ExtensionChildrenEvents]})),next()}),testKit.registerSetup("component.initialize",function(test,next){var configuratorInstance=test.get("configurator"),store=configuratorInstance.getStore();configuratorInstance.getClipboardManager().restStorage.sources.splice(0,1);var boardSettings=configuratorInstance.getBoardSettingsFactory().createInstance(test.get("board.definition"));configuratorInstance.registerService("boardSettings",boardSettings),configuratorInstance.setLoggedUser({id:1,name:"Me",role:"Developer",isAdministrator:!0});var testData=test.get("data"),projectID=testData.project.p_scrum.id;test.get("real")===!1&&sinon.stub(store.config.proxy.service,"get",function(command){command.callbacks.success({id:command.config.id,acid:"234567896789322345l"})}),store.get("context",{projectId:projectID,fields:["acid"]},{success:function(r){var componentConfig={context:{configurator:configuratorInstance,acid:r.data[0].acid},children:[{type:"board.toolbar"},{type:"board.editor"},{type:"board.plus",min:1,max:6,defaultValue:3}]},componentBus=test.get("componentBus");componentBus.initialize(componentConfig),componentBus.fire("boardSettings.ready",{boardSettings:boardSettings}),next()}}).done()});var testCase={name:"component.board.plus.board.no.data.slice"};return testCase["should render and refresh board if no data slice"]=testKit.test(function(test){var bus=test.get("bus"),testFlow={bus:bus,"bus board.editor.$form.ready[0] + board.plus.no.data.in.slice[0]":function(evt,renderData){test.ok(!0,"set board with no data");var filter=renderData.find("[name=x_filter]");filter.val(""),renderData.trigger("_change")},"bus  board.plus.refresh[0]":function(evt,renderData){test.ok(!0,"refresh with no data"),test.done()}};Event.subscribeOn(testFlow)}),testCase})