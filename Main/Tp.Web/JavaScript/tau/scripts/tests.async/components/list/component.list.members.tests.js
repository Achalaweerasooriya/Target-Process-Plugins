define(["jQuery","Underscore","tests.async/testkit/testkit.component","tau/components/component.list.editable","tests/common/remoteConstants","tau/models/dataProviders/model.provider.members.items","tau/ui/extensions/list/members/extension.list.members.action.detach","tau/ui/extensions/list/members/extension.list.members.refresher","tau/ui/templates/list_/ui.template.list.members"],function($,_,TestKit,Component,Constants,MembersProvider,MembersDetachExtension,MembersRefreshExtension,MembersTemplate){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={project:{id:Constants.EntityTypes.PROJECT.id,name:"project"}},practices={planning:{id:Constants.Practices.PLANNING.id}},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"]}},projects={project1:{name:"Project 1"+parseInt(Math.random()*1e11),process:"scrum",entityType:"project"}},users={user1:{firstName:"Ivan",lastName:"Pupkin",email:"pupkin1"+ +(new Date)+"@example.com",login:"pupkin1"+ +(new Date),password:123123,entityType:"user"},user2:{firstName:"Ivan",lastName:"Pupkin",email:"pupkin2"+ +(new Date)+"@example.com",login:"pupkin2"+ +(new Date),password:123123,entityType:"user"},user3:{firstName:"Ivan",lastName:"Pupkin",email:"pupkin3"+ +(new Date)+"@example.com",login:"pupkin3"+ +(new Date),password:123123,entityType:"user"}},roles={admin:{name:"Admin"+ +(new Date)},qa:{name:"QA"+ +(new Date)}},projectMembers={pm1:{project:"project1",user:"user1",role:"admin"},pm2:{project:"project1",user:"user2",role:"qa"},pm3:{project:"project1",user:"user3",role:"qa"}},fixtures={entityTypes:entityTypes,practices:practices,processes:processes,projects:projects,users:users,roles:roles,projectMembers:projectMembers};test.set("fixtures",fixtures),next()}),testKit.registerSetup("componentBus",function(test,next){var testData=test.get("data"),configurator=test.get("configurator");configurator.setLoggedUser(testData.user.user1);var componentConfig={type:"list.editable",itemsDataProvider:MembersProvider,template:MembersTemplate,extensions:[MembersDetachExtension,MembersRefreshExtension],views:[{type:"grid.entity",name:"project",emptyMessage:"No projects have been assigned"}],context:{configurator:configurator,getTimeTrackingPolicies:function(){return[]}}};test.set("componentBus",test.get("componentClass").create(componentConfig)),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({context:{configurator:test.get("configuratorInstance"),entity:testData.project.project1,getTerms:function(){return{}}}}),next()});var testCase={name:"component.list.members"};return testCase["should render valid markup"]=testKit.test(function(test){return testKit.flow(test,{"bus afterRender[0]":function(evt,renderData){var $el=renderData.element;test.equals($el.length,1,"should render list");var $items=$el.find("[role=item]");test.equals($items.length,4,"should show 4 members");var $detachButtons=$items.find("[role=action-detach]");test.equals($detachButtons.length,4,"should show 4 detach buttons");var testData=test.get("data"),names=_.map($items.find(".tau-name"),function(name){return $(name).text()}),expectedNames=_.map(testData.user,function(user){return user.firstName+" "+user.lastName});expectedNames.unshift("Administrator Administrator"),test.deepEqual(names,expectedNames,"should show member names");var emails=_.map($items.find(".tau-email"),function(email){return $(email).text()}),expectedEmails=_.map(testData.user,function(user){return user.email});expectedEmails.unshift("admin@nonexistingemail.com"),test.deepEqual(emails,expectedEmails,"should show member emails"),test.done()}})}),testCase["should detach members"]=testKit.test(function(test){return testKit.flow(test,{"bus afterRender[0]":function(evt,renderData){var $el=renderData.element,$items=$el.find("[role=item]");test.equals($items.length,4,"should show 4 members before detach");var $detachButtons=$items.find("[role=action-detach]");test.equals($detachButtons.length,4,"should show 4 detach buttons"),$detachButtons.last().trigger("click")},"bus afterRender[1]":function(evt,renderData){var $el=renderData.element,$items=$el.find("[role=item]");test.equals($items.length,3,"should show 3 members after detach"),test.done()}})}),testCase})