define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.customField.richtext","tests/common/remoteConstants"],function($,TestKit,Component,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},customFields={},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"],customFields:[{name:"Tttext",fieldType:"RichText",entityType:{id:Constants.EntityTypes.USERSTORY.id}},{name:"Other Lnk",fieldType:"URL",entityType:{id:Constants.EntityTypes.USERSTORY.id}},{name:"NumberOfGod",fieldType:"Number",entityType:{id:Constants.EntityTypes.USERSTORY.id}}]}},projects={p_scrum:{name:"Project Scrum"+(new Date).getTime(),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum",customFields:[{name:"Tttext",type:"RichText",value:"<b>preved</b>medved"},{name:"Other Lnk",type:"URL",value:null},{name:"NumberOfGod",type:"Number",value:null}]}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,customFields:customFields,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({disableAutoSave:!0,store:test.get("configurator").getStore(),customField:{name:"Tttext",type:"RichText"},context:{entity:testData.userStory.us1,applicationContext:{processes:[testData.process.scrum],selectedProjects:[testData.project.p_scrum]},getCustomFields:function(){return[{name:"Tttext",type:"RichText"},{name:"Lnk",type:"URL"},{name:"NumberOfGod",type:"Number"}]}}}),next()});var testCase={name:"component.customField.richtest","should render valid markup and allow to edit":testKit.test(function(test){var bus=test.get("bus");bus.on("afterRender[0]",function(evt){var $el=evt.data.element;test.equals($el.find(".ui-customfield__value").text().trim(),"prevedmedved","value is valid"),$el.find(".ui-customfield__value").dblclick();var $editor=$el.find("textarea");test.equals($editor.length,1,"Can edit"),test.equals($editor.val(),"<b>preved</b>medved");var $buttons=$el.find("button");test.equals($buttons.length,1,"Buttons"),$editor.val("hello <i>world</i>"),$buttons.eq(0).click()}),bus.on("afterRender[1]",function(evt){var $el=evt.data.element;test.equals($el.find(".ui-customfield__value").text().trim(),"hello world","value is valid"),test.done()})})};return testCase})