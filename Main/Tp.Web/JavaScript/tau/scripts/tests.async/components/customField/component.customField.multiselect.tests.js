define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.customField.multiselect","tests/common/remoteConstants"],function($,TestKit,Component,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},customFields={},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"],customFields:[{name:"Chooose",fieldType:"MultipleSelectionList",entityType:{id:Constants.EntityTypes.USERSTORY.id},value:["a","b","c","d"].join("\r\n")},{name:"Other Lnk",fieldType:"URL",entityType:{id:Constants.EntityTypes.USERSTORY.id}},{name:"NumberOfGod",fieldType:"Number",entityType:{id:Constants.EntityTypes.USERSTORY.id}}]}},projects={p_scrum:{name:"Project Scrum"+(new Date).getTime(),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum",customFields:[{name:"Chooose",type:"MultipleSelectionList",value:["a","d"].join(",")},{name:"Other Lnk",type:"URL",value:null},{name:"NumberOfGod",type:"Number",value:null}]}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,customFields:customFields,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({store:test.get("configurator").getStore(),customField:{name:"Chooose",type:"MultipleSelectionList",value:["a","b","c","d"].join("\r\n")},context:{entity:testData.userStory.us1,applicationContext:{processes:[testData.process.scrum],selectedProjects:[testData.project.p_scrum]},getCustomFields:function(){return[{name:"Chooose",type:"MultipleSelectionList",value:["a","b","c","d"].join("\r\n")},{name:"Lnk",type:"URL"},{name:"NumberOfGod",type:"Number"}]}}}),next()});var testcase={name:"component.customField.multiselect"};return testcase["should render valid markup and allow to edit"]=testKit.test(function(test){var bus=test.get("bus");bus.on("afterRender[0]",function(evt){var $el=evt.data.element;test.equals($el.find(".ui-customfield__label").text().trim(),"Chooose","Name is valid"),test.equals($el.find(".ui-customfield__value").text().trim(),"a, d","value is valid");var $tr=$el.find("tr");test.ok($tr.data().tauBubble,"Can edit"),$tr.bind("taububbleloadcontent",function(){var $popup=$tr.tauBubble("widget"),$options=$popup.find("[role=option]");test.equals($options.length,4,"Show options"),test.ok($options.eq(0).hasClass("tau-option_selected_true"),"selected"),test.ok($options.eq(0).text(),"a"),test.ok(!$options.eq(1).hasClass("tau-option_selected_true"),"selected"),test.ok($options.eq(1).text(),"b"),test.ok(!$options.eq(2).hasClass("tau-option_selected_true"),"selected"),test.ok($options.eq(2).text(),"c"),test.ok($options.eq(3).hasClass("tau-option_selected_true"),"selected"),test.ok($options.eq(3).text(),"d");var $buttons=$popup.find(":button");test.equals($buttons.length,2,"Has buttons"),$options.eq(0).click(),$options.eq(1).click(),$buttons.eq(0).click()}),$tr.click()}),bus.on("afterRender[1]",function(evt){var $el=evt.data.element;test.equals($el.find(".ui-customfield__label").text().trim(),"Chooose","Name is valid"),test.equals($el.find(".ui-customfield__value").text().trim(),"b, d","value is valid"),test.done()})}),testcase["should process empty"]=testKit.test(function(test){var bus=test.get("bus");bus.on("afterRender[0]",function(evt){var $el=evt.data.element;test.equals($el.find(".ui-customfield__label").text().trim(),"Chooose","Name is valid"),test.equals($el.find(".ui-customfield__value").text().trim(),"a, d","value is valid");var $tr=$el.find("tr");$tr.bind("taububbleloadcontent",function(){var $popup=$tr.tauBubble("widget"),$reset=$popup.find("[role=action-reset]");test.equals($reset.length,1,"Reset link"),$reset.click()}),$tr.click()}),bus.on("afterRender[1]",function(evt){var $el=evt.data.element;test.equals($el.find(".ui-customfield__label").text().trim(),"Chooose","Name is valid"),test.equals($el.find(".ui-customfield__value").text().trim(),"","value is valid"),test.done()})}),testcase})