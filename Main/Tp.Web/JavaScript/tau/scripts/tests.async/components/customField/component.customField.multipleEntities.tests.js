define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.customField.multipleEntities","tau/models/dataProviders/customField/customField.multipleEntities.model.provider.entities.items","tests/common/remoteConstants"],function($,TestKit,Component,DataProvider,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},customFields={},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"],customFields:[{name:"some related entities",fieldType:"MultipleEntities",entityType:{id:Constants.EntityTypes.USERSTORY.id},value:""}]}},projects={p_scrum:{name:"Project Scrum"+parseInt(Math.random()*1e11),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum",customFields:[{name:"some related entities",type:"MultipleEntities",value:""}]}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,customFields:customFields,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("componentBus",function(test,next){var componentConfig={itemsDataProvider:DataProvider,views:[{type:"customField.multipleEntities",emptyMessage:"No projects was assigned"}],context:{configurator:test.get("configurator"),getTimeTrackingPolicies:function(){return[]}}};test.set("componentBus",test.get("componentClass").create(componentConfig)),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data");test.get("componentBus").initialize({store:test.get("configurator").getStore(),customField:{name:"some related entities",type:"MultipleEntities",value:""},context:{entity:testData.userStory.us1,applicationContext:{processes:[testData.process.scrum],selectedProjects:[testData.project.p_scrum]},getCustomFields:function(){return[this.customField]}}}),next()});var testcase={name:"component.customField.multipleEntities"};return testcase["should add and remove entities"]=testKit.test(function(test){var bus=test.get("bus"),testData=test.get("data"),entityId=-1;bus.on("afterRender[0]",function(evt,initEvt){var $el=initEvt.element,addControl=$el.find(".i-role-action-attach");test.equals(addControl.length,1,"some related entities"),bus.on("childComponentCreated",function(evt){evt.data.on("dataRendered",function(){var $widget=addControl.tauBubble("widget"),$entity=$widget.find(".tau-result-list-row td").eq(0);entityId=$entity.text(),$entity.click()})}),addControl.click()}),bus.on("afterRender[1]",function(evt,initEvt){var $el=initEvt.element,attachedId=$el.find(".tau-list__table__cell-id").text();test.equals(entityId,attachedId,"entity was attached");var detachControl=$el.find(".i-role-action-detach");detachControl.click()}),bus.on("afterRender[2]",function(evt,initEvt){var $el=initEvt.element,emptyMessage=$el.find(".tau-list__empty-message").text();test.equals(emptyMessage,"No items.","entity was detached"),test.done()})}),testcase})