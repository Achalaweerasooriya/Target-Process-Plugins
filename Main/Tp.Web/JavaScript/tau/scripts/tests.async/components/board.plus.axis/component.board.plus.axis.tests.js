define(["Underscore","jQuery","tau/core/event","tests.async/testkit/testkit.component.board","tau/components/component.board.container","tests/common/remoteConstants","tau/ui/extensions/container/ui.extension.container.childrenEvents"],function(_,$,Event,TestKit,ComponentBoardPlus,Constants,ExtensionChildrenEvents){var testKit=new TestKit(ComponentBoardPlus,{x:{types:["release"]},y:{types:["feature"]},viewMode:"board"});testKit.registerSetup("fixtures",function(test,next){test.set("real",!1);var entityTypes={us:Constants.EntityTypes.USERSTORY,release:Constants.EntityTypes.RELEASE,feature:Constants.EntityTypes.FEATURE},practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id}},processes={scrum:{name:"scrum"+ +(new Date),practices:["planning","requirements"]}},projects={p_scrum:{name:"Project Scrum"+ +(new Date),process:"scrum"}},releases={},features={};for(var r=0;r<4;r++){var releaseName="release"+r;releases[releaseName]={name:"Release_"+r+"_"+ +(new Date),entityType:"release",project:"p_scrum"};var featureName="feature"+r;features[featureName]={name:"Feature_"+r+"_"+ +(new Date),entityType:"feature",project:"p_scrum",release:releaseName}}var userStories={};_(releases).chain().keys().each(function(releaseId){_(features).chain().keys().each(function(featureId){for(var s=0;s<4;s++){var userStoryName=["us",releaseId,featureId,s].join("_");userStories[userStoryName]={name:userStoryName,entityType:"us",project:"p_scrum",release:releaseId,feature:featureId}}})});var fixtures={entityTypes:entityTypes,practices:practices,processes:processes,projects:projects,releases:releases,features:features};test.set("fixtures",fixtures),next()}),testKit.registerSetup("componentBus",function(test,next){test.set("componentBus",test.get("componentClass").create({extensions:[ExtensionChildrenEvents]})),next()}),testKit.registerSetup("component.initialize",function(test,next){var configuratorInstance=test.get("configurator"),store=configuratorInstance.getStore();configuratorInstance.setLoggedUser({id:1,name:"Me",role:"Developer",isAdministrator:!0});var testData=test.get("data"),projectID=testData.project.p_scrum.id;test.get("real")===!1&&sinon.stub(store.config.proxy.service,"get",function(command){command.callbacks.success({id:command.config.id,acid:"234567896789322345l"})}),store.get("context",{projectId:projectID,fields:["acid"]},{success:function(r){var componentBus=test.get("componentBus"),componentConfig={context:{configurator:configuratorInstance,acid:r.data[0].acid}};componentConfig.children=[{type:"board.toolbar"},{type:"board.plus",min:1,max:5,defaultValue:3}],componentBus.initialize(componentConfig);var boardSettingsConfig=test.get("board.definition"),boardSettings=configuratorInstance.getBoardSettingsFactory().createInstance(boardSettingsConfig);componentBus.fire("boardSettings.ready",{boardSettings:boardSettings}),next()}}).done()});var testcase={name:"component.board.plus.axis"};return testcase["collapse should work"]=testKit.test(function(test){var bus=test.get("bus"),testFlow={bus:bus,"bus afterRender[0]":function(evt){var $el=evt.data.element,$colHeader=$el.find("[role=header][data-dimension=x]");test.equals($colHeader.length,1,"Show header");var $cols=$colHeader.find("[role=cellholder]");test.ok($cols.length>0,"Show cols");var $colsExpanders=$cols.find("[role=collapser]");test.equals($cols.length,$colsExpanders.length,"Show expanders");var $rowHeader=$el.find("[role=header][data-dimension=y]");test.equals($rowHeader.length,1,"Show header");var $rows=$rowHeader.find("[role=cellholder]");test.ok($rows.length>0,"Show cols");var $rowsExpanders=$rows.find("[role=collapser]");test.equals($rows.length,$rowsExpanders.length,"Show expanders");var $colExpander=$colsExpanders.eq(1),$col=$cols.eq(1),x=$col.find("[role=cell]").data("x"),$innerColHolders=$el.find("[role=grid] [role=cellholder]:has([role=cell][data-x="+x+"])");test.ok($innerColHolders.length>0,"Column cells"),test.done()}};Event.subscribeOn(testFlow)}),testcase["focus should work"]=testKit.test(function(test){var bus=test.get("bus"),testFlow={bus:bus,"bus afterRender[1]":function(evt){var $el=evt.data.element,$focusButton=$el.find("[role=action-focus]"),$unfocusButton=$el.find("[role=action-unfocus]");test.equals($focusButton.is(":enabled"),!1,"Disable focus"),test.equals($unfocusButton.is(":enabled"),!0,"Enable unfocus")},"bus board.plus.overview.board.ready[1]":function(evt){var $el=evt.data.element,$colHeader=$el.find("[role=header][data-dimension=x]"),$gridCells=$el.find("[role=grid] [role=cellholder]");test.ok($gridCells.length>0,"grid cells"),test.done()},"bus afterRender[0]":function(evt){var $el=evt.data.element,$focusButton=$el.find("[role=action-focus]"),$unfocusButton=$el.find("[role=action-unfocus]");test.equals($focusButton.length,1,"Actions"),test.equals($unfocusButton.length,1,"Actions"),test.ok($focusButton.is(":disabled"),"Disabled by default"),test.ok($unfocusButton.is(":disabled"),"Disabled by default");var $colHeader=$el.find("[role=header][data-dimension=x]"),$rowHeader=$el.find("[role=header][data-dimension=y]");test.equals($colHeader.length,1,"Show header");var $cols=$colHeader.find("[role=cellholder]");test.ok($cols.length>0,"Show cols");var $colFocusers=$colHeader.find("[name=focus]");test.equals($colFocusers.length,$cols.length,"Focusers");var $colFocuser=$colFocusers.eq(2),$col=$cols.eq(2),x=$col.find("[role=cell]").data("x");test.equals($col.length,1,"Cellholder to focus"),test.ok(x,"has x");var $colToHide=$cols.eq(1);test.equals($colToHide.length,1,"Cellholder to focus"),test.equals(!!$col.attr("data-is-hidden"),!1,"not hide"),test.equals(!!$colToHide.attr("data-is-hidden"),!1,"not hide");var $innerColHolders=$el.find("[role=grid] [role=cellholder]:has([role=cell][data-x="+x+"])");test.ok(!$colFocuser.prop("checked"),"not checked"),$colFocuser.prop("checked",!0),$colFocuser.trigger("change"),test.ok($focusButton.is(":enabled"),"Enabled"),test.ok(!$unfocusButton.is(":enabled"),"Enabled"),test.ok($innerColHolders.hasClass("tau-selected"),"Selected"),$focusButton.click()}};Event.subscribeOn(testFlow)}),testcase})