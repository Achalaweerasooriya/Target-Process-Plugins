define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.attachmentsPreview","tests/common/remoteConstants","libs.tests/jquery.simulate"],function($,TestKit,Component,Constants){function ensureComponentSrcMatchAttachmentURI($component,attachment,test){if(test.get("real")){var expectedPattern=new RegExp("/Attachment.aspx\\?AttachmentID\\="+attachment.id);test.equals($component.attr("src").search(expectedPattern)>-1,!0)}else test.equals($component.attr("src"),attachment.uri)}function ensureComponentSrcMatchAttachmentThumbURI($component,attachment,test){if(test.get("real")){var expectedPattern=new RegExp("/AttachmentThumbnail.aspx\\?AttachmentID\\="+attachment.id);test.equals($component.attr("src").search(expectedPattern)>-1,!0)}else test.equals($component.attr("src"),attachment.thumbnailUri)}var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"]}},projects={p_scrum:{name:"Project Scrum"+parseInt(Math.random()*1e11),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum",attachments:["a1","a2","a3"]}},attachments={a1:{name:"a1",mimeType:"image/png",uri:"http://catz1.png",thumbnailUri:"http://catz1-thumb.png"},a2:{name:"a2",mimeType:"image/png",uri:"http://catz2.png",thumbnailUri:"http://catz2-thumb.png"},a3:{name:"a3",mimeType:"image/png",uri:"http://catz3.png",thumbnailUri:"http://catz3-thumb.png"}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,userStories:userStories,attachments:attachments};test.set("fixtures",fixtures),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({context:{entity:testData.userStory.us1,configurator:test.get("configurator")},selected:testData.attachment.a2}),next()});var testcase={name:"component.attachmentsPreview"};return testcase["should render valid markup"]=testKit.test(function(test){var bus=test.get("bus"),attachments=test.get("data").attachment;bus.on("afterRender[0]",function(evt){var $previewContainer=evt.data.element;test.equals($previewContainer.length,1,"Render root element");var $thumbs=$previewContainer.find(".thumbnail-nav li img");test.equals($thumbs.length,3,"Thumbnails should be"),test.equals($thumbs.eq(0).hasClass("selected"),!1,"Only second thumb should be selected"),test.equals($thumbs.eq(1).hasClass("selected"),!0,"Only second thumb should be selected"),test.equals($thumbs.eq(2).hasClass("selected"),!1,"Only second thumb should be selected"),ensureComponentSrcMatchAttachmentThumbURI($thumbs.eq(0),attachments.a1,test),ensureComponentSrcMatchAttachmentThumbURI($thumbs.eq(1),attachments.a2,test),ensureComponentSrcMatchAttachmentThumbURI($thumbs.eq(2),attachments.a3,test);var $closeButton=$previewContainer.find(".toolbar .close");test.equals($closeButton.length,1,"Close button should be");var $prevButton=$previewContainer.find(".toolbar .prev"),$nextButton=$previewContainer.find(".toolbar .next");test.equals($prevButton.length,1,"Prev image button should be"),test.equals($nextButton.length,1,"Next image button should be");var $selectedImage=$previewContainer.find(".swap-view .image-view img.ui-attachment-view-image");test.equals($selectedImage.length,1,"Image preview should be"),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a2,test),test.done()})}),testcase["should select image on thumbnail click"]=testKit.test(function(test){var bus=test.get("bus"),attachments=test.get("data").attachment;bus.on("afterRender[0]",function(evt){var $previewContainer=evt.data.element,$thumbs=$previewContainer.find(".thumbnail-nav li img"),$selectedImage=$previewContainer.find(".swap-view .image-view img.ui-attachment-view-image");$thumbs.eq(0).click(),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a1,test),$thumbs.eq(1).click(),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a2,test),$thumbs.eq(2).click(),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a3,test),test.done()})}),testcase["should handle prev button click"]=testKit.test(function(test){var bus=test.get("bus"),attachments=test.get("data").attachment;bus.on("afterRender[0]",function(evt){var $previewContainer=evt.data.element,$prevButton=$previewContainer.find(".toolbar .prev"),$thumbs=$previewContainer.find(".thumbnail-nav li img"),$selectedImage=$previewContainer.find(".swap-view .image-view img.ui-attachment-view-image");$thumbs.eq(1).click(),$prevButton.click(),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a1,test),$thumbs.eq(0).click(),$prevButton.click(),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a3,test),test.done()})}),testcase["should handle next button click"]=testKit.test(function(test){var bus=test.get("bus"),attachments=test.get("data").attachment;bus.on("afterRender[0]",function(evt){var $previewContainer=evt.data.element,$nextButton=$previewContainer.find(".toolbar .next"),$thumbs=$previewContainer.find(".thumbnail-nav li img"),$selectedImage=$previewContainer.find(".swap-view .image-view img.ui-attachment-view-image");$thumbs.eq(1).click(),$nextButton.click(),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a3,test),$thumbs.eq(2).click(),$nextButton.click(),ensureComponentSrcMatchAttachmentURI($selectedImage,attachments.a1,test),test.done()})}),testcase["should handle close button"]=testKit.test(function(test){var bus=test.get("bus");bus.on("afterRender[0]",function(evt){var $previewContainer=evt.data.element,$closeButton=$previewContainer.find(".toolbar .close");$closeButton.click()}),bus.on("closed",function(){test.done()})}),testcase["should handle esc button"]=testKit.test(function(test){var bus=test.get("bus");bus.on("afterRender[0]",function(){$(document).simulate("keydown",{keyCode:$.ui.keyCode.ESCAPE})}),bus.on("closed",function(){test.done()})}),testcase["should handle user click on empty space"]=testKit.test(function(test){var bus=test.get("bus");bus.on("afterRender[0]",function(evt){var $previewContainer=evt.data.element;$previewContainer.click()}),bus.on("closed",function(){test.done()})}),testcase})