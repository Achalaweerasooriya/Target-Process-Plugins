define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.menu.actions","tau/core/termProcessor","tests/common/remoteConstants"],function($,TestKit,Component,TermPocessor,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},customFields={},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"]}},projects={p_scrum:{name:"Project Scrum"+parseInt(Math.random()*1e11),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum",description:'Hell yeah <b>bzzz</b> <img src="~/porn/gallery1/boobs.jpg" />'}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");next()});var testcase={name:"component.menu.actions"};return testcase["should render valid markup with no actions"]=testKit.test(function(test){testKit.flow(test,{"bus afterRender[0]":function(evt){var $el=evt.data.element,$trigger=$el.find(".ui-menu__trigger"),$popup=$el.find(".ui-menu__popup");test.equals($el.length,1,"Element rendered"),test.equals($trigger.length,1,"Element rendered"),test.equals($popup.length,1,"Element rendered");var $actions=$popup.find(".ui-menu__item");test.equals($actions.length,0,"No actions by default"),test.done()}});var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({context:{entity:testData.userStory.us1,configurator:test.get("configuratorInstance")}})}),testcase["should render valid markup with actions"]=testKit.test(function(test){var menuaction;testKit.flow(test,{"bus afterRender[0]":function(evt){var $el=evt.data.element,$trigger=$el.find(".ui-menu__trigger"),$popup=$el.find(".ui-menu__popup");test.equals($el.length,1,"Element rendered"),test.equals($trigger.length,1,"Element rendered"),test.equals($popup.length,1,"Element rendered");var $actions=$popup.children().children();test.equals($actions.length,4,"4 items");var $action=$actions.eq(0);test.equals($action.is("div.ui-menu__item.ui-menu__item-action"),!0,"first action"),test.equals($action.text(),"Add Task","first action"),$action.click(),test.equals(menuaction,"Alarm","first action"),test.done()}});var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({context:{entity:testData.userStory.us1,configurator:test.get("configuratorInstance")},items:[{label:"Add Task",alias:"addtask",command:function(){menuaction="Alarm"}},{label:"Add Bug",alias:"addbug",url:"http://porn.com",command:function(){menuaction="Upyachka"}},"-",{label:"Add Time",alias:"addtime",confirmation:"Are you sure?",command:function(){menuaction="My vse umrem"}}]})}),testcase["should render convert action submenu"]=testKit.test(function(test){var menuaction;testKit.flow(test,{"bus afterRender[0]":function(evt){var $el=evt.data.element,$trigger=$el.find(".ui-menu__trigger"),$popup=$el.find(".ui-menu__popup");test.equals($el.length,1,"Element rendered"),test.equals($trigger.length,1,"Element rendered"),test.equals($popup.length,1,"Element rendered");var $actions=$popup.children().children();test.equals($actions.length,2,"1 items"),$trigger.click();var $action=$actions.eq(1);$action.click()},"bus $submenu.ready[0]":function(evt,$submenu){var $items=$submenu.find(".ui-menu__item");test.equals($items.length,1,"Only one convert action");var id=$items.data("id"),name=$items.data("name");test.equals(id,8,"Bug entityType returned"),test.equals(name,"Bug","Bug entityType returned"),test.done()}});var testData=test.get("data"),componentBus=test.get("componentBus"),configurator=test.get("configuratorInstance");sinon.stub(configurator.getActionsService(),"getEntityTypesToConvert",function(id){var deffered=$.Deferred();return deffered.resolve([{id:8,name:"Bug"}])}),componentBus.initialize({context:{entity:testData.userStory.us1,configurator:configurator,getTerms:$.noop},items:[{label:"Add Task",alias:"addtask",command:function(){menuaction="Alarm"}},{label:"Convert",alias:"convert"}]})}),testcase["should convert entity"]=testKit.test(function(test){var _generalId,_entityTypeId,testData=test.get("data"),componentBus=test.get("componentBus"),configurator=test.get("configuratorInstance");testKit.flow(test,{"bus afterRender[0]":function(evt){var $el=evt.data.element,$trigger=$el.find(".ui-menu__trigger"),$popup=$el.find(".ui-menu__popup"),$actions=$popup.children().children();$trigger.click();var $action=$actions.eq(1);$action.click()},"bus $submenu.ready[0]":function(evt,$submenu){var $items=$submenu.find(".ui-menu__item");$items.click();var $bubble=$("body").find(".tau-bubble");test.ok($bubble.is(":visible"),"Confirmation is visible");var $okButton=$bubble.find(".i-role-actionok");test.equals($okButton.length,1,"Ok button is present"),$okButton.click()},"bus generalWasConverted":function(evt,data){test.equals(_generalId,testData.userStory.us1.id,"convert selected entity"),test.equals(_entityTypeId,8,"convert to selected entity type"),test.done()}}),sinon.stub(configurator.getActionsService(),"getEntityTypesToConvert",function(id){var deffered=$.Deferred();return deffered.resolve([{id:8,name:"Bug"}])}),sinon.stub(configurator.getActionsService(),"convertGeneralToType",function(generalId,entityTypeId,convertSuсcess,convertFailed){_generalId=generalId,_entityTypeId=entityTypeId;var callback=convertSuсcess,success=function(){callback({d:{EntityTypeName:"Tp.Entity.Bug",GeneralID:4}})};setTimeout(success,1)}),sinon.stub(configurator.getHistory(),"exclude",function(generalId,_){test.equals(generalId,_generalId,"Correct entity excluded")}),sinon.stub(configurator.getRouter(),"navigate",function(hash){test.equals(hash,"#bug/4","Redirect to new entity")}),componentBus.initialize({context:{entity:testData.userStory.us1,configurator:configurator,getTerms:$.noop},items:[{label:"Add Task",alias:"addtask",command:function(){menuaction="Alarm"}},{label:"Convert",alias:"convert"}]})}),testcase})