define(["Underscore","jQuery","tau/core/event","tests.async/testkit/testkit.component","tests/common/remoteConstants","tau/components/component.container","tau/ui/extensions/board.plus/ui.extension.board.plus.cardsUpdater","tau/models/board.plus/model.dataUpdater","tau/utils/utils.date","tau/ui/extensions/board.plus/ui.board.plus.utils","tau/ui/extensions/ui.extension.templateBinder","tau/ui/templates/board.plus/ui.template.boardplus.card.skeleton","tau/ui/templates/board.plus/ui.template.boardplus.card.userStory"],function(_,$,a,b,c,d,e,f,g,h,i){var j={create:function(a){return a=a||{},a=_.extend(a,{extensions:[i,e,f]}),d.create(a)}},k=10,l=new b(j);l.registerSetup("fixtures",function(a,b){var d={us:c.EntityTypes.USERSTORY,release:c.EntityTypes.RELEASE,feature:c.EntityTypes.FEATURE,task:c.EntityTypes.TASK,bug:c.EntityTypes.BUG,impediment:c.EntityTypes.IMPEDIMENT},e={planning:{id:c.Practices.PLANNING.id},requirements:{id:c.Practices.REQUIREMENTS.id},bugTracking:{id:c.Practices["BUG TRACKING"].id}},f={open:{name:"Open"+ +(new Date),numericPriority:1,entityType:"impediment",process:"scrum"},inprogress:{name:"In Progress "+ +(new Date),numericPriority:2,entityType:"impediment",process:"scrum"},done:{name:"Done "+ +(new Date),numericPriority:3,isFinal:!0,isPlanned:!1,isInitial:!1,entityType:"impediment",process:"scrum"},openTask:{name:"Open Task"+ +(new Date),numericPriority:1,isInitial:!0,entityType:"task",process:"scrum"},plannedTask:{name:"Planned Task"+ +(new Date),numericPriority:1,isPlanned:!0,entityType:"task",process:"scrum"},inprogressTask:{name:"In Progress Task"+ +(new Date),numericPriority:2,entityType:"task",process:"scrum"},doneTask:{name:"Done Task"+ +(new Date),numericPriority:3,isFinal:!0,isPlanned:!1,isInitial:!1,entityType:"task",process:"scrum"},openBug:{name:"Open Bug"+ +(new Date),numericPriority:1,isInitial:!0,entityType:"bug",process:"scrum"},plannedBug:{name:"Planned Bug"+ +(new Date),numericPriority:1,isPlanned:!0,entityType:"bug",process:"scrum"},inprogressBug:{name:"In Progress Bug"+ +(new Date),numericPriority:2,entityType:"bug",process:"scrum"},doneBug:{name:"Done Bug"+ +(new Date),numericPriority:3,isFinal:!0,isPlanned:!1,isInitial:!1,entityType:"bug",process:"scrum"}},g={scrum:{name:"scrum"+ +(new Date),practices:["planning","requirements","bugTracking"]}},h={p_scrum:{name:"Project Scrum"+ +(new Date),process:"scrum"}},i={openImpediment:{isPrivate:!1,name:"Open Impediment"+ +(new Date),entityState:"open",project:"p_scrum",assignable:"userStory_0"},open1Impediment:{isPrivate:!1,name:"Open Impediment"+ +(new Date),entityState:"open",project:"p_scrum",assignable:"userStory_0"},closeImpediment:{isPrivate:!1,name:"Close Impediment"+ +(new Date),entityState:"done",project:"p_scrum",assignable:"userStory_0"},close2Impediment:{isPrivate:!1,name:"Close Impediment"+ +(new Date),entityState:"done",project:"p_scrum",assignable:"userStory_2"}},j={openTask:{isPrivate:!1,name:"Open Impediment"+ +(new Date),entityState:"openTask",project:"p_scrum",userStory:"userStory_5"},plannedTask:{isPrivate:!1,name:"Open Impediment"+ +(new Date),entityState:"plannedTask",project:"p_scrum",userStory:"userStory_5"},inprogressTask1US5:{isPrivate:!1,name:"In progress 1 Task"+ +(new Date),entityState:"inprogressTask",project:"p_scrum",userStory:"userStory_5"},inprogressTask2US5:{isPrivate:!1,name:"In progress 2 Task"+ +(new Date),entityState:"inprogressTask",project:"p_scrum",userStory:"userStory_5"},doneTask1US5:{isPrivate:!1,name:"Close 1 Task"+ +(new Date),entityState:"doneTask",project:"p_scrum",userStory:"userStory_5"},doneTask2US5:{isPrivate:!1,name:"Close 2 Task"+ +(new Date),entityState:"doneTask",project:"p_scrum",userStory:"userStory_5"}},l={openBug:{isPrivate:!1,name:"Open Bug"+ +(new Date),entityState:"openBug",project:"p_scrum",userStory:"userStory_5"},plannedBug:{isPrivate:!1,name:"Open Bug"+ +(new Date),entityState:"plannedBug",project:"p_scrum",userStory:"userStory_5"},planned2Bug:{isPrivate:!1,name:"Planned Bug 2"+ +(new Date),entityState:"plannedBug",project:"p_scrum",userStory:"userStory_5"},inprogressBug1US5:{isPrivate:!1,name:"In progress 1 Bug"+ +(new Date),entityState:"inprogressBug",project:"p_scrum",userStory:"userStory_5"},inprogressBug2US5:{isPrivate:!1,name:"In progress 2 Bug"+ +(new Date),entityState:"inprogressBug",project:"p_scrum",userStory:"userStory_5"},inprogressBug3US5:{isPrivate:!1,name:"In progress 3 Bug"+ +(new Date),entityState:"inprogressBug",project:"p_scrum",userStory:"userStory_5"},inprogressBug4US5:{isPrivate:!1,name:"In progress 4 Bug"+ +(new Date),entityState:"inprogressBug",project:"p_scrum",userStory:"userStory_5"},doneBug1US5:{isPrivate:!1,name:"Close 1 Bug"+ +(new Date),entityState:"doneBug",project:"p_scrum",userStory:"userStory_5"},doneBug2US5:{isPrivate:!1,name:"Close 2 Bug"+ +(new Date),entityState:"doneBug",project:"p_scrum",userStory:"userStory_5"}},m={};for(var n=0;n<k;n++){var o=["userStory",n].join("_");m[o]={name:o,description:"UserStoryDescription_"+n,entityType:"us",project:"p_scrum",tags:"user_story_tag_"+n}}var p={entityTypes:d,practices:e,processes:g,entityStates:f,projects:h,tasks:j,bugs:l,userStories:m,impediments:i};a.set("fixtures",p),b()}),l.registerSetup("component.initialize",function(a,b){var c=a.get("configurator"),d=c.getStore(),e=a.get("data"),f=_.map(e.userStory,function(a){return{id:a.id,type:a.entityType.name,name:a.name}});a.set("dataForRegistration",f);var g=a.get("componentBus"),h={context:{configurator:{storeFactory:c}},testData:e};_.each(f,function(a){g.fire("template.bind",{name:"boardplus.card.skeleton",data:a})}),g.initialize(h),g.fire("view.dom.ready"),b()});var m={name:"component.board.plus.card.zooming"};return m["card zooming should work"]=l.test(function(b){b.get("real")==0&&b.done();var c=b.get("bus"),d=function(a){var b=_.filter(a,function(a){var b=a.entityState;return!b.isFinal&&!b.isPlanned&&!b.isInitial}).length,c=_.filter(a,function(a){var b=a.entityState;return b.isPlanned||b.isInitial}).length,d={inProgressCount:b,plannedCount:c};return d},e={bus:c,"bus template.boardplus.card.skeleton.bound":function(a){this.container||(this.container=$('<div class="tau-board"></div>'),$("body").append(this.container)),this.container.append(a.data.element)},"bus template.boardplus.card.skeleton.bound[9]":function(a){var c=b.get("dataForRegistration"),d=b.get("componentBus");b.get("componentBus").fire("model.data.loader.registerItems",{items:c}),d.fire("view.skeleton.built",{element:this.container}),b.get("componentBus").fire("model.zoomLevelChanged",{zoomLevel:3})},"bus view.card.updated[9]":function(a){var c=b.get("data"),e=this;_.each(c.userStory,function(a){var c=h.generateCardId({id:a.id,type:a.entityType.name}),f=e.container.find("#"+c),g=_.filter(a.impediments||[],function(a){return!a.entityState.isFinal});g?b.equal(f.find(".tau-impediments").text(),g.length,"Impediments count"):b.equal(f.find(".tau-impediments").size(),0,"Impediments count is not visible");var i=a.tasks,j=f.find(".tau-related-tasks");if(i&&i.length>0){var k=d(i);k.inProgressCount||k.plannedCount?(b.equal(j.size(),1,"Tasks info container added"),b.equal(j.text().trim(),[k.plannedCount,k.inProgressCount].join("/"),"Tasks count")):b.equal(j.size(),0,"Tasks info container not added")}else b.equal(j.size(),0,"Tasks info container not added");var l=f.find(".tau-related-bugs"),m=a.bugs;if(m&&m.length>0){var n=d(m);n.inProgressCount||n.plannedCount?(b.equal(l.size(),1,"Bugs info container added"),b.equal(l.text().trim(),[n.plannedCount,n.inProgressCount].join("/"),"Bugs count")):b.equal(l.size(),0,"Bugs info container not added")}else b.equal(l.size(),0,"Bugs info container not added")})},"bus model.zoomLevelChanged[0]+view.card.updated[9]+model.dataUpdated[0]":function(a){var c=_.values(a)[0].data;b.equals(c.zoomLevel,3,"Initial zoom level is correct"),b.ok(this.container.hasClass("zoom-level-"+c.zoomLevel),"CSS class is set on card"),this.container.remove();var d=b.get("configurator"),e=d.getStore(),f=b.get("data");e.remove("project",{id:f.project.p_scrum.id},{success:function(){e.remove("process",{id:f.process.scrum.id},{success:function(){b.done()}}).done()}}).done()}};a.subscribeOn(e)}),m})