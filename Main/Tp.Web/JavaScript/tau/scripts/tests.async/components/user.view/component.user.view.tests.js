define(["tau/components/component.user.view","tau/configurator","tau/service.container","tau/utils/utils.fixturesLoader.store","tests/common/remoteConstants","libs.tests/Sinon","tau/core/bus","tau/utils/utils.process"],function(Component,globalConfigurator,ServiceContainer,DumpLoader,Constants,sinon,Bus,process){var testcase={name:"component.user.view"},store=null,testData={},real=globalConfigurator.getConfig("real",!1),configurator;return testcase.setUp=function(next){var entityTypes={us:Constants.EntityTypes.USERSTORY,release:Constants.EntityTypes.RELEASE,feature:Constants.EntityTypes.FEATURE,task:Constants.EntityTypes.TASK,bug:Constants.EntityTypes.BUG,request:Constants.EntityTypes.REQUEST,impediment:Constants.EntityTypes.IMPEDIMENT,user:Constants.EntityTypes.USER},practices={planning:{id:Constants.Practices.PLANNING.id},bugTracking:{id:Constants.Practices["BUG TRACKING"].id}},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning","bugTracking"]}},projects={p_scrum:{name:"Project Scrum"+parseInt(Math.random()*1e7),process:"scrum"}},users={mahmud:{firstName:"Mahmud",lastName:"Padgigai",login:"mahmud"+ +(new Date),email:"mahmud"+ +(new Date)+"@padgigay.by",password:"1"}},userStories={us1:{name:"US1",project:"p_scrum",entityType:"us",description:"Hell yeah"}};configurator=new ServiceContainer;var loader=new DumpLoader({store:configurator.getStore(),real:real}),configuratorInstance=test.get("configurator");configuratorInstance.getStore().get("role",{fields:["id","name"]}).turboGet("user",{$query:{firstName:{$contains:"Administrator"}},fields:["id","firstName","lastName"]}).done({success:function(result){var ALL_ROLES={},admin=result[1].data[0];_.each(result[0].data,function(role){ALL_ROLES[role.name.toUpperCase()]=role});var roles={dev:ALL_ROLES.DEVELOPER,sp:ALL_ROLES["SUPPORT PERSON"],pm:ALL_ROLES["PROJECT MANAGER"],tm:ALL_ROLES["TOP MANAGER"],qa:ALL_ROLES["QA ENGINEER"]},practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id},helpDesk:{id:Constants.Practices["HELP DESK"].id},bugTracking:{id:Constants.Practices["BUG TRACKING"].id}},fixtures={practices:practices,processes:processes,roles:roles,entityType:entityTypes,projects:projects,userStories:userStories,users:users};loader.load(fixtures,function(err,result){err?next(err):(testData=result.data,next())})}})},testcase.tearDown=function(next){next()},testcase["Should contain avatar"]=function(test){componentBus.initialize({context:context,store:store})},testcase})