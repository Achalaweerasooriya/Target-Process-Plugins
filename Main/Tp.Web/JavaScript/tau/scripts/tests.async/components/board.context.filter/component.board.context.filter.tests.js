define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.board.context.filter","tau/ui/extensions/container/ui.extension.container.childrenEvents"],function($,TestKit,ComponentBoardContextFilter,ExtensionChildrenEvents){var checkProjects=function($actualProjects,expectedProjects,test){var actualProjectNames=[];$actualProjects.each(function(){actualProjectNames.push($(this).find("span").text())});var expectedSelectedProjects=[];_.each(expectedProjects,function(project){expectedSelectedProjects.push(project.name)}),actualProjectNames.sort(),expectedSelectedProjects.sort();var difference=_.difference(expectedSelectedProjects,actualProjectNames);test.equal(difference.join(","),"","Projects names"),test.equal($actualProjects.length,expectedProjects.length,"Projects count")},validateSelectedTeamsAndProjects=function(test,element){var selectedProjects=test.get("selectedProjects"),selectableProjects=test.get("selectableProjects"),$selectedProjects=element.find(".tau-selected-items > ul > li"),$selectableProjects=element.find(".tau-selectable-items > ul > li");checkProjects($selectedProjects,selectedProjects,test),checkProjects($selectableProjects,selectableProjects,test)},testKit=new TestKit(ComponentBoardContextFilter),getAcidForSelectedProjectsAndTeams=function(config,next){var appContextService=config.configurator.getApplicationContextService();appContextService.getApplicationContext({projectIds:config.selectedProjectIds,teamIds:config.selectedTeamIds},{success:function(result){next(result.acid)}})},addAcidToExternalHash=function(test,next){var store=test.get("store"),data=test.get("data"),selectedProjectIds=_.pluck(test.get("selectedProjects"),"id"),selectedTeamIds=_.pluck(test.get("selectedTeams"),"id"),configurator=test.get("configurator");getAcidForSelectedProjectsAndTeams({selectedProjectIds:selectedProjectIds.length?selectedProjectIds:"null",selectedTeamIds:selectedTeamIds.length?selectedTeamIds:"null",configurator:configurator},function(acid){configurator.getHashService().setHref("http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid="+acid+"#"),next(!1)})},createProjects=function(test,next){var store=test.get("store");store.get("project").done(function(results){var projectsToCreate=[],createdProjects=results[0].data,countProjectToCreate=Math.max(0,10-createdProjects.length);for(var i=0;i<countProjectToCreate;i++)projectsToCreate.push({name:"Project"+_.uniqueId()+""+ +(new Date)});countProjectToCreate>0?store.save("project",{$set:projectsToCreate}).done(function(){store.get("project").done(function(results){test.set("projects",results[0].data),next(test)})}):(test.set("projects",results[0].data),next(test))})},createTeams=function(test,next){var store=test.get("store");store.get("team").done(function(results){var teamsToCreate=[],createdTeams=results[0].data,countTeamToCreate=Math.max(0,10-createdTeams.length);for(var i=0;i<countTeamToCreate;i++)teamsToCreate.push({name:"Team"+_.uniqueId()+""+ +(new Date)});countTeamToCreate>0?store.save("team",{$set:teamsToCreate}).done(function(){store.get("team").done(function(results){test.set("teams",results[0].data),next(test)})}):(test.set("teams",results[0].data),next(test))})},createTeamsAndProjects=function(test,next){createTeams(test,function(){createProjects(test,function(){next()})})};testKit.registerSetup("fixtures",function(test,next){if(test.get("real")==0){test.done();return}var configurator=test.get("configurator"),store=configurator.getStore();test.set("store",store);var users={mahmud:{firstName:"Jack",lastName:"Ripper",login:"jack"+_.UUID(),email:"jack"+_.UUID()+"@example.com",password:"1"}},Constants=test.get("constants"),practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id}},processes={scrum:{name:"scroom"+_.UUID(),practices:["planning","requirements"]},kanban:{name:"kakanban"+_.UUID(),practices:["planning"]}},fixtures={users:users,practices:practices,processes:processes};test.set("fixtures",fixtures),createProjects(test,function(test){createTeams(test,function(test){next()})})}),testKit.registerSetup("componentBus",function(test,next){test.set("componentBus",test.get("componentClass").create({extensions:[ExtensionChildrenEvents]})),next()}),testKit.registerSetup("component.initialize",function(test,next){test.get("configurator").setLoggedUser({id:1}),next()});var testCase={name:"component.board.context.filter"},createArrayWithSelectionFlag=function(array,selectedItems){var selectedItemsHash={};_.each(selectedItems,function(item){selectedItemsHash[item.id]=!0});var clonedArrayWithSelectedFlag=_.map(array,function(item){return _.extend(_.clone(item),{selected:selectedItemsHash.hasOwnProperty(item.id)})});return clonedArrayWithSelectedFlag},sortArrayBySelectionFlagAndName=function(array){var sortedArray=_.sortBy(array,function(item){return(item.selected?"0":"1")+item.name.toUpperCase()});return sortedArray},validateProjectSelectionAndOrder=function(test,$filter){var projects=test.get("projects"),selectedProjects=test.get("selectedProjects"),projectsWithSelectionFlag=createArrayWithSelectionFlag(projects,selectedProjects),sortedProjects=sortArrayBySelectionFlagAndName(projectsWithSelectionFlag),$projectsCheckbox=$filter.find(".tau-projects .i-role-list li:not(:first)");test.equals(sortedProjects.length,projectsWithSelectionFlag.length,"Count of projects is valid"),_.each(sortedProjects,function(projectData,index){var $checkbox=$projectsCheckbox.eq(index),$input=$checkbox.find("input"),projectIsChecked=$input.prop("checked"),projectId=$input.val(),projectName=$checkbox.find("span").text();test.equal(projectIsChecked,projectData.selected,"Checkbox selection is valid"),test.equal(projectId,projectData.id,"Checkbox projectId  is valid"),test.equal(projectName,projectData.name,"Project name is valid")})},validateTeamSelectionAndOrder=function(test,$filter){var teams=test.get("teams"),selectedTeams=test.get("selectedTeams"),teamsWithSelectionFlag=createArrayWithSelectionFlag(teams,selectedTeams),sortedTeams=sortArrayBySelectionFlagAndName(teamsWithSelectionFlag),$teamssCheckbox=$filter.find(".tau-teams .i-role-list li:not(:first)");test.equals(sortedTeams.length,teamsWithSelectionFlag.length,"Count of projects is valid"),_.each(sortedTeams,function(teamData,index){var $checkbox=$teamssCheckbox.eq(index),$input=$checkbox.find("input");test.equal($input.prop("checked"),teamData.selected,"Checkbox selection is valid"),test.equal($input.val(),teamData.id,"Checkbox teamId  is valid"),test.equal($checkbox.find("span").text(),teamData.name,"Team name is valid")})},validateFilterMarkup=function(test,$filter){validateProjectSelectionAndOrder(test,$filter),validateTeamSelectionAndOrder(test,$filter)},validateAcid=function(test,next){var selectedProjectIds=_.pluck(test.get("selectedProjects"),"id"),selectedTeamIds=_.pluck(test.get("selectedTeams"),"id"),configurator=test.get("configurator");getAcidForSelectedProjectsAndTeams({selectedProjectIds:selectedProjectIds,selectedTeamIds:selectedTeamIds,configurator:configurator},function(acid){configurator.getAppStateStore().get({fields:["acid"],callback:function(result){test.equal(acid,result.acid,"Acid in app state store is valid "),next()}})})},updateSelectedTeamsAndProjects=function(test,$filter){var selectedProjectAndTeamsHash={};_.each(test.get("selectedProjects"),function(project){selectedProjectAndTeamsHash[project.id]=!0}),_.each(test.get("selectedTeams"),function(team){selectedProjectAndTeamsHash[team.id]=!0}),$filter.find(".tau-checkbox input").each(function(){$(this).prop("checked",selectedProjectAndTeamsHash.hasOwnProperty($(this).val()))})};return testCase["Select project when acid is empty"]=testKit.test(function(test){createTeamsAndProjects(test,function(){test.set("selectedProjects",[]),test.set("selectedTeams",[]),addAcidToExternalHash(test,function(){var componentBus=test.get("componentBus"),configurator=test.get("configurator");componentBus.initialize({context:{configurator:configurator}});var bus=test.get("bus"),$el;bus.on("afterRender[0]",function(evt){$el=evt.data.element;var $currentTeams=$el.find(".tau-selected-teams li");test.equals($currentTeams.length,1,"No selected teamns"),test.equals($currentTeams.text(),"No team","No selected teams");var $moreTeams=$el.find(".tau-teams-pill");test.equals($moreTeams.length,0,"No more teams");var $currentProjects=$el.find(".tau-selected-projects li");test.equals($currentProjects.length,1,"No selected projects"),test.equals($currentProjects.text(),"No project","No selected projects");var $moreProjects=$el.find(".tau-projects-pill");test.equals($moreProjects.length,0,"No more projects"),$el.click();var $filter=$el.tauBubble("widget");test.equals($filter.length,1,"show filter"),test.equals($filter!==$el,!0,"other div"),validateFilterMarkup(test,$filter);var teams=test.get("teams");test.set("selectedTeams",[teams[1],teams[2],teams[3],teams[4]]);var projects=test.get("projects");test.set("selectedProjects",[projects[0],projects[1],projects[4]]);var configurator=test.get("configurator");updateSelectedTeamsAndProjects(test,$filter);var $submit=$filter.find("button.i-role-action-submit");test.equals($submit.length,1,"has submit button"),$submit.click()}),bus.on("afterRender[1]",function(evt){$el=evt.data.element;var projects=test.get("projects"),teams=test.get("teams"),$currentTeams=$el.find(".tau-selected-teams li");test.equals($currentTeams.length,4,"show teams"),test.equals($currentTeams.eq(0).text(),teams[1].name,"show teams"),test.equals($currentTeams.eq(1).text(),teams[2].name,"show teams");var $moreTeams=$el.find(".tau-teams-pill");test.equals($moreTeams.length,1,"Yeah more teams"),test.equals($moreTeams.text(),"+2 more","Yeah more teams");var $currentProjects=$el.find(".tau-selected-projects li"),labelProjects=[$currentProjects.eq(0).text(),$currentProjects.eq(1).text()],selectedProjects=[projects[0].name,projects[1].name,projects[4].name];test.equals($currentProjects.length,3,"show projecte"),test.equals(_.intersection(labelProjects,selectedProjects).length,2,"show projects");var $moreProjects=$el.find(".tau-projects-pill");test.equals($moreProjects.length,1,"Yeah more projects"),test.equals($moreProjects.text(),"+1 more","Yeah more projects"),$el.click();var $filter=$el.tauBubble("widget");test.equals($filter.length,1,"show filter"),test.equals($filter!==$el,!0,"other div"),validateAcid(test,function(){test.done()})})})})}),testCase["select and show as any"]=testKit.test(function(test){createTeamsAndProjects(test,function(){test.set("selectedProjects",[{id:"*"}]),test.set("selectedTeams",[{id:"*"}]),addAcidToExternalHash(test,function(){var componentBus=test.get("componentBus"),configurator=test.get("configurator");componentBus.initialize({context:{configurator:configurator}});var bus=test.get("bus"),$el;bus.on("afterRender[0]",function(evt){$el=evt.data.element;var $currentTeams=$el.find(".tau-selected-teams li");test.equals($currentTeams.length,1,"No selected teamns"),test.equals($currentTeams.text(),"Any Team","No selected teams");var $moreTeams=$el.find(".tau-teams-pill");test.equals($moreTeams.length,0,"No more teams");var $currentProjects=$el.find(".tau-selected-projects li");test.equals($currentProjects.length,1,"No selected projects"),test.equals($currentProjects.text(),"Any Project","No selected projects");var $moreProjects=$el.find(".tau-projects-pill");test.equals($moreProjects.length,0,"No more projects"),$el.click();var $filter=$el.tauBubble("widget");test.equals($filter.length,1,"show filter"),test.equals($filter!==$el,!0,"other div"),validateFilterMarkup(test,$filter);var teams=test.get("teams");test.set("selectedTeams",[teams[1],teams[2],teams[3],teams[4]]);var projects=test.get("projects");test.set("selectedProjects",[projects[0],projects[1],projects[4]]);var configurator=test.get("configurator");updateSelectedTeamsAndProjects(test,$filter);var $submit=$filter.find("button.i-role-action-submit");test.equals($submit.length,1,"has submit button"),$submit.click()}),bus.on("afterRender[1]",function(evt){$el=evt.data.element;var projects=test.get("projects"),teams=test.get("teams"),$currentTeams=$el.find(".tau-selected-teams li");test.equals($currentTeams.length,4,"show teams"),test.equals($currentTeams.eq(0).text(),teams[1].name,"show teams"),test.equals($currentTeams.eq(1).text(),teams[2].name,"show teams");var $moreTeams=$el.find(".tau-teams-pill");test.equals($moreTeams.length,1,"Yeah more teams"),test.equals($moreTeams.text(),"+2 more","Yeah more teams");var $currentProjects=$el.find(".tau-selected-projects li"),labelProjects=[$currentProjects.eq(0).text(),$currentProjects.eq(1).text()],selectedProjects=[projects[0].name,projects[1].name,projects[4].name];test.equals($currentProjects.length,3,"show projecte"),test.equals(_.intersection(labelProjects,selectedProjects).length,2,"show projects");var $moreProjects=$el.find(".tau-projects-pill");test.equals($moreProjects.length,1,"Yeah more projects"),test.equals($moreProjects.text(),"+1 more","Yeah more projects"),validateAcid(test,function(){test.done()})})})})}),testCase["filter applied to lists"]=testKit.test(function(test){createTeamsAndProjects(test,function(){var projects=test.get("projects"),selectedProjects=[projects[8],projects[1],projects[7]];test.set("selectedProjects",selectedProjects),test.set("selectedTeams",[]),addAcidToExternalHash(test,function(){var componentBus=test.get("componentBus"),configurator=test.get("configurator");componentBus.initialize({context:{configurator:configurator}});var bus=test.get("bus");bus.on("afterRender[0]",function(evt){var $el=evt.data.element;$el.click();var $popup=$el.tauBubble("widget"),$filter=$popup.find(":input[name=filter]");test.equals($filter.length,1,"Have filter input");var $items=$popup.find(".i-role-item");test.equals($items.length>2,!0,"Have items");var $first=$items.eq(1),$second=$items.eq(2),isMatch=function($el){return!$el.hasClass("tau-category-items-selector__item_filtered_false")};test.equals(isMatch($first),!0,"show"),test.equals(isMatch($second),!0,"show"),$filter.val($second.text().slice(1)),$filter.trigger("keyup"),test.equals(isMatch($second),!0,"show"),$filter.val(""),$filter.trigger("keyup"),test.equals(isMatch($first),!0,"match"),test.equals(isMatch($second),!0,"mnatch"),test.done()})})})}),testCase["quick add teams simple"]=testKit.test(function(test){createTeamsAndProjects(test,function(){var projects=test.get("projects"),selectedProjects=[projects[8],projects[1],projects[7]];test.set("selectedProjects",selectedProjects),test.set("selectedTeams",[]),addAcidToExternalHash(test,function(){var componentBus=test.get("componentBus"),configurator=test.get("configurator");componentBus.initialize({context:{configurator:configurator}});var bus=test.get("bus"),teamsLength=0,$el,sym;bus.on("afterRender[0]",function(evt){$el=evt.data.element,$el.click();var $popup=$el.tauBubble("widget").find(".tau-teams");teamsLength=$popup.find(".i-role-item").length,test.equals($popup.length,1,"Popup");var $form=$popup.find(".i-role-form");test.equals($form.length,1,"form");var $nameInput=$form.find(":text");test.equals($nameInput.length,2,"name and team members");var $symInput=$form.find("select");test.equals($symInput.length,1,"symbols"),test.equals($symInput.find("option").length>3,!0,"symbols");var $button=$form.find(":submit");test.equals($button.length,1,"button"),$nameInput.val("Avengers "+ +(new Date)),sym=$symInput.find("option:eq(2)").val(),$symInput.val(sym),$button.eq(0).click()}),bus.on("team.add.completed[0]",function(evt){var $popup=$el.tauBubble("widget").find(".tau-teams"),newTeamsLength=$popup.find(".i-role-item").length;test.equals(newTeamsLength,teamsLength+1,"was added");var $justAdded=$popup.find(".i-role-item.tau-added");test.equals($justAdded.length,1,"item"),test.equals($justAdded.find(":checked").length,1,"already checked"),test.equals($justAdded.find(".tau-icon.tau-icon_type_svg.tau-icon_name_"+sym+"").length,1,"show icon"),test.done()})})})}),testCase["quick add teams with users"]=testKit.test(function(test){createTeamsAndProjects(test,function(){var projects=test.get("projects"),selectedProjects=[projects[8],projects[1],projects[7]];test.set("selectedProjects",selectedProjects),test.set("selectedTeams",[]),addAcidToExternalHash(test,function(){var componentBus=test.get("componentBus"),configurator=test.get("configurator");componentBus.initialize({context:{configurator:configurator}});var bus=test.get("bus"),teamsLength=0,$el,sym,email="newinviteduser"+_.UUID()+"@example.com";bus.on("afterRender[0]",function(evt){$el=evt.data.element,$el.click();var $popup=$el.tauBubble("widget").find(".tau-teams");teamsLength=$popup.find(".i-role-item").length,test.equals($popup.length,1,"Popup");var $form=$popup.find(".i-role-form");test.equals($form.length,1,"form");var $nameInput=$form.find(":text").eq(0),$membersInput=$form.find(":text").eq(1);test.equals($nameInput.length,1,"name"),test.equals($membersInput.length,1,"team members");var $symInput=$form.find("select");test.equals($symInput.length,1,"symbols"),test.equals($symInput.find("option").length>3,!0,"symbols");var $button=$form.find(":submit");test.equals($button.length,1,"button"),$nameInput.val("Avengers "+ +(new Date)),sym=$symInput.find("option:eq(2)").val(),$symInput.val(sym);var $widget=$form.find(".i-role-members-widget");test.equals($widget.length,1,"members widget");var $lis=$widget.find(".i-role-member");test.equals($lis.length,0," no members"),$membersInput=$widget.find(":text"),test.equals($membersInput.length,1,"team members"),$membersInput.val(email),$membersInput.trigger(jQuery.Event("keydown",{which:$.ui.keyCode.ENTER}));var $lis=$widget.find(".i-role-member");test.equals($lis.length,1," render member"),test.equals($membersInput.val(),""," render member"),test.equals($membersInput.data("autocomplete")!=null,!0," can autocomplete"),$membersInput.on("autocompleteopen",function(){var $list=$membersInput.autocomplete("widget"),$selects=$list.find("li");test.equals($selects.length>0,!0,"have choice"),test.equals($selects.eq(0).find("span").text(),"Jack Ripper"),$membersInput.data("autocomplete")._trigger("select",{},{item:$selects.eq(0).data("item.autocomplete")});var $lis=$widget.find(".i-role-member");test.equals($lis.length,2," render members"),test.equals($membersInput.val(),""," render member"),test.equals($lis.eq(0).text().trim(),email," render members"),test.equals($lis.eq(1).text().trim(),"Jack Ripper"," render members"),test.get("store.save.spy").reset(),$button.eq(0).click()}),$membersInput.val("ja"),$membersInput.autocomplete("search")}),bus.on("team.add.completed[0]",function(evt){var $popup=$el.tauBubble("widget").find(".tau-teams"),newTeamsLength=$popup.find(".i-role-item").length;test.equals(newTeamsLength,teamsLength+1,"was added");var $justAdded=$popup.find(".i-role-item.tau-added");test.equals($justAdded.length,1,"item"),test.equals($justAdded.find(":checked").length,1,"already checked"),test.equals($justAdded.find(".tau-icon.tau-icon_type_svg.tau-icon_name_"+sym+"").length,1,"show icon");var spy=test.get("store.save.spy");test.equals(spy.callCount,3,"save for team, user, link");var teamCall=spy.getCall(0).args[0];test.equals(teamCall.type,"team","team save"),test.equals(teamCall.config.id,undefined,"team save");var userCall=spy.getCall(1).args[0];test.equals(userCall.type,"user","user save"),test.equals(userCall.config.id,undefined,"user save"),test.equals(userCall.config.$set.email,email,"user save"),test.equals(userCall.config.$set.login,email,"user save"),test.equals(_.asString(userCall.config.$set.password).length>0,!0,"user save");var linkCall=spy.getCall(2).args[0];test.equals(linkCall.type,"team","link link"),test.equals(linkCall.config.id>0,!0,"link save"),test.equals(linkCall.config.$set.teamMembers.length,2,"link save"),test.done()})})})}),testCase["quick add project basic"]=testKit.test(function(test){createTeamsAndProjects(test,function(){var projects=test.get("projects"),selectedProjects=[projects[8],projects[1],projects[7]];test.set("selectedProjects",selectedProjects),test.set("selectedTeams",[]),addAcidToExternalHash(test,function(){var componentBus=test.get("componentBus"),configurator=test.get("configurator");componentBus.initialize({context:{configurator:configurator}});var bus=test.get("bus"),itemsLength=0,$el,color;bus.on("afterRender[0]",function(evt){$el=evt.data.element,$el.click();var $popup=$el.tauBubble("widget").find(".tau-projects");itemsLength=$popup.find(".i-role-item").length,test.equals($popup.length,1,"Popup");var $form=$popup.find(".i-role-form");test.equals($form.length,1,"form");var $nameInput=$form.find(":text");test.equals($nameInput.length,2,"name and emmmme");var $symInput=$form.find("select[name=color]");test.equals($symInput.length,1,"colors"),test.equals($symInput.find("option").length>3,!0,"colors");var $button=$form.find(":submit");test.equals($button.length,1,"button"),$nameInput.val("Destroy the world "+ +(new Date)),color=$symInput.find("option:eq(2)").val(),$symInput.val(color),$button.eq(0).click()}),bus.on("project.add.completed[0]",function(evt){var $popup=$el.tauBubble("widget").find(".tau-projects"),newItemsLength=$popup.find(".i-role-item").length;test.equals(newItemsLength,itemsLength+1,"was added");var $justAdded=$popup.find(".i-role-item.tau-added");test.equals($justAdded.length,1,"item"),test.equals($justAdded.find(":checked").length,1,"already checked"),test.equals($justAdded.find(".tau-icon").css("background-color"),$("<span></span>").css("background-color",color).css("background-color"),"show color"),test.done()})})})}),testCase["quick add project members and process"]=testKit.test(function(test){createTeamsAndProjects(test,function(){var projects=test.get("projects"),selectedProjects=[projects[8],projects[1],projects[7]];test.set("selectedProjects",selectedProjects),test.set("selectedTeams",[]);var email="newinviteduser"+_.UUID()+"@example.com";addAcidToExternalHash(test,function(){var componentBus=test.get("componentBus"),configurator=test.get("configurator");componentBus.initialize({context:{configurator:configurator}});var bus=test.get("bus"),itemsLength=0,$el,color,process;bus.on("afterRender[0]",function(evt){$el=evt.data.element,$el.click();var $popup=$el.tauBubble("widget").find(".tau-projects");itemsLength=$popup.find(".i-role-item").length,test.equals($popup.length,1,"Popup");var $form=$popup.find(".i-role-form");test.equals($form.length,1,"form");var $nameInput=$form.find(":text[name=name]");test.equals($nameInput.length,1,"name widget");var $symInput=$form.find("select[name=color]");test.equals($symInput.length,1,"colors"),test.equals($symInput.find("option").length>3,!0,"colors");var $processInput=$form.find("select[name=process]");test.equals($processInput.length,1,"process widget");var $options=$processInput.find("option");test.equals($options.length>=2,!0,"process widget options");var $widget=$form.find(".i-role-members-widget");test.equals($widget.length,1,"members widget");var $lis=$widget.find(".i-role-member");test.equals($lis.length,0," no members");var $membersInput=$widget.find(":text");test.equals($membersInput.length,1,"team members");var $button=$form.find(":submit");test.equals($button.length,1,"button"),$nameInput.eq(0).val("Destroy the world "+ +(new Date)),color=$symInput.find("option:eq(2)").val(),$symInput.val(color),process=$options.eq(1).attr("value"),$processInput.val(process),$membersInput.val(email),$membersInput.trigger(jQuery.Event("keydown",{which:$.ui.keyCode.ENTER}));var $lis=$widget.find(".i-role-member");test.equals($lis.length,1," render member"),test.equals($membersInput.val(),""," render member"),test.equals($membersInput.data("autocomplete")!=null,!0," can autocomplete"),$membersInput.on("autocompleteopen",function(){var $list=$membersInput.autocomplete("widget"),$selects=$list.find("li");test.equals($selects.length>0,!0,"have choice"),test.equals($selects.eq(0).find("span").text(),"Jack Ripper"),$membersInput.data("autocomplete")._trigger("select",{},{item:$selects.eq(0).data("item.autocomplete")});var $lis=$widget.find(".i-role-member");test.equals($lis.length,2," render members"),test.equals($membersInput.val(),""," render member"),test.equals($lis.eq(0).text().trim(),email," render members"),test.equals($lis.eq(1).text().trim(),"Jack Ripper"," render members"),test.get("store.save.spy").reset(),$button.eq(0).click()}),$membersInput.val("ja"),$membersInput.autocomplete("search")}),bus.on("project.add.completed[0]",function(evt){var $popup=$el.tauBubble("widget").find(".tau-projects"),newTeamsLength=$popup.find(".i-role-item").length,$justAdded=$popup.find(".i-role-item.tau-added");test.equals($justAdded.length,1,"item"),test.equals($justAdded.find(":checked").length,1,"already checked");var spy=test.get("store.save.spy");test.equals(spy.callCount,3,"save for project, user, link");var teamCall=spy.getCall(0).args[0];test.equals(teamCall.type,"project","project save"),test.equals(teamCall.config.id,undefined,"project save"),test.equals(teamCall.config.$set.color,color,"project save color"),test.equals(teamCall.config.$set.process.id,process,"project save process");var userCall=spy.getCall(1).args[0];test.equals(userCall.type,"user","user save"),test.equals(userCall.config.id,undefined,"user save"),test.equals(userCall.config.$set.email,email,"user save"),test.equals(userCall.config.$set.login,email,"user save"),test.equals(_.asString(userCall.config.$set.password).length>0,!0,"user save");var linkCall=spy.getCall(2).args[0];test.equals(linkCall.type,"project","link link"),test.equals(linkCall.config.id>0,!0,"link save"),test.equals(linkCall.config.$set.projectMembers.length,2,"link save"),test.done()})})})}),testCase})