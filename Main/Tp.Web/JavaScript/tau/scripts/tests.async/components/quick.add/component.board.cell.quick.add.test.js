define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.board.cell.quick.add","tests/common/remoteConstants"],function($,TestKit,Component,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id},helpDesk:{id:Constants.Practices["HELP DESK"].id},bugTracking:{id:Constants.Practices["BUG TRACKING"].id}},processes={scrum:{name:"scrum"+ +(new Date),practices:["planning","requirements","helpDesk","bugTracking"],customFields:[{name:"Text",fieldType:"Text",entityType:{id:Constants.EntityTypes.BUG.id},required:!0},{name:"URL",fieldType:"URL",entityType:{id:Constants.EntityTypes.BUG.id},required:!0},,{name:"Number",fieldType:"Number",entityType:{id:Constants.EntityTypes.BUG.id},required:!0},{name:"DropDown",fieldType:"DropDown",entityType:{id:Constants.EntityTypes.BUG.id},required:!0,value:["testSplit","failTestSplit","C","D"].join("\r\n")},{name:"MultipleSelectionList",fieldType:"MultipleSelectionList",entityType:{id:Constants.EntityTypes.BUG.id},required:!0,value:["A","B","C","D"].join("\r\n")},{name:"Date",fieldType:"Date",entityType:{id:Constants.EntityTypes.BUG.id},required:!0},{name:"TemplateUrl",fieldType:"templatedUrl",value:"http://fdas{0}dsf",entityType:{id:Constants.EntityTypes.BUG.id},required:!0},{name:"Entity",fieldType:"Entity",entityType:{id:Constants.EntityTypes.BUG.id},required:!0,value:[Constants.EntityTypes.BUG.id.toString()].join("\r\n")}]}},projects={p_scrum:{name:"Project Scrum"+(new Date).getTime(),process:"scrum"},p_scrum1:{name:"Project Scrum"+(new Date).getTime()+1,process:"scrum"}},bugs={b_bug:{name:"Bug"+(new Date).getTime(),project:"p_scrum"}},userStories={u_userStory:{name:"UserStory"+(new Date).getTime(),project:"p_scrum"}},fixtures={practices:practices,processes:processes,projects:projects,bugs:bugs,userStories:userStories};test.set("fixtures",fixtures),test.get("configurator").getFeaturesService().setEnabled("quick.add"),next()}),testKit.registerSetup("component.initialize",function(test,next){var definition={};definition.x={types:["UserStory"]},definition.cells={types:["Bug"]};var configurator=test.get("configurator"),testData=test.get("data"),selectedProjectsIds=[];_.each(testData.project,function(value){selectedProjectsIds.push(value.id)});var appContextService=configurator.getApplicationContextService();appContextService.getApplicationContext({projectId:selectedProjectsIds},{success:function(context){var componentBus=test.get("componentBus"),sliceConfig={definition:definition};sliceConfig.definition.global={acid:context.acid};var slice=configurator.getSliceFactory().create(sliceConfig);slice.cellActionsV2().done(function(response){var showAddButtonData={};showAddButtonData.action=response.data.items[0],_.each(showAddButtonData,function(action){var addAction=_.find(action.fixed.items,function(item){return item.type=="AddAction"});addAction&&(showAddButtonData.addAction=addAction)}),componentBus.initialize({options:{slice:slice,action:showAddButtonData.action,addAction:showAddButtonData.addAction}}),next()})}})});var testcase={name:"component.board.cell.quick.add"};return testcase["should render valid markup and add entity"]=testKit.test(function(test){var bus=test.get("bus"),testData=test.get("data");bus.on("afterRender[0]",function(evt,renderData){var $el=renderData.element,wrap=$('<div style="position: absolute;left: -9999px;top: -9999px"></div>').append($el);$("body").append(wrap),test.equals($el.length,1,"element rendered");var form=$el.find(".tau-active"),project=$el.find(".project"),name=$el.find(".Name"),textCustomField=$el.find("[data-fieldname=Text]"),numberCustomField=$el.find("[data-fieldname=Number]"),urlCustomField=$el.find("[data-fieldname=URL]"),dropDownCustomField=$el.find("[data-fieldname=DropDown]"),multiDropDownCustomField=$el.find("[data-fieldname=MultipleSelectionList]"),dateCustomField=$el.find("[data-fieldname=Date]"),templateUrlCustomField=$el.find("[data-fieldname=TemplateUrl]"),entityCustomField=$el.find("[data-fieldname=Entity]"),urlCustomFieldValue=urlCustomField.nextAll(".cf-wrap-url_value").find("input"),urlCustomFieldDescription=urlCustomField.nextAll(".cf-wrap-url_description").find("input");form.submit(),test.equals(name.hasClass("tau-error"),!0,"validate empty name"),test.equals(textCustomField.hasClass("tau-error"),!0,"validate empty text CustomField"),test.equals(urlCustomFieldValue.hasClass("tau-error"),!0,"validate empty url CustomField value"),test.equals(urlCustomFieldDescription.hasClass("tau-error"),!0,"validate empty url CustomField description"),test.equals(numberCustomField.hasClass("tau-error"),!0,"validate empty number CustomField"),test.equals(dropDownCustomField.hasClass("tau-error"),!0,"validate empty dropDown CustomField"),test.equals(multiDropDownCustomField.hasClass("tau-error"),!0,"validate empty multiDropDownCustomField CustomField"),test.equals(dateCustomField.hasClass("tau-error"),!0,"validate empty Date CustomField"),test.equals(templateUrlCustomField.hasClass("tau-error"),!0,"validate empty templateUrl CustomField"),test.equals(entityCustomField.parent().hasClass("tau-error"),!0,"validate empty entity CustomField"),form.submit(),urlCustomFieldValue.val("http:/fsafds"),numberCustomField.val("http:/fsafds"),dateCustomField.val("http:/fsafds"),test.equals(urlCustomFieldValue.hasClass("tau-error"),!0,"validate invalid value url CustomField value"),test.equals(numberCustomField.hasClass("tau-error"),!0,"validate invalid value number CustomField"),test.equals(dateCustomField.hasClass("tau-error"),!0,"validate invalid value date CustomField"),project.val(testData.project.p_scrum.id),name.val("test"),textCustomField.val("Yap"),urlCustomFieldValue.val("http://fsafds"),urlCustomFieldDescription.val("http://fsafds"),numberCustomField.val(10),dropDownCustomField.find("option").eq(1).prop("selected",!0),test.equals(dropDownCustomField.val(),"testSplit","correctly split dropDown value"),multiDropDownCustomField.find("option").eq(1).prop("selected",!0),dateCustomField.val("25-Dec-2012"),templateUrlCustomField.val("dfasd,dsafd"),bus.on("entity_Bug_10.result.ready",function(){var e=jQuery.Event("keydown",{keyCode:13});$el.find('[role="filter"] input').trigger(e);var finderEntityMenuItems=$el.find(".ui-menu-item");finderEntityMenuItems.length==0&&test.fail("finder entity for entity CustomField should contain at least one bug"),test.equals(finderEntityMenuItems.length,$el.find(".ui-menu-item .ui-type-icon-bug").length,"restrict entities by type for entity CustomField"),finderEntityMenuItems.eq(0).mouseenter().click(),form.submit()});var slice=evt.data.view.config.options.slice;slice.on("after.addData",function(evt,data){var item=data.result[0].dataItem.data;test.equals(item.name==="test",!0,"add entity"),test.done()})})}),testcase})