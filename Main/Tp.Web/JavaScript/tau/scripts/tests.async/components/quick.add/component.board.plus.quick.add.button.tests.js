define(["jQuery","tests.async/testkit/testkit.component.board","tau/components/component.board.container","tau/ui/extensions/container/ui.extension.container.childrenEvents","tests/common/remoteConstants"],function($,TestKit,Component,ExtensionChildrenEvents,Constants){var testKit=new TestKit(Component,{name:"MegaBoard",viewMode:"board",zoomLevel:0,min:1,max:20,x:{types:["Release"]},cells:{types:["Bug"]}});testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:Constants.EntityTypes.USERSTORY,release:Constants.EntityTypes.RELEASE,feature:Constants.EntityTypes.FEATURE},practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id},bugTracking:{id:Constants.Practices["BUG TRACKING"].id}},processes={scrum:{name:"scrum"+ +(new Date),practices:["planning","requirements","bugTracking"]}},projects={p_scrum:{name:"Project Scrum"+ +(new Date),process:"scrum"}},releases={},features={};for(var r=0;r<4;r++){var releaseName="release"+r;releases[releaseName]={name:"Release_"+r+"_"+ +(new Date),entityType:"release",project:"p_scrum"};var featureName="feature"+r;features[featureName]={name:"Feature_"+r+"_"+ +(new Date),entityType:"feature",project:"p_scrum",release:releaseName}}var userStories={};_(releases).chain().keys().each(function(releaseId){_(features).chain().keys().each(function(featureId){for(var s=0;s<4;s++){var userStoryName=["us",releaseId,featureId,s].join("_");userStories[userStoryName]={name:userStoryName,entityType:"us",project:"p_scrum",release:releaseId,feature:featureId}}})});var fixtures={entityTypes:entityTypes,practices:practices,processes:processes,projects:projects,releases:releases,features:features,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("componentBus",function(test,next){test.set("componentBus",test.get("componentClass").create({extensions:[ExtensionChildrenEvents]})),next()}),testKit.registerSetup("component.initialize",function(test,next){var configuratorInstance=test.get("configurator"),store=configuratorInstance.getStore();configuratorInstance.getApplicationContextService(),configuratorInstance.getClipboardManager().restStorage.sources.splice(0,1);var testData=test.get("data"),projectID=testData.project.p_scrum.id;test.get("real")===!1&&sinon.stub(store.config.proxy.service,"get",function(command){if(command.type=="context")command.callbacks.success({id:command.config.id,acid:"345"});else if(!command.config.id){var collection=_.toArray(testData[command.type]);setTimeout(function(){command.callbacks.success(collection)},0)}}),store.get("context",{projectId:projectID,fields:["acid"]},{success:function(r){var componentBus=test.get("componentBus"),definition=test.get("board.definition"),acid=r.data[0].acid;configuratorInstance.getHashService().setHref("http://localhost/targetprocess/RestUI/board.aspx?acid="+acid+"#"),configuratorInstance.setBoardSettingsOptions(definition);var componentConfig={context:{configurator:configuratorInstance,entity:{id:test.get("board.definition").id},acid:acid}};componentConfig.children=[{type:"board.plus"}];var boardSettings=configuratorInstance.getBoardSettingsFactory().createInstance(test.get("board.definition"));configuratorInstance.registerService("boardSettings",boardSettings),componentBus.initialize(componentConfig),componentBus.fire("boardSettings.ready",{boardSettings:boardSettings}),next()}}).done()});var testcase={name:"component.board.plus.quickAdd for board"};return testcase["render and add new card entity"]=testKit.test(function(test){testKit.flow(test,{"bus board.plus.slice.cells.quickadd.api.ready:last + afterRender[0]+board.plus.model.cellActions.ready[0]+ board.plus.domWrapper.ready:last":function(evt,quickAddApi,renderData){var self=this,$body=$("body");$body.append(renderData.element);var e=$.Event("mouseenter",{relatedTarget:$body.get(0)}),$cellHolder=renderData.element.find(".i-role-grid .i-role-cellholder").eq(0);$cellHolder.trigger(e);var $addBtn=$cellHolder.find(".tau-quick-add .tau-btn.tau-add");test.ok($addBtn.size()===1,"Quick Add button should be added to cell holder"),test.ok($addBtn.css("display")!=="none","Button should be visible"),$addBtn.click(),$addBtn.bind("taububbleloadcontent",function(){var $popup=$(this).tauBubble("widget"),form=$popup.find("form").eq(0);form.find("[name=Name]").val("test"),form.submit(),quickAddApi.on("after.addData",function(evt,data){var item=data.result[0].dataItem.data;test.equals(item.name==="test",!0,"save entity"),self.bus.fire("test.quickadd.submitted",{})})})},"bus test.quickadd.submitted + board.plus.view.cell.skeleton.updated[0]":function(){test.ok(!0,"cell should be updated after quick add"),test.done()}})}),testcase["render quick add panel for axes"]=testKit.test(function(test){testKit.flow(test,{"bus board.plus.slice.axes.quickadd.api.ready:last + afterRender[0] + board.plus.model.axesActions.ready[0] + board.plus.domWrapper.ready:last":function(evt,quickAddApi,renderData){var self=this,$body=$("body");$body.append(renderData.element);var e=$.Event("mouseenter",{relatedTarget:$body.get(0)}),$header=renderData.element.find(".i-role-header").eq(0);$header.trigger(e);var $addBtn=$header.find(".tau-quick-add .tau-btn.tau-add");test.ok($addBtn.size()===1,"Quick Add button should be added to cell holder"),test.ok($addBtn.css("display")!=="none","Button should be visible"),$addBtn.click(),$addBtn.bind("taububbleloadcontent",function(){var p=this,$popup=$(p).tauBubble("widget"),form=$popup.find("form").eq(0);form.find("[name=Name]").val("test"),form.find("[name=project]").find("option").eq(0).prop("selected",!0),form.find("[name=StartDate]").val("30-Nov-2019"),form.find("[name=EndDate]").val("31-dec-2019"),form.submit(),quickAddApi.on("after.addAxisData",function(evt,data){var item=data.result[0].dataItem.data;self.bus.fire("test.quickadd.submitted",{}),test.equals(item.name==="test",!0,"save entity"),$(p).tauBubble("hide")})})},"bus test.quickadd.submitted + board.plus.refresh[0]":function(){test.ok(!0,"Board should be refreshed after Quick Add popup is closed"),test.done()}})}),testcase["dblclick open quick add dialog"]=testKit.test(function(test){testKit.flow(test,{"bus board.plus.slice.cells.quickadd.api.ready:last + afterRender[0]+board.plus.model.cellActions.ready[0]+ board.plus.domWrapper.ready:last":function(evt,quickAddApi,renderData){var self=this,$body=$("body");$body.append(renderData.element);var $cellHolder=renderData.element.find(".i-role-grid .i-role-cellholder").eq(0),e=$.Event("mouseenter",{relatedTarget:$body.get(0)});$cellHolder.trigger(e);var dblEvent=$.Event("dblclick",{relatedTarget:$body.get(0)}),$addBtn=$cellHolder.find(".tau-quick-add .tau-btn.tau-add");test.ok($addBtn.size()===1,"Quick Add button should be added to cell holder"),test.ok($addBtn.css("display")!=="none","Button should be visible"),$cellHolder.trigger(dblEvent),$addBtn.one("taububbleloadcontent",function(){var $popup=$(this).tauBubble("widget");test.ok($popup.length===1,"Show first quick add pop-up"),$addBtn.click()}),$addBtn.one("testhide",function(){$addBtn.click(),$addBtn.one("taububbleloadcontent",function(){var $popup=$(this).tauBubble("widget");test.ok($popup.length===1,"Show second quick add pop-up"),test.done()})}),$addBtn.one("taububblehide",function(){var $popup=$(this).tauBubble("widget");test.ok($popup.is("visible")===!1,"hide quick add pop-up"),$addBtn.trigger("testhide")})}})}),testcase})