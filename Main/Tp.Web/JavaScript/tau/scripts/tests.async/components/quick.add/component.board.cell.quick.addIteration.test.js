define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.board.cell.quick.add","tests/common/remoteConstants","tau/utils/utils.date"],function($,TestKit,Component,Constants,dateUtils){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={release:Constants.EntityTypes.RELEASE},practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id},helpDesk:{id:Constants.Practices["HELP DESK"].id},bugTracking:{id:Constants.Practices["BUG TRACKING"].id},iterations:{id:Constants.Practices.ITERATIONS.id}},processes={scrum:{name:"scrum"+ +(new Date),practices:["planning","requirements","helpDesk","bugTracking","iterations"]}},projects={p_scrum:{name:"Project Scrum"+(new Date).getTime(),process:"scrum"},p_scrum1:{name:"Project Scrum"+(new Date).getTime()+1,process:"scrum"}},bugs={b_bug:{name:"bug"+(new Date).getTime(),project:"p_scrum"},b_b1:{name:"bug"+(new Date).getTime()+1,project:"p_scrum"}},releases={};for(var r=0;r<4;r++){var releaseName="release"+r;releases[releaseName]={name:"Release_"+r+"_"+ +(new Date),entityType:"release",project:"p_scrum"}}var fixtures={entityTypes:entityTypes,practices:practices,processes:processes,projects:projects,bugs:bugs,releases:releases};test.set("fixtures",fixtures),test.get("configurator").getFeaturesService().setEnabled("quick.add"),next()}),testKit.registerSetup("component.initialize",function(test,next){var definition={};definition.x={types:["iteration"]},definition.cells={types:["Bug"]};var configurator=test.get("configurator"),testData=test.get("data"),selectedProjectsIds=[];_.each(testData.project,function(value){selectedProjectsIds.push(value.id)});var appContextService=configurator.getApplicationContextService();appContextService.getApplicationContext({projectId:selectedProjectsIds},{success:function(context){var componentBus=test.get("componentBus"),sliceConfig={definition:definition};sliceConfig.definition.global={acid:context.acid};var slice=configurator.getSliceFactory().create(sliceConfig);slice.axesActions().done(function(response){var showAddButtonData={};showAddButtonData.action=response.data.items[0],_.each(showAddButtonData,function(action){var addAction=_.find(action.fixed.items,function(item){return item.type=="AddAction"});addAction&&(showAddButtonData.addAction=addAction)}),componentBus.initialize({options:{slice:slice,action:showAddButtonData.action,addAction:showAddButtonData.addAction,viewMode:"axis"}}),next()})}})});var testcase={name:"component.board.cell.quick.add"};return testcase["should render valid markup and add entity"]=testKit.test(function(test){var bus=test.get("bus");bus.on("afterRender[0]",function(evt,renderData){var $el=renderData.element,wrap=$('<div style="display: none"></div>').append($el);$("body").append(wrap),test.equals($el.length,1,"element rendered");var form=$el.find(".tau-active"),project=$el.find(".project"),name=$el.find(".Name");name.val("test"),$el.find("[name=StartDate]").val(dateUtils.formatAs(dateUtils.parse(new Date),dateUtils.getFormatData().date.short)),$el.find("[name=Duration]").val(2),bus.on("releaseselector.result.ready",function(){var e=jQuery.Event("keydown",{keyCode:13});$el.find('[role="filter"] input').trigger(e),$el.find(".ui-menu-item").eq(0).mouseenter().click(),form.submit()});var slice=evt.data.view.config.options.slice;slice.on("after.addAxisData",function(evt,data){var item=data.result[0].dataItem.data;test.equals(item.name==="test",!0,"add entity"),test.done()})})}),testcase})