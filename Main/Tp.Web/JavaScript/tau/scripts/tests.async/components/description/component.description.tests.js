define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.description","tests/common/remoteConstants"],function($,TestKit,Component,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},customFields={},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"]}},projects={p_scrum:{name:"Project Scrum"+parseInt(Math.random()*1e11),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum",description:'Hell yeah <b>bzzz</b> <img src="~/porn/gallery1/boobs.jpg" />'},us2:{name:"US2",entityType:"us",project:"p_scrum",description:"some"}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,customFields:customFields,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({disableAutoSave:!0,context:{entity:testData.userStory.us1,configurator:test.get("configuratorInstance")}}),next()});var testcase={name:"component.description"};return testcase["should render valid markup and allow to edit"]=testKit.test(function(test){var entity=test.get("data").userStory.us1,connEntity=test.get("data").userStory.us2;testKit.flow(test,{"bus afterRender[0]":function(evt){var $mainEl=evt.data.element;test.equals($mainEl.length,1,"Element rendered");var $el=$mainEl.find(".ui-description__inner");test.equals($el.length,1,"structure");var ap=test.get("configuratorInstance").getApplicationPath();test.equals(_.trim($el.text()),"Hell yeah bzzz","Init description correct"),test.equals(_.trim($el.find("b").text()),"bzzz","structure correct"),test.equals(_.trim($el.find("img").attr("src")),ap+"/porn/gallery1/boobs.jpg","convert relative path"),$el.dblclick();var $editor=$mainEl.find(".ui-richeditor");test.equals($editor.length,1,"allow to edit");var $area=$editor.find("textarea");test.equals($area.length,1,"allow to edit");var $buttons=$editor.find("button");test.equals($buttons.length,1,"allow to edit"),$area.val("preved"),$buttons.eq(0).click()},"bus afterRender[1]":function(evt){var $mainEl=evt.data.element;test.equals($mainEl.length,1,"Element rendered");var $el=$mainEl.find(".ui-description__inner");test.equals($el.length,1,"Element rendered"),test.equals(_.trim($el.text()),"preved","Descripotion changed"),test.done()}})}),testcase["should process ids"]=testKit.test(function(test){var bus=test.get("bus"),entity=test.get("data").userStory.us1,connEntity=test.get("data").userStory.us2;testKit.flow(test,{"bus afterRender[0]":function(evt){var $mainEl=evt.data.element;test.equals($mainEl.length,1,"Element rendered");var $el=$mainEl.find(".ui-description__inner");test.equals($el.length,1,"structure"),$el.dblclick();var $editor=$mainEl.find(".ui-richeditor"),$area=$editor.find("textarea"),$buttons=$editor.find("button");$area.val("cool story preved id:"+connEntity.id),$buttons.eq(0).click()},"bus afterRender[1] + shortcuts.completed[1]":function(evt,renderData){var $mainEl=renderData.element;test.equals($mainEl.length,1,"Element rendered");var $el=$mainEl.find(".ui-description__inner");test.equals($el.length,1,"Element rendered");var $linkToStory=$el.find("a");test.equals($linkToStory.length,1),test.equals($linkToStory.html(),"#"+connEntity.id+"&nbsp;US2"),test.equals($linkToStory.attr("href"),"#userstory/"+connEntity.id),test.done()}})}),testcase})