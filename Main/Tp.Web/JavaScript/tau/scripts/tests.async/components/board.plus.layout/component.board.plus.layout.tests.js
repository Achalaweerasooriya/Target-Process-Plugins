define(["jQuery","tau/configurator","tests.async/testkit/testkit.component.board","tau/core/external.fake","tau/components/component.board.plus","tau/ui/extensions/container/ui.extension.container.childrenEvents","tests/common/remoteConstants"],function($,configurator,TestKit,FakeExternalService,Component,ExtensionChildrenEvents,Constants){var testKit=new TestKit(Component,{name:"MegaBoard",viewMode:"board",zoomLevel:1,min:1,max:20,x:{types:["feature"],filter:"?It is not None"},y:{types:["release"],filter:"?It is not None"},cells:{types:["userStory"],filter:""}});testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:Constants.EntityTypes.USERSTORY,release:Constants.EntityTypes.RELEASE,feature:Constants.EntityTypes.FEATURE},practices={planning:{id:Constants.Practices.PLANNING.id},requirements:{id:Constants.Practices.REQUIREMENTS.id}},processes={scrum:{name:"scrum"+ +(new Date),practices:["planning","requirements"]}},projects={p_scrum:{name:"Project Scrum"+ +(new Date),process:"scrum"}},releases={},features={};for(var r=0;r<4;r++){var releaseName="release"+r;releases[releaseName]={name:"Release_"+r+"_"+ +(new Date),entityType:"release",project:"p_scrum"};var featureName="feature"+r;features[featureName]={name:"Feature_"+r+"_"+ +(new Date),entityType:"feature",project:"p_scrum",release:releaseName}}var userStories={};_(releases).chain().keys().each(function(releaseId){_(features).chain().keys().each(function(featureId){for(var s=0;s<4;s++){var userStoryName=["us",releaseId,featureId,s].join("_");userStories[userStoryName]={name:userStoryName,entityType:"us",project:"p_scrum",release:releaseId,feature:featureId}}})});var fixtures={entityTypes:entityTypes,practices:practices,processes:processes,projects:projects,releases:releases,features:features,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("componentBus",function(test,next){test.set("componentBus",test.get("componentClass").create({extensions:[ExtensionChildrenEvents],context:{configurator:test.get("configurator")}})),next()}),testKit.registerSetup("component.initialize",function(test,next){var configuratorInstance=test.get("configurator"),store=configuratorInstance.getStore();configuratorInstance.setExternalService(new FakeExternalService),configuratorInstance.getClipboardManager().restStorage.sources.splice(0,1);var testData=test.get("data"),projectID=testData.project.p_scrum.id;test.get("real")===!1&&sinon.stub(store.config.proxy.service,"get",function(command){if(command.type=="context")command.callbacks.success({id:command.config.id,acid:"234567896789322345l"});else if(!command.config.id){var collection=_.toArray(testData[command.type]);setTimeout(function(){command.callbacks.success(collection)},0)}}),store.get("context",{projectId:projectID,fields:["acid"]},{success:function(r){var componentBus=test.get("componentBus"),definition=test.get("board.definition"),acid=r.data[0].acid,fakeWindow={document:{title:""},location:{hash:"#",href:"http://localhost/targetprocess/RestUI/board.aspx?acid="+acid+"#"}},fakeExternal=new FakeExternalService(fakeWindow);configuratorInstance.setExternalService(fakeExternal),configuratorInstance.setBoardSettingsOptions(definition);var componentConfig={context:{configurator:configuratorInstance,entity:{id:test.get("board.definition").id}}};componentBus.on("view.skeleton.built",function(evt){evt.data.element.find("[role=grid]").width(500)}),componentBus.initialize(componentConfig);var boardSettings=configuratorInstance.getBoardSettingsFactory().createInstance(test.get("board.definition"));componentBus.fire("boardSettings.ready",{boardSettings:boardSettings}),componentBus.fire("view.dom.ready",{}),next()}}).done()});var testcase={name:"component.board.plus.layout"};return testcase["should resize cells to content"]=testKit.test(function(test){var componentBus=test.get("componentBus");testKit.flow(test,{"bus afterRender[0]":function(evt){var $el=evt.data.element,$grView=$el.find(".tau-board-grid-view:first");test.equals($grView.length,1,"Has zoom"),test.equals($grView.attr("data-zoom-level"),1,"Has zoom"),test.equals($grView.hasClass("zoom-level-1"),!0,"Has zoom");var $grid=$el.find("[role=grid]");test.equals($grid.length,1,"Have grid")},"bus overview.board.ready[0]":function(evt){var $el=evt.data.element,$grid=$el.find("[role=grid]");test.equals($grid.length,1,"Have grid");var $grid=$el.find("[role=grid]");test.equals($grid.width()>400,!0,"grid with width");var $cells=$grid.find(".i-role-cell"),$cards=$grid.find(".i-role-card");test.equals($cells.length,16,"Have cells"),test.equals($cards.length,64,"Have cells"),test.equals($cells.eq(0).width()>110,!0,"Move to correct size"),test.equals($cells.eq(0).width()<130,!0,"Move to correct size"),test.done()}})}),testcase})