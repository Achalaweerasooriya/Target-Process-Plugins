define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.tagsCloud","tests/common/remoteConstants"],function($,TestKit,Component,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){if(!test.get("real")){test.done();return}var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},customFields={},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"]}},projects={p_scrum:{name:"Project Scrum"+parseInt(Math.random()*1e11),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum",tags:"bizarre, porn, sex"},us2:{name:"US2",entityType:"us",project:"p_scrum",tags:"porn, young"},us3:{name:"US3",entityType:"us",project:"p_scrum",tags:"porn, sex, boobs"}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,customFields:customFields,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({context:{entity:testData.userStory.us1,configurator:test.get("configurator")}}),next()});var testcase={name:"component.tagsCloud"},checkTag=function($tag,val,rank,test){test.equals($tag.text(),val,"render tag text"),test.equals($tag.hasClass("tau-tag-rank-"+rank),!0,"render tag class")};return testcase["should render valid markup"]=testKit.test(function(test){return testKit.flow(test,{"bus afterRender[0]":function(evt,renderData){var $el=renderData.element,$tags=$el.find(".i-role-tag");test.equals($tags.length,5,"render tags in order of size and name"),checkTag($tags.eq(0),"porn",7,test),checkTag($tags.eq(1),"sex",5,test),checkTag($tags.eq(2),"bizarre",2,test),checkTag($tags.eq(3),"boobs",2,test),checkTag($tags.eq(4),"young",2,test);var $tag=$tags.eq(2);test.equals($tag.hasClass("tau-active"),!1,"not checked"),$tag.click(),test.equals($tag.hasClass("tau-active"),!0,"checked");var $filter=$el.find("[name=filter]");test.equals($filter.length,0,"no filter with little number of tags"),test.done()}})}),testcase})