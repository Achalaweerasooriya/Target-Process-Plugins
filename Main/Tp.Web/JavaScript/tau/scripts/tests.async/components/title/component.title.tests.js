define(["jQuery","tests.async/testkit/testkit.component","tau/components/component.title","tests/common/remoteConstants"],function($,TestKit,Component,Constants){var testKit=new TestKit(Component);testKit.registerSetup("fixtures",function(test,next){var entityTypes={us:{id:Constants.EntityTypes.USERSTORY.id,name:"userStory"}},practices={planning:{id:Constants.Practices.PLANNING.id}},customFields={},processes={scrum:{name:"scream"+parseInt(Math.random()*1e11),practices:["planning"]}},projects={p_scrum:{name:"Project Scrum"+parseInt(Math.random()*1e11),process:"scrum"}},userStories={us1:{name:"US1",entityType:"us",project:"p_scrum"}},fixtures={practices:practices,entityTypes:entityTypes,processes:processes,projects:projects,customFields:customFields,userStories:userStories};test.set("fixtures",fixtures),next()}),testKit.registerSetup("component.initialize",function(test,next){var testData=test.get("data"),componentBus=test.get("componentBus");componentBus.initialize({context:{entity:testData.userStory.us1,applicationContext:{processes:[testData.process.scrum],selectedProjects:[testData.project.p_scrum]},getProject:function(){return testData.project.p_scrum},getTerms:function(){return{}},configurator:test.get("configuratorInstance")}}),next()});var testcase={name:"component.title"};return testcase["should render valid markup and allow to edit"]=testKit.test(function(test){var bus=test.get("bus"),entity=test.get("data").userStory.us1;bus.on("afterRender[0]",function(evt){var $el=evt.data.element,$icon=$el.find("td:first-child em");test.equals($icon.eq(0).attr("class"),"ui-type-icon ui-type-icon-userstory","CSS class is valid"),test.equals($icon.eq(0).text(),"User Story","Term value is valid");var $entityId=$el.find("span.entity-id");test.equals($entityId.text(),"#"+entity.id,"Id is valid");var $link=$entityId.find("a").attr("href");test.equals($link.indexOf("/RestUI/TpView.aspx")>0,!0,"Correct url"),test.equals($link.indexOf("#userstory/"+entity.id)>0,!0,"Correct url");var $entityTitle=$el.find("div.entity-title");test.equals($entityTitle.text(),entity.name,"Title name is valid");var $titleInfo=$entityTitle.find("span.title-info");test.equals($titleInfo.length,0,"no project now"),test.equals($entityTitle.hasClass("editableText"),!0,"Has valid edit-class"),test.equals($entityTitle[0].hasAttribute("contenteditable"),!1,"Not editable"),$entityTitle.click(),test.equals($entityTitle[0].hasAttribute("contenteditable"),!0,"Editable after click"),$entityTitle.focus(),$entityTitle.text("Preved"),$(document).click(),$entityTitle.blur(),test.equals($entityTitle.attr("contenteditable"),"false","Non Editable after click"),test.equals($entityTitle.text(),"Preved","Title name is changed"),$entityTitle.click(),test.equals($entityTitle[0].hasAttribute("contenteditable"),!0,"Editable after click"),$entityTitle.focus(),$entityTitle.text("preved \n moy \r \r\n sved 么么 		"),$(document).click(),$entityTitle.blur(),test.equals($entityTitle.attr("contenteditable"),"false","Non Editable after click"),test.equals($entityTitle.text(),"preved moy sved 么么","Title name is changed"),test.done()})}),testcase})