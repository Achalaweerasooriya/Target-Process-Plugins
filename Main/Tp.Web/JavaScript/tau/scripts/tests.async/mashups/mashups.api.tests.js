define(["tau/slice/api","Underscore","jQuery","tests.async/testkit/testkit.store","tests.async/mashups/data","tau/core/tau","tau/components/component.page.entity","tp/mashups"],function(Slice,_,$,TestKit,fixtures,utils,PageEntity,Mashups){var testKit=new TestKit,tau={mashups:{}};testKit.registerSetup("fixtures",function(test,next){test.set("fixtures",fixtures()),require(["tp/project/view","tp/userStory/view"],function(p,u){tau.mashups.projectView=p,tau.mashups.userStoryView=u,next()})});var testcase={name:"[mashups] api"};return testcase["register additional tab for user story: no reaction for project"]=testKit.test(function(test){var data=test.get("data"),projectID=data.project.p_scrum.id,name=testKit.unique("Mine_Libe_Tab");tau.mashups.userStoryView.addTab(name);var config={entity:{id:projectID,type:"project"}},entityComponent=PageEntity.create(config);entityComponent.initialize(),entityComponent.on("afterRender",function(evt){var $el=evt.data.element,$tab=$('.ui-label:contains("'+name+'")',$el);test.ok($tab.length===0,"no mashup tab is added"),test.done()})}),testcase["register tab for project"]=testKit.test(function(test){var data=test.get("data"),projectID=data.project.p_scrum.id,store=test.get("configurator").getStore(),name=testKit.unique("Mine_Libe_Tab"),contentClass=_.uniqueId("project_content"),headerClass=_.uniqueId("project_header"),fnContentCallback=function(contentElement){$(contentElement).append('<div class="'+contentClass+'"></div>')},fnHeaderCallback=function(contentElement){$(contentElement).append('<span class="'+headerClass+'"></span>')};tau.mashups.projectView.addTab(name,fnContentCallback,fnHeaderCallback);var config={entity:{id:projectID,type:"project"}},entityComponent=PageEntity.create(config);entityComponent.initialize(),entityComponent.on("afterRender",function(evt){var $el=evt.data.element,$tab=$('.ui-label:contains("'+name+'")',$el);test.ok($tab.length===1,"mashup tab is added"),test.ok($("span."+headerClass,$el).length===1,"mashup header function is called"),$tab.click(),test.ok($("."+contentClass,$el).length===1,"mashup tab content is added"),test.done()})}),testcase["register right block for project"]=testKit.test(function(test){var data=test.get("data"),projectID=data.project.p_scrum.id,store=test.get("configurator").getStore(),name=testKit.unique("Mine_Libe_Block"),contentClass=_.uniqueId("project");tau.mashups.projectView.addBlock(name,function(contentElement,context){test.ok(context.entity.id),test.ok(context.entity.type),$(contentElement).append('<div class="'+contentClass+'"></div>')});var config={entity:{id:projectID,type:"project"}},entityComponent=PageEntity.create(config);entityComponent.initialize(),entityComponent.on("afterRender",function(evt){var $el=evt.data.element,$tab=$('.ui-label:contains("'+name+'")',$el);test.ok($tab.length===1,"mashup block is added"),$tab.click(),test.ok($("."+contentClass,$el).length===1,"mashup block content is added"),test.done()})}),testcase["register events"]=testKit.test(function(test){var data=test.get("data"),projectID=data.project.p_scrum.id;tau.mashups.projectView.onRender(function(evt){args=evt,test.done()});var config={entity:{id:projectID,type:"project"}},entityComponent=PageEntity.create(config);entityComponent.initialize()}),testcase})