define(["tests.async/testkit/testkit","tau/configurator","tau/service.container","tau/utils/utils.fixturesLoader.store","tau/core/bus","tau/utils/utils.process","libs.tests/Sinon","tests/common/remoteConstants"],function(TestKit,globalConfigurator,ServiceContainer,DumpLoader,Bus,process,sinon,Constants){var ComponentTestKit=TestKit.extend({init:function(){this._super(),this.registerSetup("options",function(test,next){test.set("real",globalConfigurator.getConfig("real")),test.set("constants",Constants),next()}),this.registerSetup("configurator",function(test,next){var sc=new ServiceContainer;sc.getFeaturesService().setEnabled("quick.add"),sc.getFeaturesService().setEnabled("axes.quick.add"),sc.getFeaturesService().setEnabled("full.counts"),test.set("configurator",sc),test.set("configuratorInstance",sc),next()}),this.registerSetup("fixtures",function(test,next){test.set("fixtures",{}),next()}),this.registerSetup("fixtures.load",function(test,next){var loader=new DumpLoader({store:test.get("configurator").getStore(),real:test.get("real"),commandType:"bulk"});loader.load(test.get("fixtures"),function(err,result){err?next(err):(test.set("data",result.data),next())})}),this.registerSetup("store",function(test,next){var spy=null;test.get("real")==0?spy=sinon.stub(test.get("configurator").getStore().config.proxy.service,"save",function(command){setTimeout(function(){command.callbacks.success({id:command.config.id})},1)}):spy=sinon.spy(test.get("configurator").getStore().config.proxy.service,"save"),test.set("store.save.spy",spy),test.get("configurator").getStore().on({eventName:"failure"},function(e){test.fail("store failure"),test.done()}),next()}),this.registerTeardown("configurator.clear",function(test,next){test.get("configurator").clear(),next()})}});return ComponentTestKit})