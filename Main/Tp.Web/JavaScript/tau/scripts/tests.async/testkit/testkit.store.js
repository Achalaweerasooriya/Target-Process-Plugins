define(["tests.async/testkit/testkit","tau/configurator","tau/service.container","tau/utils/utils.fixturesLoader.store","tau/core/bus","tau/utils/utils.process","libs.tests/Sinon"],function(a,b,c,d,e,f,g){var h=a.extend({init:function(a){this._super(),this.componentClass=a;var e=this;this.registerSetup("options",function(a,c){a.set("real",b.getConfig("real")),c()}),this.registerSetup("configurator",function(a,b){a.set("configurator",new c),b()}),this.registerSetup("fixtures",function(a,b){a.set("fixtures",{}),b()}),this.registerSetup("fixtures.load",function(a,b){var c=new d({store:a.get("configurator").getStore(),real:a.get("real")});c.load(a.get("fixtures"),function(c,d){c?b(c):(a.set("data",d.data),b())})}),this.registerSetup("store",function(a,b){var c=null;a.get("real")==0?c=g.stub(a.get("configurator").getStore().config.proxy.service,"save",function(a){setTimeout(function(){a.callbacks.success({id:a.config.id})},1)}):c=g.spy(a.get("configurator").getStore().config.proxy.service,"save"),a.set("store.save.spy",c),a.get("configurator").getStore().on({eventName:"failure"},function(b){a.fail("store failure"),a.done()}),b()}),this.registerTeardown("configurator.clear",function(a,b){a.get("configurator").clear(),b()})}});return h})