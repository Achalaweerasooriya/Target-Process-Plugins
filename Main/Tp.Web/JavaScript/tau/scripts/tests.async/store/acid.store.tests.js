define(["tau/storage/api","Underscore","tests.async/testkit/testkit.store","tau/core/event","tau/core/external.fake"],function(Storage,_,TestKit,Event,ExternalFake){var testKit=new TestKit;testKit.registerSetup("storage",function(test,next){next()});var testcase={name:"acid.store"};return testcase["should get acid from quiery"]=testKit.test(function(test){const configurator=test.get("configurator");configurator.setHashEncoder(),configurator.setExternal({location:{href:"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#",hash:"#"}});var acidStore=configurator.getAppStateStore();acidStore.get({fields:["acid"],callback:function(result){test.equal(result.acid,"179FA701BC67D3A4B1C8605EB831416E","Acid from url parameters"),test.done()}})}),testcase["should get acid from hash"]=testKit.test(function(test){const configurator=test.get("configurator");configurator.setHashEncoder(),configurator.setExternal({location:{href:"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#",hash:'#appConfig={"acid":"appConfigAcid"}'}});var acidStore=configurator.getAppStateStore();acidStore.get({fields:["acid"],callback:function(result){test.equal(result.acid,"appConfigAcid","Acid from url hash"),test.done()}})}),testcase["should change acid"]=testKit.test(function(test){const configurator=test.get("configurator");configurator.setHashEncoder(),configurator.setExternal({location:{href:"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#",hash:'#appConfig={"acid":"appConfigAcid"}'}});var acidStore=configurator.getAppStateStore();acidStore.set({set:{acid:"new acid"},callback:function(result){var external=configurator.getExternal();test.equal(external.getHash(),'appConfig={"acid":"new acid"}',"Acid in hash is changed"),test.equal(external.getHref(),"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#","Href is valid"),test.done()}})}),testcase["should get acid from request parameters when acid was removed from hash"]=testKit.test(function(test){const configurator=test.get("configurator");configurator.setHashEncoder(),configurator.setExternal({location:{href:"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#",hash:'#appConfig={"acid":"appConfigAcid"}'}});var acidStore=configurator.getAppStateStore();acidStore.get({fields:["acid"],callback:function(){acidStore.bind({fields:["acid"],callback:function(result){test.equal(result.acid,"179FA701BC67D3A4B1C8605EB831416E","Acid is valid"),test.done()}}),configurator.getExternal().setHash(""),configurator.getExternal().triggerHashChange()}})}),testcase["should notify two listeners"]=testKit.test(function(test){const configurator=test.get("configurator");configurator.setHashEncoder(),configurator.setExternal({location:{href:"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#",hash:'#appConfig={"acid":"appConfigAcid"}'}});const acidStore=configurator.getAppStateStore(),bus=new Event;test.expect(1);var testFlow={bus:bus,"bus firstListener_ac1+secondListener_ac1":function(){acidStore.unbind({listener:secondListener}),configurator.getExternal().setHash('#appConfig={"acid":"ac2"}'),configurator.getExternal().triggerHashChange()},"bus firstListener_ac2":function(){test.ok(!0,"First Listener handle acid changed")},"bus secondListener_ac2":function(){console.log("sec"),test.fail("Second Listener should not handle acid changed")}};Event.subscribeOn(testFlow);var secondListener={callback:function(result){bus.fire("secondListener_"+result.acid)}},firstListener={callback:function(result){bus.fire("firstListener_"+result.acid)}};acidStore.bind({fields:["acid"],listener:firstListener,callback:firstListener.callback}),acidStore.bind({fields:["acid"],listener:secondListener,callback:secondListener.callback}),configurator.getExternal().setHash('#appConfig={"acid":"ac1"}'),configurator.getExternal().triggerHashChange(),test.done()}),testcase["should notify about acid changed"]=testKit.test(function(test){const configurator=test.get("configurator");configurator.setHashEncoder(),configurator.setExternal({location:{href:"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#",hash:'#appConfig={"acid":"appConfigAcid"}'}});const acidStore=configurator.getAppStateStore();acidStore.bind({fields:["acid"],callback:function(result){test.equal(result.acid,"changed acid","Acid is valid"),test.done()}}),configurator.getExternal().setHash('#appConfig={"acid":"changed acid"}'),configurator.getExternal().triggerHashChange()}),testcase["should work with encoders"]=testKit.test(function(test){var configurator=test.get("configurator"),encoder=configurator.getHashEncoder();configurator.setExternal({location:{href:"http://yurchenkova:8088/TargetProcess/restui/board.aspx?acid=179FA701BC67D3A4B1C8605EB831416E#",hash:"#appConfig="+encoder.encode({acid:"old acid"})}}),console.log("#appConfig="+encoder.encode({acid:"old acid"}));var acidStore=configurator.getAppStateStore();acidStore.bind({fields:["acid"],callback:function(result){test.equal(result.acid,"new brand acid","Acid is valid"),test.done()}}),configurator.getExternal().setHash("#appConfig="+encoder.encode({acid:"new brand acid"})),configurator.getExternal().triggerHashChange()}),testcase})