//-----------------------------------------------------------------------------
// This code was generated by a tool.
// Changes to this file will be lost if the code is regenerated.
//-----------------------------------------------------------------------------
using System;
using Tp.Integration.Common;

namespace Tp.Integration.Common
{
    /// <summary>
    /// Data Transfer object of Comment. Represents comment attached to entity. Entity may have many comments.
    /// </summary>
	[Serializable]
	public partial class CommentDTO : DataTransferObject
	{
        /// <summary>
        /// Gets or sets the ID.
        /// </summary>
        /// <value>The ID.</value>		
		[PrimaryKey]
		public override int? ID
		{
			get { return CommentID; }
			set
			{
				if (value == int.MinValue)
					value = null;

				CommentID = value;
			}
		}

        /// <summary>
        /// Gets or sets the Comment ID.
        /// </summary>
        /// <value>The Comment ID.</value>
		[PrimaryKey]
		public int? CommentID { get; set; }
		

		/// <summary>
        /// Gets or sets the Description. Text of the comment
        /// </summary>
        /// <value>The Description.</value>
		public String Description { get; set; }

		/// <summary>
        /// Gets or sets the Create Date. Date when comment has been created
        /// </summary>
        /// <value>The Create Date.</value>
		public DateTime? CreateDate { get; set; }
		
		/// <summary>
        /// Gets or sets the General ID. Reference to entity
        /// </summary>
        /// <value>The General ID.</value>
		[ForeignKey]
		public Int32? GeneralID { get; set; }
		
		/// <summary>
        /// Gets or sets the Owner ID. Person who added comment
        /// </summary>
        /// <value>The Owner ID.</value>
		[ForeignKey]
		public Int32? OwnerID { get; set; }
		
		/// <summary>
        /// Gets or sets the Comment ID. Reference to another comment (may be used to create comments threads)
        /// </summary>
        /// <value>The Comment ID.</value>
		[ForeignKey]
		public Int32? ParentID { get; set; }
		

		
		/// <summary>
        /// Gets or sets the General Name. Reference to entity
        /// </summary>
        /// <value>The General Name.</value>
		[RelationName]
		public virtual string GeneralName { get; set; }
		
	}
	
	
	/// <summary>
    /// Comment fields
    /// </summary>
	public enum CommentField
	{
        /// <summary>
        /// Description
        /// </summary>		
		Description,
        /// <summary>
        /// Create Date
        /// </summary>		
		CreateDate,
        /// <summary>
        /// General ID
        /// </summary>		
		GeneralID,
        /// <summary>
        /// Owner ID
        /// </summary>		
		OwnerID,
        /// <summary>
        /// Parent ID
        /// </summary>		
		ParentID,
        /// <summary>
        /// General Name
        /// </summary>		
		GeneralName,
	}
}