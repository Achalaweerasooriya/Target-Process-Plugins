//-----------------------------------------------------------------------------
// This code was generated by a tool.
// Changes to this file will be lost if the code is regenerated.
//-----------------------------------------------------------------------------
using System;
using Tp.Integration.Common;

namespace Tp.Integration.Common
{
    /// <summary>
    /// Data Transfer object of Process. Represents Process. It is possible to create custom processes with defined set of Practices..
    /// </summary>
	[Serializable]
	public partial class ProcessDTO : DataTransferObject
	{
        /// <summary>
        /// Gets or sets the ID.
        /// </summary>
        /// <value>The ID.</value>		
		[PrimaryKey]
		public override int? ID
		{
			get { return ProcessID; }
			set
			{
				if (value == int.MinValue)
					value = null;

				ProcessID = value;
			}
		}

        /// <summary>
        /// Gets or sets the Process ID.
        /// </summary>
        /// <value>The Process ID.</value>
		[PrimaryKey]
		public int? ProcessID { get; set; }
		

		/// <summary>
        /// Gets or sets the Name. Process name. For example: Simplified
        /// </summary>
        /// <value>The Name.</value>
		public String Name { get; set; }

		/// <summary>
        /// Gets or sets the Is Default. Defined default process for system
        /// </summary>
        /// <value>The Is Default.</value>
		public Boolean? IsDefault { get; set; }

		/// <summary>
        /// Gets or sets the Description. Brief description of the process
        /// </summary>
        /// <value>The Description.</value>
		public String Description { get; set; }
		

		
	}
	
	
	/// <summary>
    /// Process fields
    /// </summary>
	public enum ProcessField
	{
        /// <summary>
        /// Name
        /// </summary>		
		Name,
        /// <summary>
        /// Is Default
        /// </summary>		
		IsDefault,
        /// <summary>
        /// Description
        /// </summary>		
		Description,
	}
}